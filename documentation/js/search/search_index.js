var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.444,1,3.346]],["body/controllers/AppController.html",[0,2.426,1,5.622,2,1.977,3,0.111,4,0.099,5,0.099,6,5.394,7,0.503,8,1.93,9,6.049,10,6.101,11,5.959,12,1.153,13,0.009,14,0.553,15,6.101,16,1.573,17,1.077,18,0.52,19,1.347,20,3.52,21,1.538,22,0.293,23,1.153,24,5.407,25,5.394,26,0.124,27,0.371,28,2.55,29,1.843,30,6.101,31,6.101,32,1.608,33,6.101,34,0.007,35,0.007]],["title/modules/AppModule.html",[36,1.257,37,3.346]],["body/modules/AppModule.html",[1,4.592,2,1.673,3,0.064,4,0.057,5,0.057,13,0.009,22,0.352,23,0.665,24,5.005,25,3.111,26,0.071,27,0.214,34,0.005,35,0.005,36,1.725,37,6.957,38,1.431,39,1.431,40,1.513,41,1.513,42,1.431,43,2.63,44,1.513,45,3.111,46,3.111,47,3.111,48,5.289,49,5.289,50,5.289,51,5.289,52,5.289,53,5.289,54,5.289,55,5.289,56,5.289,57,5.289,58,5.289,59,5.289,60,5.289,61,5.289,62,5.289,63,5.289,64,2.22,65,1.513,66,1.471,67,3.519,68,2.427,69,3.519,70,1.707,71,0.812,72,3.519,73,2.482,74,3.519,75,3.519,76,3.519,77,3.519,78,1.322,79,2.482,80,3.519,81,3.519,82,3.519,83,3.519,84,3.519,85,3.519,86,2.134,87,2.679,88,2.348,89,3.519,90,3.519,91,3.519,92,3.519,93,3.519,94,3.519,95,3.519,96,2.642,97,2.642,98,3.519,99,3.519,100,2.044,101,3.519,102,3.519,103,3.519,104,3.519,105,3.519,106,2.777,107,3.519]],["title/injectables/AppService.html",[24,2.974,108,1.099]],["body/injectables/AppService.html",[3,0.116,4,0.103,5,0.103,7,0.525,8,1.98,9,6.924,11,5.418,13,0.009,14,0.577,20,3.611,21,1.604,22,0.249,23,1.202,24,5.126,26,0.129,27,0.387,32,1.677,34,0.007,35,0.007,108,1.894,109,2.518,110,5.625,111,6.362,112,4.486,113,6.362,114,5.139,115,6.362]],["title/classes/Auth.html",[27,0.271,116,3.143]],["body/classes/Auth.html",[3,0.129,4,0.115,5,0.115,13,0.008,26,0.143,27,0.429,34,0.008,35,0.008,116,5.758,117,1.058,118,6.235]],["title/controllers/AuthController.html",[0,1.444,119,3.346]],["body/controllers/AuthController.html",[0,1.728,2,1.728,3,0.097,4,0.087,5,0.087,7,0.44,8,1.774,12,1.3,13,0.009,14,0.624,16,1.774,17,1.215,18,0.586,19,1.519,20,2.507,21,1.735,22,0.326,23,1.008,26,0.108,27,0.324,28,2.229,29,1.611,32,1.814,34,0.006,35,0.006,116,3.761,119,5.166,120,4.716,121,2.768,122,6.084,123,6.084,124,4.716,125,5.693,126,6.882,127,5.334,128,5.334,129,1.063,130,6.882,131,5.334,132,5.559,133,2.768,134,4.716,135,2.674,136,4.308,137,5.084,138,4.716,139,4.716,140,4.308,141,4.308,142,2.36,143,2.432,144,2.588,145,5.334,146,5.334,147,5.334,148,5.334,149,5.334]],["title/modules/AuthModule.html",[36,1.257,48,3.143]],["body/modules/AuthModule.html",[2,2.219,3,0.097,4,0.086,5,0.086,13,0.009,17,0.934,22,0.344,23,1,26,0.107,27,0.322,34,0.006,35,0.006,36,2.141,38,2.152,39,2.152,40,2.276,41,2.276,42,2.152,43,3.263,44,2.276,48,6.312,64,2.944,65,2.276,66,2.212,68,2.488,70,2.568,71,1.221,119,5.698,137,5.681,138,4.68,150,4.68,151,4.68,152,6.004,153,6.004,154,5.293,155,5.293,156,1.168,157,4.347,158,3.532,159,5.293,160,4.275,161,5.293,162,5.293,163,2.654,164,3.974,165,1.756,166,5.293]],["title/injectables/AuthService.html",[108,1.099,137,2.974]],["body/injectables/AuthService.html",[3,0.059,4,0.053,5,0.053,7,0.268,8,1.255,13,0.009,14,0.629,16,1.789,17,1.225,18,0.591,19,1.532,21,1.634,22,0.304,23,0.614,26,0.066,27,0.197,32,1.538,34,0.004,35,0.004,71,0.75,73,2.292,78,1.221,108,1.2,109,1.286,114,2.625,122,4.304,123,4.304,124,4.304,125,4.632,129,1.017,134,2.873,135,1.629,137,3.248,139,2.873,156,1.668,158,2.168,160,2.625,167,2.873,168,4.037,169,4.304,170,4.868,171,1.828,172,2.625,173,2.868,174,7.554,175,6.102,176,3.25,177,3.654,178,3.25,179,3.139,180,4.868,181,3.25,182,5.832,183,4.868,184,3.25,185,0.959,186,4.868,187,4.325,188,3.25,189,3.25,190,2.441,191,1.528,192,0.937,193,1.54,194,1.078,195,1.615,196,2.44,197,2.661,198,2.618,199,2.607,200,4.063,201,4.868,202,2.441,203,3.25,204,3.48,205,3.045,206,4.868,207,5.836,208,3.932,209,3.25,210,3.25,211,3.25,212,3.25,213,3.25,214,3.25,215,3.25,216,3.25,217,2.063,218,2.873,219,2.873,220,2.873,221,3.25,222,3.25,223,4.868,224,2.873,225,1.358,226,4.868,227,2.618,228,2.618,229,2.718,230,2.618,231,1.629,232,2.526,233,2.873,234,1.528,235,3.25,236,1.481,237,3.25,238,3.25,239,1.528,240,3.25,241,1.748,242,3.25,243,1.815,244,3.25,245,2.168,246,1.815,247,0.982,248,1.686,249,0.937,250,1.889,251,1.815,252,3.25,253,2.873,254,4.304,255,3.25,256,4.868,257,4.868,258,3.25,259,4.868,260,3.25,261,3.25,262,3.25,263,3.25,264,3.25,265,3.25,266,2.873,267,3.25,268,3.25,269,2.873,270,3.25,271,3.25,272,1.971]],["title/controllers/AvailabilitiesController.html",[0,1.444,273,3.346]],["body/controllers/AvailabilitiesController.html",[0,1.25,2,1.25,3,0.07,4,0.063,5,0.063,7,0.318,8,1.423,12,1.406,13,0.009,14,0.675,16,1.919,17,1.314,18,0.634,19,1.643,20,3.03,21,1.876,22,0.312,23,0.729,26,0.078,27,0.234,29,1.166,32,1.962,34,0.005,35,0.005,121,2.002,129,1.158,133,2.002,142,3.294,143,1.759,144,1.872,156,1.974,171,1.449,185,2.353,193,2.803,194,1.281,195,1.281,197,1.759,273,4.144,274,3.412,275,2.721,276,2.04,277,2.074,278,2.551,279,2.595,280,2.421,281,3.412,282,5.32,283,3.684,284,2.443,285,3.859,286,2.002,287,3.859,288,1.569,289,3.684,290,3.859,291,1.872,292,3.504,293,7.035,294,3.859,295,1.814,296,5.75,297,3.504,298,3.859,299,2.075,300,1.935,301,1.814,302,1.935,303,4.092,304,3.117,305,1.25,306,4.459,307,1.312,308,1.759,309,1.935,310,1.935,311,3.859,312,3.859,313,2.721,314,3.859,315,3.859,316,3.859,317,2.243,318,3.859,319,2.575,320,3.859]],["title/classes/AvailabilitiesGateway.html",[27,0.271,321,3.346]],["body/classes/AvailabilitiesGateway.html",[3,0.077,4,0.069,5,0.069,7,0.35,8,1.52,12,1.114,13,0.009,14,0.665,16,1.52,17,1.041,18,0.578,19,1.302,21,1.486,22,0.343,23,0.8,26,0.086,27,0.257,29,2.215,34,0.005,35,0.005,71,0.977,78,1.591,117,0.636,129,0.946,142,1.875,143,1.931,144,2.055,168,3.29,171,2.215,173,3.8,185,1.25,191,1.991,192,1.222,193,1.341,194,1.406,195,1.406,197,3.343,249,1.222,275,2.987,284,3.411,302,2.124,303,5.066,304,3.422,308,1.931,309,2.124,310,2.124,321,4.426,322,3.745,323,1.218,324,5.325,325,5.213,326,5.505,327,4.236,328,5.091,329,5.478,330,5.091,331,4.236,332,5.091,333,4.236,334,4.236,335,5.896,336,4.236,337,4.763,338,4.236,339,2.827,340,3.934,341,2.827,342,2.827,343,2.689,344,2.987,345,2.987,346,2.987,347,2.987,348,2.689,349,3.422,350,2.827,351,3.745,352,3.18,353,3.422,354,3.18,355,3.18,356,2.987,357,3.422,358,3.422,359,3.422,360,3.422,361,4.236,362,4.236]],["title/modules/AvailabilitiesModule.html",[36,1.257,49,3.143]],["body/modules/AvailabilitiesModule.html",[2,2.219,3,0.097,4,0.086,5,0.086,13,0.009,17,1.34,22,0.344,23,1,26,0.107,27,0.322,34,0.006,35,0.006,36,2.141,38,2.152,39,2.152,40,2.276,41,2.276,42,2.152,43,3.263,44,2.276,49,6.004,64,2.944,65,2.276,66,2.212,68,2.488,70,2.568,71,1.221,78,1.988,163,2.654,165,2.519,249,1.527,273,5.698,284,2.342,303,5.405,304,4.275,321,5.141,345,3.733,347,3.733,349,4.275,363,4.68,364,4.68,365,5.293,366,5.293,367,4.569,368,4.347,369,4.347,370,5.293,371,4.275,372,3.974,373,4.275]],["title/injectables/AvailabilitiesService.html",[108,1.099,303,2.83]],["body/injectables/AvailabilitiesService.html",[3,0.046,4,0.041,5,0.041,7,0.209,8,1.035,13,0.009,14,0.597,16,1.699,17,1.163,18,0.561,19,1.455,21,1.561,22,0.289,23,0.479,26,0.051,27,0.154,29,1.507,32,1.497,34,0.004,35,0.004,71,0.584,78,0.951,100,1.003,108,0.99,109,1.003,129,1.03,135,1.27,156,1.801,168,3.958,171,1.509,173,3.344,179,3.055,185,1.945,190,3.462,191,1.191,192,0.731,193,2.607,194,0.841,195,0.841,197,2.275,198,3.055,200,3.714,204,3.79,205,3.328,217,2.55,225,1.679,227,3.055,228,3.055,229,3.172,230,3.055,231,1.27,232,2.084,246,4.601,247,1.213,248,2.084,249,2.417,250,2.901,251,2.787,275,5.439,276,1.271,277,1.509,278,1.59,280,2.326,281,3.551,282,4.397,284,2.209,286,2.084,288,1.633,295,1.191,296,5.051,301,1.888,303,2.55,305,0.821,306,3.244,307,0.861,328,3.015,329,4.032,330,3.747,344,1.786,345,1.786,346,1.786,347,1.786,348,1.608,349,2.046,352,1.902,353,2.046,354,1.902,374,2.24,375,4.017,376,2.533,377,2.533,378,2.533,379,4.017,380,2.533,381,2.533,382,2.533,383,2.533,384,3.055,385,3.055,386,2.533,387,2.533,388,1.229,389,1.536,390,3.747,391,3.747,392,3.301,393,2.684,394,3.544,395,1.949,396,4.017,397,3.551,398,4.017,399,2.24,400,2.24,401,2.533,402,2.533,403,2.24,404,1.155,405,2.533,406,2.533,407,2.533,408,2.533,409,2.68,410,2.334,411,2.55]],["title/classes/Availability.html",[27,0.271,284,1.972]],["body/classes/Availability.html",[3,0.068,4,0.061,5,0.061,7,0.309,12,1.645,13,0.009,14,0.789,18,0.773,22,0.248,26,0.109,27,0.228,34,0.005,35,0.005,71,0.865,78,2.764,117,0.562,129,1.215,156,1.532,165,1.794,192,1.081,225,3.381,247,2.223,249,1.559,284,2.392,323,1.117,348,2.379,388,3.076,389,3.845,404,2.89,412,3.027,413,5.122,414,6.341,415,6.341,416,5.122,417,6.341,418,6.341,419,6.341,420,2.578,421,3.41,422,4.701,423,6.093,424,4.5,425,3.748,426,4.373,427,3.748,428,3.748,429,5.311,430,3.748,431,3.748,432,3.748,433,3.748,434,3.748,435,3.748,436,3.748,437,3.748,438,3.748,439,3.748,440,3.748,441,3.027,442,2.541]],["title/classes/Availability-1.html",[27,0.226,284,1.642,443,3.281]],["body/classes/Availability-1.html",[3,0.067,4,0.06,5,0.06,7,0.305,12,1.613,13,0.009,14,0.774,18,0.767,22,0.21,26,0.127,27,0.224,34,0.005,35,0.005,71,0.852,78,2.749,100,1.462,117,0.554,129,0.962,156,1.522,165,1.775,192,1.066,199,1.388,225,3.189,247,2.21,249,2.27,272,3.244,284,2.367,323,1.105,348,2.345,367,2.465,388,3.052,404,2.867,413,5.08,416,5.08,420,2.557,421,3.382,422,4.683,424,4.672,426,4.215,429,5.115,442,2.515,444,2.773,445,5.08,446,4.253,447,5.561,448,4.046,449,4.182,450,3.694,451,4.435,452,3.694,453,3.482,454,3.694,455,3.694,456,3.694,457,3.694,458,3.694,459,3.694,460,5.35,461,3.694,462,3.694,463,3.694,464,3.694,465,1.987,466,1.987,467,1.142,468,1.987,469,4.103,470,3.266]],["title/classes/Booking.html",[27,0.271,471,3.346]],["body/classes/Booking.html",[3,0.129,4,0.115,5,0.115,13,0.008,26,0.143,27,0.429,34,0.008,35,0.008,117,1.058,471,6.13,472,6.235]],["title/classes/BookingGateway.html",[27,0.271,473,3.346]],["body/classes/BookingGateway.html",[3,0.082,4,0.073,5,0.073,7,0.372,8,1.585,12,1.488,13,0.009,14,0.737,16,2.031,17,1.391,18,0.671,19,1.739,21,1.986,22,0.295,26,0.091,27,0.274,28,1.882,29,1.36,32,2.076,34,0.006,35,0.006,117,0.675,171,1.691,185,2.221,276,1.946,277,2.826,278,2.434,279,2.89,280,2.31,288,1.831,291,2.184,305,1.459,307,1.531,340,4.103,341,3.004,342,3.004,343,2.858,473,4.616,474,3.98,475,4.502,476,5.426,477,4.502,478,3.98,479,5.426,480,6.149,481,4.502,482,6.149,483,4.502,484,3.306,485,6.149,486,4.502,487,6.149,488,4.502,489,4.502,490,5.869,491,6.149,492,4.502,493,3.98,494,4.967,495,3.637,496,4.502,497,4.502,498,3.98,499,4.502,500,3.98,501,4.502,502,3.98,503,4.502]],["title/modules/BookingModule.html",[36,1.257,50,3.143]],["body/modules/BookingModule.html",[3,0.112,4,0.099,5,0.099,13,0.009,22,0.318,23,1.156,26,0.124,27,0.372,34,0.007,35,0.007,36,2.288,38,2.488,39,2.488,40,2.63,41,2.63,42,2.488,43,3.488,44,2.63,50,6.23,64,3.225,65,2.63,66,2.557,68,2.876,473,5.632,476,5.895,493,5.41,504,5.41,505,5.41,506,6.119,507,6.119]],["title/injectables/BookingService.html",[108,1.099,476,2.974]],["body/injectables/BookingService.html",[3,0.087,4,0.077,5,0.077,7,0.392,8,1.643,13,0.009,14,0.727,16,1.983,17,1.358,18,0.655,19,1.698,21,2.127,22,0.282,23,0.897,26,0.096,27,0.289,32,2.115,34,0.006,35,0.006,108,1.572,109,1.88,129,1.12,185,2.438,205,1.985,276,2.017,277,2.889,278,2.523,279,2.997,280,2.395,288,2.592,291,3.093,295,2.997,305,1.539,307,1.614,471,6.023,476,4.254,478,5.636,479,5.354,484,3.533,490,5.951,494,5.149,508,4.199,509,4.749,510,4.749,511,4.749,512,4.749,513,4.749,514,4.315,515,3.565,516,3.349,517,3.349]],["title/classes/Chat.html",[27,0.271,518,2.974]],["body/classes/Chat.html",[3,0.081,4,0.072,5,0.122,7,0.366,12,1.566,13,0.009,14,0.751,18,0.765,22,0.272,26,0.141,27,0.269,34,0.006,35,0.006,71,1.023,100,1.755,112,4.9,117,0.665,129,1.26,156,1.651,165,2.02,192,1.756,199,1.666,247,2.367,272,2.689,323,1.257,420,2.825,422,4.818,424,4.353,426,4.096,442,2.861,448,3.927,449,3.749,453,3.582,465,2.385,466,2.385,467,1.371,468,2.385,469,3.737,518,4.061,519,3.329,520,6.143,521,4.435,522,4.435,523,4.435,524,6.086,525,4.435,526,4.435,527,4.292,528,4.435,529,4.435,530,4.435,531,3.582,532,3.329,533,3.921]],["title/controllers/ChatController.html",[0,1.444,534,3.346]],["body/controllers/ChatController.html",[0,2.279,2,1.788,3,0.101,4,0.09,5,0.09,7,0.455,8,1.813,9,6.253,11,4.959,12,1.042,13,0.009,14,0.5,16,1.422,17,0.974,18,0.47,19,1.218,20,3.306,21,1.391,22,0.337,23,1.042,26,0.112,27,0.335,28,2.306,29,1.667,32,1.454,34,0.007,35,0.007,142,3.112,143,2.515,144,2.677,156,1.799,193,2.58,194,1.831,195,1.831,302,2.767,305,1.788,308,2.515,309,2.767,310,2.767,518,4.693,534,5.28,535,4.878,536,5.518,537,5.175,538,5.518,539,4.914,540,4.457,541,4.142,542,5.518]],["title/classes/ChatGateway.html",[27,0.271,543,3.346]],["body/classes/ChatGateway.html",[3,0.094,4,0.083,5,0.083,7,0.424,8,1.731,12,1.269,13,0.009,14,0.719,16,1.731,17,1.185,18,0.637,19,1.482,21,1.693,22,0.323,26,0.104,27,0.312,28,2.147,29,1.551,32,1.354,34,0.006,35,0.006,117,0.771,171,1.929,276,2.125,305,1.664,307,1.746,323,1.387,324,5.635,326,5.956,332,5.616,339,3.427,340,4.481,341,3.427,342,3.427,343,3.26,350,3.427,355,3.856,356,3.622,495,4.149,537,5.462,539,5.361,540,4.149,541,5.041,543,5.041,544,4.541,545,5.136,546,5.136,547,5.136,548,4.541,549,6.715,550,5.136,551,5.136,552,3.622,553,5.136,554,5.136]],["title/modules/ChatModule.html",[36,1.257,51,3.143]],["body/modules/ChatModule.html",[2,2.318,3,0.103,4,0.092,5,0.092,13,0.009,17,1.001,22,0.34,23,1.071,26,0.115,27,0.344,34,0.007,35,0.007,36,2.21,38,2.305,39,2.305,40,2.437,41,2.437,42,2.305,43,3.37,44,2.437,51,6.113,64,3.075,65,2.437,66,2.369,68,2.664,70,2.75,71,1.308,163,2.842,165,1.881,518,3.782,532,5.37,534,5.885,539,5.503,540,4.579,543,5.37,555,5.011,556,5.011,557,5.668,558,5.668,559,5.668,560,5.011,561,5.668]],["title/injectables/ChatService.html",[108,1.099,539,2.83]],["body/injectables/ChatService.html",[3,0.081,4,0.072,5,0.099,7,0.368,8,1.573,13,0.009,14,0.679,16,1.931,17,1.322,18,0.638,19,1.654,21,1.755,22,0.325,23,0.841,26,0.09,27,0.271,29,1.345,32,1.835,34,0.006,35,0.006,71,1.028,108,1.505,109,1.763,112,3.141,129,0.622,156,1.654,171,2.293,173,3.315,190,2.233,191,2.094,192,1.285,193,2.626,194,1.478,195,1.478,197,2.03,198,2.395,199,1.673,204,2.233,205,2.91,227,2.395,228,2.395,229,2.487,230,2.395,232,3.613,247,1.844,248,3.167,276,1.932,305,1.443,307,1.514,514,2.395,515,3.344,518,4.647,531,3.598,537,5.365,539,3.875,541,4.582,548,5.396,552,3.141,560,3.938,562,3.938,563,6.104,564,6.104,565,4.454,566,4.454,567,6.104,568,4.454,569,6.104,570,4.454,571,6.104,572,4.454,573,4.454,574,4.454,575,6.104,576,4.454,577,4.454,578,4.454,579,4.454,580,2.827]],["title/classes/CreateAuthDto.html",[27,0.271,125,2.974]],["body/classes/CreateAuthDto.html",[3,0.111,4,0.099,5,0.099,7,0.503,12,1.415,13,0.008,14,0.679,18,0.638,22,0.239,26,0.124,27,0.455,29,2.666,34,0.007,35,0.007,117,0.915,125,4.997,129,1.179,202,4.063,323,1.547,581,5.394,582,6.083,583,5.394,584,6.101,585,4.071,586,6.101,587,3.809,588,6.621,589,3.314,590,2.352]],["title/classes/CreateAvailabilityDto.html",[27,0.271,282,2.974]],["body/classes/CreateAvailabilityDto.html",[3,0.1,4,0.089,5,0.089,7,0.452,12,1.587,13,0.009,14,0.761,18,0.716,22,0.214,26,0.111,27,0.425,34,0.006,35,0.006,78,2.897,117,0.821,129,1.199,225,3.397,282,4.669,323,1.445,413,6.23,416,6.23,446,4.482,447,6.819,587,3.289,589,3.597,590,2.11,591,7.595,592,4.422,593,8.4,594,5.474,595,5.474,596,3.181,597,5.474,598,5.439,599,5.474,600,5.474]],["title/classes/CreateBookingDto.html",[27,0.271,479,2.974]],["body/classes/CreateBookingDto.html",[3,0.128,4,0.114,5,0.114,13,0.008,26,0.142,27,0.427,34,0.008,35,0.008,117,1.055,479,5.438,601,6.214,602,5.677]],["title/classes/CreateChatDto.html",[27,0.271,537,2.83]],["body/classes/CreateChatDto.html",[3,0.109,4,0.097,5,0.136,7,0.493,12,1.517,13,0.009,14,0.728,18,0.684,22,0.234,26,0.121,27,0.449,34,0.007,35,0.007,112,5.663,117,0.897,129,1.226,323,1.528,537,4.695,587,3.775,589,3.816,590,2.304,596,4.298,603,7.418,604,4.829,605,5.978,606,5.978,607,5.978]],["title/classes/CreateNotificationDto.html",[27,0.271,608,2.974]],["body/classes/CreateNotificationDto.html",[3,0.128,4,0.114,5,0.114,13,0.008,26,0.142,27,0.427,34,0.008,35,0.008,117,1.055,608,5.438,609,6.214,610,5.677]],["title/classes/CreatePercelDto.html",[27,0.271,611,2.974]],["body/classes/CreatePercelDto.html",[3,0.073,4,0.065,5,0.065,7,0.331,12,1.638,13,0.009,14,0.786,18,0.739,22,0.157,26,0.081,27,0.345,29,2.807,34,0.005,35,0.005,117,0.601,129,1.277,323,1.171,587,4.075,589,3.895,590,1.545,596,4.99,611,3.784,612,7.727,613,3.237,614,5.819,615,5.819,616,5.819,617,5.819,618,5.819,619,5.819,620,5.819,621,5.819,622,5.819,623,5.819,624,5.819,625,5.819,626,4.008,627,4.008,628,4.008,629,4.008,630,4.008,631,4.008,632,4.008,633,4.008,634,4.008,635,4.008,636,4.008,637,4.008]],["title/classes/CreatePresenceDto.html",[27,0.271,638,3.143]],["body/classes/CreatePresenceDto.html",[3,0.128,4,0.114,5,0.114,13,0.008,26,0.142,27,0.427,34,0.008,35,0.008,117,1.055,638,5.747,639,6.214,640,5.677]],["title/classes/CreateProfileDto.html",[27,0.271,641,3.143]],["body/classes/CreateProfileDto.html",[3,0.128,4,0.114,5,0.114,13,0.008,26,0.142,27,0.427,34,0.008,35,0.008,117,1.055,641,5.747,642,6.214,643,5.677]],["title/classes/CreateRouteDto.html",[27,0.271,644,2.974]],["body/classes/CreateRouteDto.html",[3,0.111,4,0.099,5,0.099,7,0.502,12,1.412,13,0.009,14,0.678,18,0.689,22,0.238,26,0.123,27,0.454,34,0.007,35,0.007,117,0.913,129,1.129,323,1.544,484,2.473,587,3.514,590,2.345,598,5.953,644,4.988,645,7.155,646,4.913,647,6.075,648,7.155,649,6.083,650,6.083,651,3.535,652,6.083,653,6.083,654,6.083]],["title/classes/CreateSaccoDto.html",[27,0.271,655,2.974]],["body/classes/CreateSaccoDto.html",[3,0.099,4,0.088,5,0.088,7,0.447,12,1.582,13,0.009,14,0.759,17,1.355,18,0.713,19,1.534,22,0.212,26,0.11,27,0.422,34,0.006,35,0.006,117,0.813,129,1.254,239,3.607,241,4.127,323,1.436,585,5.587,587,4.027,589,3.791,590,2.088,655,4.638,656,7.574,657,4.376,658,6.199,659,6.785,660,5.417,661,5.417,662,5.417,663,5.417,664,5.417]],["title/classes/CreateStationDto.html",[27,0.271,665,2.974]],["body/classes/CreateStationDto.html",[3,0.099,4,0.088,5,0.088,7,0.449,12,1.584,13,0.009,14,0.76,17,1.358,18,0.714,22,0.213,26,0.11,27,0.424,34,0.006,35,0.006,117,0.817,129,1.255,239,3.616,323,1.44,587,3.942,589,3.711,590,2.099,596,4.714,598,5.425,647,5.776,665,4.653,666,7.585,667,4.399,668,6.214,669,6.214,670,5.446,671,5.446,672,5.446,673,5.446,674,5.446]],["title/classes/CreateTicketDto.html",[27,0.271,675,2.974]],["body/classes/CreateTicketDto.html",[3,0.073,4,0.065,5,0.065,7,0.331,12,1.652,13,0.009,14,0.792,18,0.745,22,0.157,26,0.081,27,0.345,34,0.005,35,0.005,117,0.602,129,1.271,234,3.097,236,3.003,239,3.097,241,3.543,284,2.915,323,1.173,420,2.679,484,2.309,527,4.004,587,4.076,589,3.896,590,1.548,596,4.992,675,3.789,676,7.785,677,3.243,678,5.825,679,6.589,680,5.825,681,4.396,682,5.825,683,4.015,684,4.015,685,4.946,686,4.015,687,4.015,688,4.015,689,4.015,690,4.015,691,4.015,692,4.015,693,4.015,694,4.015,695,7.845,696,5.679,697,5.679,698,5.679,699,5.679,700,4.015,701,4.015]],["title/classes/CreateUserDto.html",[27,0.271,702,2.974]],["body/classes/CreateUserDto.html",[3,0.085,4,0.076,5,0.076,7,0.385,12,1.587,13,0.009,14,0.761,18,0.716,22,0.183,26,0.094,27,0.383,34,0.006,35,0.006,117,0.7,129,1.241,156,1.39,202,3.575,234,3.352,236,3.251,239,3.352,241,3.835,243,3.982,245,4.758,249,2.203,323,1.301,384,3.387,385,3.387,393,3.387,394,4.106,395,3.056,587,3.863,589,3.717,590,1.798,596,4.634,685,5.353,702,4.202,703,7.553,704,3.767,705,4.664,706,4.123,707,4.664,708,4.664,709,4.664,710,4.664,711,5.087,712,3.66,713,4.664,714,4.664,715,4.664,716,4.664]],["title/classes/CreateVehicleDto.html",[27,0.271,717,2.974]],["body/classes/CreateVehicleDto.html",[3,0.072,4,0.064,5,0.064,7,0.326,12,1.617,13,0.009,14,0.776,18,0.748,19,1.238,22,0.22,26,0.08,27,0.341,34,0.005,35,0.005,66,2.345,117,0.592,129,1.207,173,2.888,192,1.139,249,1.618,323,1.159,409,3.743,420,2.654,429,3.561,446,3.26,448,2.722,467,1.22,484,2.89,587,3.922,589,3.858,590,1.521,596,4.13,598,3.956,681,4.355,717,3.743,718,7.643,719,3.188,720,6.527,721,5.77,722,5.77,723,5.77,724,4.602,725,6.527,726,5.77,727,3.947,728,3.947,729,3.947,730,3.947,731,3.947,732,3.489,733,3.947,734,3.947,735,3.947,736,3.947,737,5.61,738,5.61,739,5.61,740,3.947,741,7.107,742,5.61,743,5.61,744,5.61,745,5.61,746,5.61,747,3.947,748,3.947,749,4.96]],["title/classes/CreateVehicleOwnerDto.html",[27,0.271,750,2.974]],["body/classes/CreateVehicleOwnerDto.html",[3,0.087,4,0.078,5,0.078,7,0.395,12,1.597,13,0.009,14,0.766,18,0.72,19,1.414,22,0.251,26,0.097,27,0.389,34,0.006,35,0.006,78,3.227,117,0.717,129,1.26,192,1.379,202,3.621,234,3.394,236,3.292,239,3.394,241,3.884,243,4.033,323,1.323,467,1.478,583,4.228,585,4.274,587,3.974,588,5.662,589,3.802,590,1.843,596,4.197,658,5.833,750,4.274,751,4.798,752,7.596,753,3.863,754,4.782,755,4.782,756,4.782,757,4.782,758,4.782,759,4.782,760,4.782]],["title/classes/Customer.html",[27,0.271,761,3.6]],["body/classes/Customer.html",[3,0.089,4,0.08,5,0.08,7,0.405,12,1.607,13,0.009,14,0.771,18,0.736,22,0.255,26,0.132,27,0.298,34,0.006,35,0.006,71,1.132,100,3.3,117,0.736,129,1.233,165,2.162,192,1.415,205,2.05,225,3.39,234,3.438,236,3.335,323,1.346,389,4.436,421,3.934,426,4.32,442,3.062,449,2.46,451,3.46,453,2.171,761,5.262,762,3.963,763,6.467,764,5.908,765,6.467,766,4.906,767,4.906,768,4.643,769,4.906,770,4.906,771,4.906,772,4.906,773,4.906,774,4.337,775,4.085]],["title/classes/FindStationAgentsDto.html",[27,0.271,776,3.143]],["body/classes/FindStationAgentsDto.html",[3,0.118,4,0.105,5,0.105,7,0.533,12,1.221,13,0.008,14,0.586,18,0.55,22,0.253,26,0.131,27,0.471,34,0.007,35,0.007,117,0.969,129,1.082,249,2.542,323,1.602,589,3.677,590,2.491,776,5.468,777,6.263,778,5.712,779,6.461]],["title/injectables/JwtGuard.html",[108,1.099,308,2.032]],["body/injectables/JwtGuard.html",[3,0.12,4,0.107,5,0.107,13,0.009,14,0.595,22,0.307,23,1.24,26,0.133,27,0.399,34,0.007,35,0.007,108,1.93,109,2.598,171,3.142,308,3.568,395,3.184,780,5.802,781,6.563,782,6.563,783,4.927,784,2.821,785,6.563]],["title/classes/JwtPayload.html",[27,0.271,193,1.411]],["body/classes/JwtPayload.html",[3,0.075,4,0.067,5,0.067,7,0.341,13,0.009,14,0.796,18,0.748,19,1.747,22,0.262,26,0.084,27,0.251,34,0.005,35,0.005,78,2.512,117,0.619,129,1.275,156,1.278,192,1.191,193,1.832,194,2.934,202,3.353,231,3.353,233,5.912,234,3.143,236,3.049,239,3.143,241,3.596,243,3.734,245,4.462,247,2.02,249,2.345,251,4.539,323,1.196,384,3.113,385,3.113,393,3.113,394,3.899,395,2.809,423,5.945,448,2.809,467,1.276,711,4.676,712,3.364,786,3.649,787,4.127,788,4.127,789,4.127,790,4.127,791,4.127,792,4.127,793,4.127,794,4.127,795,4.127,796,4.127,797,4.127,798,4.127,799,4.127,800,3.334]],["title/injectables/JwtStrategy.html",[108,1.099,152,3.143]],["body/injectables/JwtStrategy.html",[3,0.103,4,0.092,5,0.092,7,0.467,8,1.841,13,0.009,14,0.647,16,1.841,17,1.261,18,0.608,19,1.576,21,1.425,22,0.322,23,1.068,26,0.114,27,0.343,28,2.363,32,1.49,34,0.007,35,0.007,73,3.986,108,1.761,109,2.237,152,5.036,171,2.123,175,6.997,195,2.37,395,2.743,783,4.244,784,2.43,801,4.998,802,6.314,803,4.998,804,5.653,805,7.142,806,5.653,807,6.314,808,4.998,809,6.314,810,4.566,811,5.769,812,4.998,813,4.998,814,4.998,815,5.653]],["title/classes/LipaDto.html",[27,0.271,816,2.974]],["body/classes/LipaDto.html",[3,0.092,4,0.082,5,0.082,7,0.416,12,1.546,13,0.009,14,0.742,18,0.697,22,0.197,26,0.102,27,0.403,34,0.006,35,0.006,86,5.094,87,4.67,117,0.756,129,1.227,202,3.716,234,3.483,236,3.378,239,3.483,323,1.369,484,2.695,585,3.361,587,3.948,589,3.717,590,1.942,596,4.306,749,5.861,816,4.423,817,4.517,818,7.426,819,4.453,820,5.986,821,5.037,822,5.037,823,5.037,824,5.037,825,5.037,826,5.037,827,5.037,828,4.068]],["title/classes/LipaNaMpesaCallbackDto.html",[27,0.271,829,3.143]],["body/classes/LipaNaMpesaCallbackDto.html",[3,0.114,4,0.102,5,0.102,7,0.517,13,0.008,14,0.568,18,0.534,22,0.298,26,0.127,27,0.381,34,0.007,35,0.007,86,3.8,87,4.534,117,0.94,276,1.983,323,1.572,467,1.937,784,2.694,816,4.181,817,4.094,829,5.368,830,6.73,831,5.368,832,5.54,833,6.623,834,6.266,835,2.857,836,2.773,837,5.061,838,6.266]],["title/controllers/LipaNaMpesaController.html",[0,1.444,839,3.346]],["body/controllers/LipaNaMpesaController.html",[0,1.216,2,1.216,3,0.068,4,0.061,5,0.061,7,0.31,8,1.395,12,1.449,13,0.009,14,0.695,16,1.898,17,1.3,18,0.627,19,1.626,20,2.983,21,1.934,22,0.31,23,0.709,26,0.076,27,0.228,28,1.569,29,1.134,32,2.022,34,0.005,35,0.005,86,3.849,87,4.644,88,5.276,121,1.948,129,1.151,133,1.948,142,2.395,143,1.711,144,1.822,156,1.533,185,2.264,193,2.198,194,1.246,195,1.246,277,2.609,278,2.142,279,2.544,280,2.384,288,1.527,289,3.612,291,1.822,295,1.765,299,2.019,300,1.882,301,1.765,302,1.882,305,1.216,308,1.711,309,1.882,310,1.882,317,2.182,319,2.505,816,4.635,817,4.252,829,4.899,831,4.476,837,3.033,839,4.063,840,3.319,841,4.785,842,5.611,843,3.754,844,3.754,845,3.754,846,5.413,847,3.754,848,6.947,849,5.413,850,3.754,851,3.754,852,3.754,853,4.785,854,3.754,855,6.142,856,5.413,857,3.754,858,4.029,859,3.033,860,3.319,861,3.319,862,3.754,863,3.319,864,3.754,865,3.754,866,3.754,867,3.754,868,2.505,869,3.754,870,3.754,871,3.754]],["title/classes/LipaNaMpesaGateway.html",[27,0.271,872,3.346]],["body/classes/LipaNaMpesaGateway.html",[3,0.073,4,0.065,5,0.065,7,0.329,8,1.458,12,1.241,13,0.009,14,0.683,16,1.693,17,1.159,18,0.701,19,1.45,21,1.656,22,0.315,26,0.081,27,0.243,29,1.708,32,1.052,34,0.005,35,0.005,71,0.921,86,2.421,87,4.565,88,5.225,96,2.997,97,2.997,117,0.599,129,0.789,168,3.799,171,2.124,173,3.161,179,2.147,185,1.178,191,1.877,192,1.152,197,2.578,323,1.168,324,5.225,325,5.806,326,5.363,332,4.93,339,2.664,340,3.774,341,2.664,342,3.774,343,2.534,350,2.664,351,3.53,355,2.997,356,2.815,357,3.225,358,3.225,359,3.225,360,3.225,420,1.623,651,4.152,817,4.211,831,2.815,858,4.971,859,3.225,872,4.246,873,3.53,874,5.656,875,3.992,876,4.535,877,3.992,878,3.992,879,3.992,880,5.656,881,3.992,882,5.806,883,5.656,884,5.656,885,3.992,886,3.992,887,2.997,888,3.225,889,3.225,890,3.992,891,3.53,892,4.246,893,4.568,894,5.656,895,5.656,896,5.656,897,5.656,898,3.992,899,3.992]],["title/modules/LipaNaMpesaModule.html",[36,1.257,52,3.143]],["body/modules/LipaNaMpesaModule.html",[2,2.263,3,0.1,4,0.089,5,0.089,13,0.009,17,0.964,22,0.336,23,1.031,26,0.111,27,0.332,34,0.006,35,0.006,36,2.172,38,2.22,39,2.22,40,2.347,41,2.347,42,2.22,43,3.312,44,2.347,52,6.054,64,3.003,65,2.347,66,2.282,68,2.566,70,2.649,71,1.26,86,4.671,87,4.454,88,3.643,163,2.738,165,1.812,817,2.936,839,5.783,858,5.45,859,4.41,872,5.244,876,3.466,888,4.41,889,4.41,900,4.827,901,4.827,902,5.46,903,5.46,904,5.244,905,5.46,906,5.46]],["title/injectables/LipaNaMpesaService.html",[108,1.099,858,2.83]],["body/injectables/LipaNaMpesaService.html",[3,0.041,4,0.037,5,0.037,7,0.188,8,0.949,13,0.009,14,0.678,16,1.704,17,1.167,18,0.649,19,1.459,21,1.885,22,0.286,23,0.429,26,0.046,27,0.138,29,2.149,32,1.655,34,0.003,35,0.003,71,0.524,86,1.378,87,4.521,88,5.085,96,1.706,97,1.706,108,0.908,109,0.9,114,1.836,116,2.597,129,0.993,133,1.179,135,1.14,156,1.178,168,3.451,171,1.383,173,2.362,179,1.98,185,1.853,190,1.14,191,1.068,192,0.656,193,1.689,194,0.754,195,0.754,197,1.679,198,1.222,199,2.005,200,2.496,202,1.14,204,2.94,205,2.624,225,0.95,227,1.98,228,1.98,229,2.056,230,1.98,232,1.179,234,1.068,236,1.036,239,1.068,247,0.686,248,1.179,249,0.656,250,1.321,254,3.256,272,4.009,277,2.005,278,1.457,279,1.731,280,1.383,288,1.497,291,1.787,295,1.731,300,2.327,305,0.736,323,0.761,385,1.222,410,1.321,411,1.443,453,2.054,484,2.972,514,2.87,516,1.603,517,1.603,582,2.764,651,2.14,816,4.189,817,4.098,820,2.974,829,3.764,831,3.273,833,1.836,837,1.836,841,3.256,842,3.256,853,3.256,855,4.104,858,2.338,860,2.009,861,2.009,876,2.947,882,3.256,887,1.706,888,1.836,889,1.836,891,2.009,892,4.713,893,4.311,907,2.009,908,4.642,909,4.642,910,4.642,911,3.682,912,2.273,913,4.642,914,5.337,915,2.273,916,2.273,917,2.273,918,3.682,919,2.273,920,3.682,921,2.273,922,3.682,923,4.642,924,5.337,925,2.273,926,3.682,927,2.273,928,3.682,929,3.682,930,3.682,931,3.682,932,2.273,933,4.104,934,3.682,935,2.273,936,3.682,937,3.682,938,2.273,939,3.682,940,2.273,941,4.104,942,2.764,943,2.273,944,1.836,945,2.273,946,4.642,947,2.273,948,2.273,949,2.273,950,2.273,951,2.273,952,2.273,953,2.273,954,3.682,955,3.682,956,3.682,957,3.682,958,5.185,959,2.273,960,2.273,961,2.273,962,2.273,963,2.273,964,2.273,965,3.682,966,2.273,967,2.273,968,3.682,969,2.273,970,4.642,971,2.273,972,3.256,973,2.273,974,2.273,975,2.273,976,2.273,977,1.443,978,2.273,979,2.273,980,2.273,981,3.682,982,3.682,983,2.273,984,2.273,985,2.273,986,2.273,987,2.273,988,3.682,989,1.836,990,2.273,991,2.273,992,2.009,993,2.273,994,2.009,995,2.273,996,2.009,997,2.273,998,2.009,999,2.273,1000,2.009,1001,2.273,1002,2.273,1003,2.273,1004,2.273,1005,5.337,1006,2.273]],["title/classes/LipaNaMpesaTransaction.html",[27,0.271,876,2.83]],["body/classes/LipaNaMpesaTransaction.html",[3,0.046,4,0.041,5,0.041,7,0.206,11,2.803,12,1.611,13,0.009,14,0.773,18,0.774,19,0.877,22,0.156,26,0.1,27,0.152,34,0.004,35,0.004,71,0.577,87,4.721,100,0.989,117,0.375,129,1.293,156,0.877,165,1.319,192,0.721,199,0.939,202,2.481,234,2.326,236,2.255,239,2.326,249,1.427,272,4.659,323,0.821,385,2.661,420,2.012,422,4.955,424,2.137,426,4.159,429,2.523,442,1.868,448,2.735,449,4.032,453,3.862,465,1.344,466,1.344,467,0.773,468,1.344,469,2.661,484,2.899,527,3.976,817,4.61,820,3.996,833,3.996,876,3.141,887,1.876,892,3.714,904,1.876,972,4.374,989,3.996,992,4.374,994,4.374,996,4.374,998,4.374,1000,4.374,1007,6.436,1008,1.876,1009,4.948,1010,4.374,1011,4.374,1012,4.374,1013,2.5,1014,2.5,1015,2.5,1016,2.5,1017,2.5,1018,2.5,1019,2.5,1020,2.5,1021,2.5,1022,2.5,1023,2.5,1024,2.5,1025,2.5,1026,2.5,1027,2.5,1028,2.5,1029,2.5,1030,2.5,1031,2.5,1032,2.5,1033,2.5,1034,2.21]],["title/classes/LogoutDto.html",[27,0.271,1035,3.6]],["body/classes/LogoutDto.html",[3,0.114,4,0.102,5,0.102,7,0.517,12,1.184,13,0.009,14,0.568,18,0.534,22,0.321,26,0.127,27,0.463,29,2.476,34,0.007,35,0.007,117,0.94,125,4.181,129,1.062,266,7.249,323,1.572,467,1.937,587,3.854,590,2.416,835,2.857,836,2.773,1035,6.149,1036,5.54,1037,6.266,1038,6.266]],["title/classes/Notification.html",[27,0.271,1039,3.346]],["body/classes/Notification.html",[3,0.129,4,0.115,5,0.115,13,0.008,26,0.143,27,0.429,34,0.008,35,0.008,117,1.058,1039,6.13,1040,6.235]],["title/classes/NotificationsGateway.html",[27,0.271,1041,3.346]],["body/classes/NotificationsGateway.html",[3,0.082,4,0.073,5,0.073,7,0.372,8,1.585,12,1.488,13,0.009,14,0.737,16,2.031,17,1.391,18,0.671,19,1.739,21,1.986,22,0.295,26,0.091,27,0.274,28,1.882,29,1.36,32,2.076,34,0.006,35,0.006,117,0.675,171,1.691,185,2.221,276,1.946,277,2.826,278,2.434,279,2.89,280,2.31,288,1.831,291,2.184,305,1.459,307,1.531,340,4.103,341,3.004,342,3.004,343,2.858,484,3.306,495,3.637,498,3.98,500,3.98,502,3.98,608,5.426,1041,4.616,1042,3.98,1043,4.502,1044,5.426,1045,4.502,1046,3.98,1047,6.149,1048,4.502,1049,6.149,1050,4.502,1051,6.149,1052,4.502,1053,6.149,1054,4.502,1055,4.502,1056,5.869,1057,6.149,1058,4.502,1059,3.98,1060,4.967,1061,4.502,1062,4.502,1063,4.502,1064,4.502,1065,4.502]],["title/modules/NotificationsModule.html",[36,1.257,53,3.143]],["body/modules/NotificationsModule.html",[3,0.112,4,0.1,5,0.1,13,0.009,22,0.319,23,1.163,26,0.125,27,0.374,34,0.007,35,0.007,36,2.294,38,2.503,39,2.503,40,2.646,41,2.646,42,2.503,43,3.497,44,2.646,53,6.238,64,3.237,65,2.646,66,2.572,1041,5.652,1044,5.903,1059,5.442,1066,5.442,1067,5.442,1068,6.155,1069,6.155]],["title/injectables/NotificationsService.html",[108,1.099,1044,2.974]],["body/injectables/NotificationsService.html",[3,0.087,4,0.077,5,0.077,7,0.392,8,1.643,13,0.009,14,0.727,16,1.983,17,1.358,18,0.655,19,1.698,21,2.127,22,0.282,23,0.897,26,0.096,27,0.289,32,2.115,34,0.006,35,0.006,108,1.572,109,1.88,129,1.12,185,2.438,205,1.985,276,2.017,277,2.889,278,2.523,279,2.997,280,2.395,288,2.592,291,3.093,295,2.997,305,1.539,307,1.614,484,3.533,514,4.315,515,3.565,516,3.349,517,3.349,608,5.354,1039,5.775,1044,4.254,1046,5.636,1056,5.951,1060,5.149,1070,4.199,1071,4.749,1072,4.749,1073,4.749,1074,4.749,1075,4.749,1076,4.749]],["title/classes/Parcel.html",[27,0.271,1077,3.6]],["body/classes/Parcel.html",[3,0.053,4,0.047,5,0.047,7,0.24,12,1.318,13,0.009,14,0.632,18,0.762,22,0.213,26,0.091,27,0.177,34,0.004,35,0.004,71,0.67,78,1.091,100,3.436,106,4.035,117,0.436,129,1.171,156,1.351,165,1.808,192,0.838,199,1.679,205,1.868,225,3.038,234,2.561,236,2.484,247,1.35,249,1.29,323,0.923,420,1.181,421,2.93,423,5.427,424,4.035,426,3.812,441,2.346,442,2.101,451,2.048,453,3.087,484,1.818,527,2.048,763,4.817,764,4.401,765,4.817,768,3.459,775,4.894,1077,5.336,1078,2.346,1079,2.905,1080,2.905,1081,2.905,1082,2.905,1083,2.905,1084,2.905,1085,2.905,1086,2.568,1087,2.905,1088,2.905,1089,2.905,1090,2.905,1091,2.346,1092,2.905,1093,2.905,1094,2.905,1095,3.842,1096,2.905,1097,4.47,1098,2.905,1099,2.905,1100,2.905,1101,2.905,1102,2.598,1103,2.905,1104,2.905,1105,2.905,1106,2.905,1107,2.905,1108,2.905,1109,2.905,1110,2.905,1111,2.905]],["title/classes/Percel.html",[27,0.271,1112,3.143]],["body/classes/Percel.html",[3,0.045,4,0.04,5,0.04,7,0.206,12,1.635,13,0.009,14,0.784,18,0.78,22,0.155,26,0.1,27,0.151,34,0.004,35,0.004,71,0.575,100,3.466,117,0.374,129,1.287,156,1.66,165,1.315,192,0.718,199,0.936,225,2.352,247,1.855,249,1.623,272,1.51,284,2.718,323,0.819,404,2.25,420,2.007,422,5.028,424,4.492,426,4.216,442,1.863,448,4.052,449,3.77,453,2.895,465,1.339,466,1.339,467,0.77,468,1.339,469,3.946,527,2.795,614,4.364,615,4.364,616,4.364,617,4.364,618,4.364,619,4.364,620,4.364,621,4.364,622,4.364,623,4.364,624,4.364,625,4.364,712,2.868,775,4.872,1091,3.201,1112,2.795,1113,1.87,1114,4.936,1115,4.364,1116,4.936,1117,4.364,1118,4.364,1119,4.364,1120,4.364,1121,2.491,1122,2.491,1123,2.491,1124,2.491,1125,2.491,1126,2.491,1127,2.491,1128,2.491,1129,2.491,1130,2.491,1131,2.491,1132,2.491,1133,2.491,1134,2.491,1135,2.491,1136,2.491,1137,2.491,1138,2.491,1139,2.491,1140,2.491,1141,2.491,1142,2.491,1143,2.491,1144,2.491,1145,2.012,1146,1.87,1147,2.202]],["title/controllers/PercelController.html",[0,1.444,1148,3.346]],["body/controllers/PercelController.html",[0,1.456,2,1.456,3,0.082,4,0.073,5,0.073,7,0.371,8,1.583,12,1.321,13,0.009,14,0.634,16,1.803,17,1.235,18,0.596,19,1.544,20,3.288,21,1.763,22,0.326,23,0.849,26,0.091,27,0.273,28,1.878,29,1.357,32,1.844,34,0.006,35,0.006,121,2.331,129,0.976,133,2.331,142,3.327,143,2.048,144,2.18,156,1.794,185,2.065,193,2.749,194,1.491,195,1.491,277,2.306,280,2.627,295,2.112,299,2.416,300,2.253,301,2.112,302,2.253,305,1.456,307,1.527,308,2.048,309,2.253,310,2.253,385,4.043,611,5.422,863,3.972,1148,4.609,1149,3.972,1150,4.493,1151,6.184,1152,3.629,1153,4.493,1154,4.559,1155,3.972,1156,4.493,1157,5.972,1158,4.493,1159,4.493,1160,4.667,1161,3.972,1162,4.959,1163,4.493,1164,4.493,1165,4.493,1166,3.972,1167,4.493,1168,4.493,1169,4.493,1170,4.493]],["title/modules/PercelModule.html",[36,1.257,54,3.143]],["body/modules/PercelModule.html",[2,2.226,3,0.097,4,0.086,5,0.086,13,0.009,17,1.343,22,0.344,23,1.005,26,0.108,27,0.323,34,0.006,35,0.006,36,2.146,38,2.163,39,2.163,40,2.287,41,2.287,42,2.163,43,3.271,44,2.287,54,6.012,64,2.954,65,2.287,66,2.224,68,2.501,70,2.581,71,1.227,163,2.668,165,2.525,249,1.535,284,2.354,345,3.752,367,4.584,368,4.361,371,4.297,372,3.994,1112,3.752,1146,5.158,1148,5.712,1160,5.689,1161,4.704,1171,4.704,1172,4.704,1173,5.32,1174,5.32,1175,4.704,1176,3.994,1177,4.704,1178,5.32]],["title/injectables/PercelService.html",[108,1.099,1160,2.974]],["body/injectables/PercelService.html",[3,0.06,4,0.053,5,0.053,7,0.271,8,1.264,13,0.009,14,0.59,16,1.678,17,1.15,18,0.555,19,1.437,21,1.48,22,0.305,23,0.62,26,0.066,27,0.199,29,1.481,32,1.716,34,0.005,35,0.005,71,0.757,100,1.298,108,1.209,109,1.298,129,0.819,135,1.645,156,1.296,168,2.848,171,1.841,173,3.353,185,1.922,190,2.943,191,1.542,192,0.946,193,2.566,194,1.089,195,1.089,197,2.235,198,3.156,200,1.764,204,3.666,205,3.256,217,3.112,225,1.371,227,3.156,228,3.156,229,3.278,230,3.156,232,3.379,234,2.759,236,2.676,243,3.278,246,3.892,247,1.481,248,1.702,249,1.878,250,2.849,251,1.832,275,3.457,277,1.841,280,1.841,284,1.452,286,2.544,305,1.063,307,1.115,328,4.406,348,2.082,352,2.463,384,1.764,385,3.502,390,2.463,391,2.463,392,2.849,393,1.764,394,2.636,395,1.592,399,2.9,404,1.495,410,1.906,420,1.334,514,1.764,580,3.112,611,4.879,1112,2.313,1115,2.9,1117,2.9,1118,2.9,1119,4.334,1120,4.334,1145,2.65,1151,4.334,1154,4.434,1155,4.334,1157,5.494,1160,3.271,1162,3.96,1176,2.463,1177,2.9,1179,2.9,1180,3.281,1181,3.281,1182,4.902,1183,3.281,1184,3.281,1185,4.902,1186,3.281,1187,3.281,1188,4.902,1189,3.281,1190,3.281,1191,3.281,1192,3.281,1193,3.281,1194,3.281,1195,3.281,1196,2.313,1197,3.281,1198,4.902,1199,3.281,1200,3.281,1201,4.902,1202,2.65,1203,3.281,1204,2.313]],["title/classes/Permission.html",[27,0.271,251,2.489]],["body/classes/Permission.html",[3,0.082,4,0.073,5,0.073,7,0.37,13,0.008,14,0.815,18,0.767,19,2.06,26,0.091,27,0.272,34,0.006,35,0.006,117,0.673,251,3.424,323,1.266,1205,3.963,1206,6.987,1207,6.987,1208,6.987,1209,6.987,1210,6.987,1211,6.987,1212,6.987,1213,6.987,1214,6.987,1215,6.987,1216,6.987,1217,6.987,1218,6.987,1219,6.987,1220,6.987,1221,8.251,1222,4.483,1223,4.483,1224,4.483,1225,4.483,1226,4.483,1227,4.483,1228,4.483,1229,4.483,1230,4.483,1231,4.483,1232,4.483,1233,4.483,1234,4.483,1235,4.483,1236,4.483]],["title/classes/Presence.html",[27,0.271,1237,3.6]],["body/classes/Presence.html",[3,0.129,4,0.115,5,0.115,13,0.008,26,0.143,27,0.429,34,0.008,35,0.008,117,1.058,1237,6.595,1238,6.235]],["title/classes/PresenceGateway.html",[27,0.271,1239,3.346]],["body/classes/PresenceGateway.html",[3,0.088,4,0.079,5,0.079,7,0.399,8,1.664,12,1.219,13,0.009,14,0.702,16,1.664,17,1.139,18,0.688,19,1.425,21,1.627,22,0.316,26,0.098,27,0.294,28,2.022,29,1.461,32,1.275,34,0.006,35,0.006,117,0.726,129,0.675,156,1.425,171,1.817,185,1.428,231,2.426,305,1.567,307,1.644,323,1.333,324,5.542,326,5.818,332,5.453,339,3.228,340,4.307,341,3.228,342,4.307,343,3.071,350,3.228,355,3.632,356,5.693,357,3.907,358,3.907,359,3.907,360,3.907,638,3.411,651,3.751,1239,4.845,1240,4.277,1241,6.422,1242,4.838,1243,5.542,1244,4.838,1245,4.838,1246,4.277,1247,6.851,1248,6.454,1249,4.838,1250,4.838,1251,6.454,1252,4.277,1253,5.706,1254,3.632,1255,4.838]],["title/modules/PresenceModule.html",[36,1.257,55,3.143]],["body/modules/PresenceModule.html",[3,0.112,4,0.1,5,0.1,13,0.009,22,0.319,23,1.163,26,0.125,27,0.374,34,0.007,35,0.007,36,2.294,38,2.503,39,2.503,40,2.646,41,2.646,42,2.503,43,3.497,44,2.646,55,6.238,64,3.237,65,2.646,66,2.572,1239,5.652,1243,5.903,1252,5.442,1256,5.442,1257,5.442,1258,6.155,1259,6.155]],["title/injectables/PresenceService.html",[108,1.099,1243,2.974]],["body/injectables/PresenceService.html",[3,0.11,4,0.098,5,0.098,7,0.496,8,1.913,13,0.009,14,0.545,16,1.55,17,1.061,18,0.686,19,1.327,21,1.516,22,0.291,23,1.136,26,0.122,27,0.365,34,0.007,35,0.007,108,1.83,109,2.38,129,0.839,156,1.327,208,4.857,231,3.015,339,4.012,350,4.012,356,5.929,651,4.313,1241,6.562,1243,4.952,1246,6.562,1247,7.118,1260,5.316,1261,6.013,1262,6.013,1263,6.013,1264,5.316]],["title/controllers/ProfileController.html",[0,1.444,1265,3.346]],["body/controllers/ProfileController.html",[0,1.66,2,1.66,3,0.093,4,0.083,5,0.083,7,0.423,8,1.728,12,1.267,13,0.009,14,0.608,16,1.728,17,1.184,18,0.571,19,1.48,20,3.151,21,1.69,22,0.331,23,0.968,26,0.104,27,0.311,28,2.141,29,1.547,32,1.767,34,0.006,35,0.006,121,2.658,142,2.967,143,2.336,144,2.486,156,1.75,185,1.979,193,2.721,194,1.7,195,1.7,278,2.653,280,2.807,288,2.083,297,4.256,299,2.755,302,2.569,307,1.742,308,2.336,309,2.569,310,2.569,1265,5.033,1266,4.53,1267,7.473,1268,5.124,1269,4.53,1270,5.951,1271,5.124,1272,4.986,1273,4.53,1274,4.139,1275,5.124,1276,5.124,1277,5.124,1278,5.124]],["title/modules/ProfileModule.html",[36,1.257,56,3.143]],["body/modules/ProfileModule.html",[2,2.334,3,0.105,4,0.093,5,0.093,13,0.009,17,1.012,22,0.334,23,1.083,26,0.116,27,0.348,34,0.007,35,0.007,36,2.222,38,2.33,39,2.33,40,2.464,41,2.464,42,2.33,43,3.387,44,2.464,56,6.13,64,3.097,65,2.464,66,2.395,68,2.694,70,2.781,71,1.322,156,1.265,157,4.573,158,3.824,163,2.873,164,4.302,165,1.902,1265,5.914,1272,5.8,1273,5.067,1279,5.067,1280,5.067,1281,5.731,1282,5.731]],["title/injectables/ProfileService.html",[108,1.099,1272,2.974]],["body/injectables/ProfileService.html",[3,0.078,4,0.069,5,0.069,7,0.352,8,1.526,13,0.009,14,0.617,16,1.754,17,1.201,18,0.58,19,1.502,21,1.493,22,0.328,23,0.805,26,0.086,27,0.259,32,1.793,34,0.005,35,0.005,71,0.983,108,1.46,109,1.687,135,2.137,156,1.705,158,2.844,168,3.88,171,2.224,172,3.443,173,3.253,177,4.445,179,2.292,187,2.844,190,2.137,191,2.004,192,1.23,193,2.595,194,1.414,195,1.414,196,3.2,197,1.943,198,3.184,200,3.954,204,3.412,205,2.844,227,3.184,228,3.184,229,2.38,230,3.184,250,2.477,253,3.768,280,2.224,305,1.381,307,1.449,397,3.768,410,2.477,411,2.706,423,3.006,641,3.006,800,3.443,1269,5.235,1270,5.639,1272,3.951,1274,4.783,1283,3.768,1284,5.921,1285,4.262,1286,5.921,1287,4.262,1288,4.262,1289,5.496,1290,6.804,1291,6.804,1292,6.278,1293,4.262,1294,4.798,1295,4.262,1296,4.262,1297,4.262,1298,3.768]],["title/injectables/RefreshStrategy.html",[108,1.099,153,3.143]],["body/injectables/RefreshStrategy.html",[3,0.095,4,0.085,5,0.085,7,0.429,8,1.745,13,0.009,14,0.614,16,1.745,17,1.195,18,0.577,19,1.494,21,1.311,22,0.324,23,0.982,26,0.105,27,0.316,28,2.174,32,1.371,34,0.006,35,0.006,73,3.667,100,2.058,108,1.669,109,2.058,136,5.468,140,6.44,141,4.201,153,4.774,168,3.652,169,4.598,171,1.953,175,6.845,179,2.797,182,5.082,195,2.645,199,1.953,395,2.523,783,3.904,784,2.236,802,5.985,803,4.598,807,5.985,808,4.598,809,5.985,810,4.201,811,5.468,812,4.598,813,4.598,814,4.598,1299,4.598,1300,5.201,1301,6.77,1302,5.201,1303,5.201,1304,5.201,1305,5.201,1306,5.201,1307,5.201,1308,5.201]],["title/classes/Route.html",[27,0.271,446,2.59]],["body/classes/Route.html",[3,0.08,4,0.071,5,0.071,7,0.362,12,1.562,13,0.009,14,0.749,18,0.764,22,0.237,26,0.14,27,0.267,34,0.006,35,0.006,71,1.012,100,1.737,117,0.658,129,1.039,156,1.643,165,2.005,192,1.266,199,1.648,247,2.358,249,2.252,323,1.248,388,3.352,404,3.15,420,2.809,422,4.804,424,4.529,426,4.086,429,5.122,442,2.84,446,3.511,448,4.086,449,4.046,453,3.57,465,2.36,466,2.36,467,1.357,468,2.36,469,4.003,647,5.187,648,6.109,1309,3.294,1310,4.388,1311,4.388,1312,4.388,1313,4.388,1314,4.388,1315,3.835,1316,4.388,1317,4.388,1318,3.545,1319,3.294,1320,3.88]],["title/controllers/RoutesController.html",[0,1.444,1321,3.346]],["body/controllers/RoutesController.html",[0,1.274,2,1.274,3,0.072,4,0.064,5,0.064,7,0.324,8,1.442,12,1.416,13,0.009,14,0.679,16,1.932,17,1.324,18,0.639,19,1.655,20,3.061,21,1.89,22,0.314,23,0.743,26,0.08,27,0.239,28,1.643,29,1.188,32,1.976,34,0.005,35,0.005,121,2.04,129,1.163,133,2.04,142,3.318,143,1.792,144,1.908,156,1.96,185,2.3,193,2.757,194,1.305,195,1.305,276,2.061,277,2.101,278,2.214,279,2.63,280,2.446,283,3.733,288,1.599,291,1.908,292,3.551,295,1.848,297,3.551,299,2.115,300,1.971,301,1.848,302,1.971,305,1.274,307,1.337,308,1.792,309,1.971,310,1.971,317,2.285,319,2.624,446,3.251,644,5.199,868,2.624,1152,3.176,1154,3.949,1166,3.476,1321,4.2,1322,3.476,1323,3.476,1324,3.476,1325,3.932,1326,3.932,1327,5.595,1328,3.932,1329,7.095,1330,3.932,1331,5.778,1332,3.932,1333,4.346,1334,3.476,1335,4.519,1336,3.932,1337,3.932,1338,3.932,1339,3.932,1340,3.932,1341,3.932]],["title/modules/RoutesModule.html",[36,1.257,57,3.143]],["body/modules/RoutesModule.html",[2,2.334,3,0.105,4,0.093,5,0.093,13,0.009,17,1.012,22,0.334,23,1.083,26,0.116,27,0.348,34,0.007,35,0.007,36,2.222,38,2.33,39,2.33,40,2.464,41,2.464,42,2.33,43,3.387,44,2.464,57,6.13,64,3.097,65,2.464,66,2.395,68,2.694,70,2.781,71,1.322,163,2.873,165,1.902,446,3.33,1319,5.408,1321,5.914,1333,5.8,1334,5.067,1342,5.067,1343,5.067,1344,5.731,1345,5.731,1346,5.067,1347,5.731]],["title/injectables/RoutesService.html",[108,1.099,1333,2.974]],["body/injectables/RoutesService.html",[3,0.053,4,0.047,5,0.047,7,0.239,8,1.15,13,0.009,14,0.632,16,1.796,17,1.23,18,0.594,19,1.538,21,1.757,22,0.284,23,0.547,26,0.059,27,0.176,29,0.875,32,1.837,34,0.004,35,0.004,71,0.668,100,1.146,108,1.1,109,1.146,129,1.013,135,1.452,156,1.85,171,1.675,173,2.704,185,1.803,190,3.758,191,1.362,192,0.836,193,2.599,194,0.961,195,0.961,197,1.32,198,3.286,204,3.64,205,3.214,217,2.831,225,1.211,227,3.286,228,3.286,230,3.286,231,2.727,232,2.314,246,4.637,247,1.347,248,2.314,249,2.162,250,2.592,251,2.491,275,3.145,276,1.411,277,1.675,278,1.765,279,2.097,280,2.043,288,1.814,295,2.097,301,1.362,305,0.939,307,0.985,384,2.925,388,1.405,390,3.349,391,2.175,392,3.161,393,3.286,394,4.031,395,2.639,404,1.32,446,2.592,484,2.212,514,1.558,644,4.65,1152,3.603,1154,3.298,1204,2.043,1318,2.34,1323,3.943,1324,3.943,1331,5.286,1333,2.976,1335,3.603,1346,2.561,1348,2.561,1349,2.897,1350,2.897,1351,4.461,1352,2.897,1353,2.897,1354,2.897,1355,4.461,1356,2.897,1357,2.897,1358,2.897,1359,2.897,1360,2.897,1361,4.935,1362,6.11,1363,6.11,1364,6.11,1365,5.402,1366,4.461,1367,2.897,1368,2.897]],["title/classes/Sacco.html",[27,0.271,247,1.346]],["body/classes/Sacco.html",[3,0.067,4,0.059,5,0.059,7,0.301,12,1.609,13,0.009,14,0.772,17,1.103,18,0.753,22,0.245,26,0.126,27,0.322,34,0.005,35,0.005,71,0.842,100,3.455,106,4.662,117,0.547,129,1.239,165,1.759,192,1.053,199,1.371,225,2.865,239,2.936,241,3.359,247,1.601,323,1.095,388,3.03,389,3.787,404,2.847,420,2.539,421,3.359,426,4.172,442,2.492,448,3.326,449,2.659,453,3.033,465,1.962,466,1.962,467,1.128,468,1.962,469,2.851,590,1.407,658,5.045,659,5.522,685,3.98,768,5.348,775,4.757,1095,4.834,1102,2.121,1315,3.366,1369,2.739,1370,6.246,1371,6.246,1372,3.649,1373,3.649,1374,3.649,1375,3.226,1376,3.649,1377,3.649,1378,3.649,1379,3.649,1380,3.649,1381,3.649,1382,3.649,1383,3.649,1384,3.649,1385,2.947,1386,2.316,1387,3.226]],["title/controllers/SaccosController.html",[0,1.444,1388,3.346]],["body/controllers/SaccosController.html",[0,1.274,2,1.274,3,0.072,4,0.064,5,0.064,7,0.324,8,1.442,12,1.416,13,0.009,14,0.679,16,1.932,17,1.324,18,0.639,19,1.655,20,3.061,21,1.89,22,0.314,23,0.743,26,0.08,27,0.239,28,1.643,29,1.188,32,1.976,34,0.005,35,0.005,121,2.04,129,1.163,133,3.379,142,3.318,143,1.792,144,1.908,156,1.979,185,2.3,193,2.81,194,1.305,195,1.305,276,2.061,277,2.101,278,2.214,279,2.63,280,2.446,286,2.04,288,1.599,289,3.733,291,1.908,292,3.551,295,1.848,297,3.551,299,2.115,300,1.971,301,1.848,302,1.971,305,1.274,307,1.337,308,1.792,309,1.971,310,1.971,313,2.773,317,2.285,319,2.624,655,5.199,868,2.624,1388,4.2,1389,3.476,1390,3.476,1391,3.476,1392,3.932,1393,3.932,1394,3.932,1395,7.095,1396,3.932,1397,5.778,1398,3.932,1399,4.346,1400,3.476,1401,4.519,1402,3.932,1403,3.932,1404,3.932,1405,3.932,1406,3.932,1407,3.932]],["title/modules/SaccosModule.html",[36,1.257,58,3.143]],["body/modules/SaccosModule.html",[2,2.334,3,0.105,4,0.093,5,0.093,13,0.009,17,1.012,22,0.334,23,1.083,26,0.116,27,0.348,34,0.007,35,0.007,36,2.222,38,2.33,39,2.33,40,2.464,41,2.464,42,2.33,43,3.387,44,2.464,58,6.13,64,3.097,65,2.464,66,2.395,68,2.694,70,2.781,71,1.322,163,2.873,165,1.902,247,1.731,1386,4.573,1388,5.914,1399,5.8,1400,5.067,1408,5.067,1409,5.067,1410,5.731,1411,5.731,1412,5.067,1413,4.302]],["title/injectables/SaccosService.html",[108,1.099,1399,2.974]],["body/injectables/SaccosService.html",[3,0.062,4,0.055,5,0.055,7,0.28,8,1.296,13,0.009,14,0.671,16,1.908,17,1.389,18,0.631,19,1.634,21,1.782,22,0.3,23,0.641,26,0.069,27,0.206,29,1.025,32,1.745,34,0.005,35,0.005,71,0.783,108,1.239,109,1.343,129,1.141,135,1.701,156,1.929,168,2.905,171,1.888,173,2.93,185,2.185,190,3.712,191,1.595,192,0.979,193,2.749,194,1.126,195,1.126,197,1.547,199,1.274,200,2.703,204,3.712,205,3.202,225,1.418,232,3.107,246,3.947,247,2.236,248,1.76,276,1.895,277,1.888,278,1.99,279,2.363,280,1.274,286,2.608,288,2.044,291,2.439,305,1.099,307,1.153,392,3.847,393,1.825,394,1.825,395,3.212,404,2.291,410,1.972,514,1.825,517,2.393,655,4.94,1196,2.393,1204,2.393,1292,3.774,1385,2.741,1390,3,1391,4.444,1397,5.548,1399,3.354,1401,4.06,1412,3,1414,3,1415,5.027,1416,3.393,1417,3.393,1418,5.027,1419,3.393,1420,3.393,1421,3.393,1422,3.393,1423,5.027,1424,3.393,1425,3.393,1426,4.836,1427,3.393,1428,5.027,1429,2.741,1430,3,1431,3.393,1432,2.741,1433,3.393,1434,2.547,1435,4.669,1436,3.393,1437,3.393,1438,3,1439,3,1440,3,1441,3.393]],["title/classes/Station.html",[27,0.271,249,1.286]],["body/classes/Station.html",[3,0.064,4,0.057,5,0.057,7,0.288,12,1.612,13,0.009,14,0.773,17,1.076,18,0.759,22,0.239,26,0.123,27,0.312,34,0.005,35,0.005,71,0.806,100,3.475,106,4.627,117,0.524,129,1.218,165,1.705,192,1.008,199,1.313,225,2.807,239,2.864,241,3.277,243,3.402,247,1.84,249,1.482,323,1.061,344,2.465,368,2.219,388,2.956,389,3.695,404,2.778,420,2.477,421,3.277,426,4.175,429,3.262,442,2.415,448,3.631,449,3.368,453,3.311,465,1.88,466,1.88,467,1.081,468,1.88,469,3.277,590,1.347,647,4.574,668,4.921,669,4.921,685,3.857,768,5.362,775,4.764,1095,4.736,1102,2.031,1315,3.262,1375,3.09,1442,2.624,1443,3.496,1444,3.496,1445,3.496,1446,3.496,1447,3.496,1448,3.496,1449,3.496,1450,3.496,1451,3.496,1452,3.496,1453,3.496,1454,3.496,1455,3.496,1456,3.09]],["title/controllers/StationsController.html",[0,1.444,1457,3.346]],["body/controllers/StationsController.html",[0,1.197,2,1.197,3,0.067,4,0.06,5,0.06,7,0.305,8,1.379,12,1.441,13,0.009,14,0.691,16,1.967,17,1.347,18,0.65,19,1.684,20,2.956,21,1.923,22,0.308,23,0.698,26,0.075,27,0.224,28,1.544,29,1.116,32,2.011,34,0.005,35,0.005,121,1.917,129,1.192,133,1.917,142,3.982,143,1.684,144,1.792,185,2.424,193,2.785,194,1.226,195,1.226,249,1.989,276,1.99,277,2.01,279,2.515,280,2.362,283,3.57,289,3.57,291,1.792,292,3.396,295,1.737,297,3.396,299,1.987,300,1.852,301,1.737,302,1.852,305,1.197,307,1.256,308,1.684,309,1.852,310,1.852,313,2.605,317,3.109,319,2.465,337,4.321,665,5.091,1457,4.016,1458,3.266,1459,3.266,1460,5.561,1461,4.73,1462,3.694,1463,3.694,1464,3.266,1465,3.694,1466,3.694,1467,3.694,1468,3.694,1469,5.35,1470,3.694,1471,6.895,1472,3.694,1473,5.683,1474,3.694,1475,4.197,1476,3.266,1477,4.321,1478,3.694,1479,3.694,1480,3.694,1481,3.694,1482,3.694,1483,3.694,1484,3.694,1485,3.694]],["title/modules/StationsModule.html",[36,1.257,59,3.143]],["body/modules/StationsModule.html",[2,2.334,3,0.105,4,0.093,5,0.093,13,0.009,17,1.012,22,0.334,23,1.083,26,0.116,27,0.348,34,0.007,35,0.007,36,2.222,38,2.33,39,2.33,40,2.464,41,2.464,42,2.33,43,3.387,44,2.464,59,6.13,64,3.097,65,2.464,66,2.395,68,2.694,70,2.781,71,1.322,163,2.873,165,1.902,249,1.653,368,4.573,372,4.302,1457,5.914,1475,5.8,1476,5.067,1486,5.067,1487,5.067,1488,5.731,1489,5.731,1490,5.067]],["title/injectables/StationsService.html",[108,1.099,1475,2.974]],["body/injectables/StationsService.html",[3,0.045,4,0.04,5,0.04,7,0.203,8,1.013,13,0.009,14,0.619,16,1.761,17,1.291,18,0.582,19,1.508,21,1.843,22,0.268,23,0.466,26,0.05,27,0.15,29,0.744,32,2.017,34,0.004,35,0.004,71,0.569,108,0.969,109,0.975,112,2.771,129,1.087,135,1.235,156,1.825,168,3.934,171,1.476,173,2.475,179,3.007,185,2.016,190,3.063,191,1.158,192,0.711,193,2.592,194,0.818,195,0.818,197,1.123,198,2.636,199,0.926,200,3.932,204,3.556,205,3.056,227,2.636,228,2.636,229,2.737,230,2.636,231,2.457,232,2.039,246,4.35,247,2.063,248,3.544,249,2.282,277,1.476,279,1.847,280,1.476,286,2.039,291,1.906,300,3.063,305,0.798,307,0.838,329,3.174,337,4.517,344,1.738,353,1.99,384,1.325,388,1.196,392,2.848,393,3.285,394,4.031,395,2.964,404,1.123,409,1.644,410,2.848,411,2.494,453,1.739,514,3.007,515,1.85,580,2.494,665,4.344,668,3.174,669,3.174,1102,1.432,1202,3.959,1204,1.738,1298,2.178,1434,1.85,1435,3.456,1459,3.474,1460,3.474,1461,3.474,1473,5.155,1475,2.622,1477,3.174,1490,2.178,1491,2.178,1492,3.929,1493,4.901,1494,2.464,1495,2.464,1496,3.929,1497,2.464,1498,2.464,1499,5.259,1500,3.929,1501,2.464,1502,3.929,1503,2.464,1504,3.929,1505,3.174,1506,3.929,1507,2.464,1508,2.464,1509,2.464,1510,3.474,1511,5.756,1512,2.464,1513,3.929,1514,2.464,1515,3.929,1516,3.929,1517,3.929,1518,2.464,1519,1.99,1520,1.99,1521,2.464,1522,2.464,1523,2.464,1524,2.464]],["title/classes/StkInitResponce.html",[27,0.271,942,3.346]],["body/classes/StkInitResponce.html",[3,0.103,4,0.092,5,0.092,7,0.467,13,0.008,14,0.769,18,0.723,26,0.114,27,0.343,34,0.007,35,0.007,87,4.495,117,0.848,129,1.263,323,1.475,817,4.659,892,5.877,942,5.361,944,6.997,989,6.324,1010,6.921,1011,6.921,1525,7.658,1526,4.998,1527,7.829,1528,5.653,1529,5.653,1530,5.653,1531,5.653,1532,5.653]],["title/classes/Ticket.html",[27,0.271,977,2.83]],["body/classes/Ticket.html",[3,0.052,4,0.046,5,0.046,7,0.235,12,1.615,13,0.009,14,0.775,18,0.775,22,0.172,26,0.109,27,0.173,34,0.004,35,0.004,71,0.656,100,3.543,106,3.721,117,0.427,129,1.28,156,1.336,165,1.46,192,0.821,199,1.069,247,1.976,249,1.888,272,3.261,284,2.896,323,0.909,388,2.61,404,2.452,420,2.187,422,4.969,424,4.202,426,4.175,442,2.068,448,4.013,449,3.835,453,3.298,465,1.53,466,1.53,467,0.879,468,1.53,469,3.721,484,2.461,678,4.755,680,4.755,681,3.589,682,4.755,764,4.344,775,5.056,977,2.793,1533,2.136,1534,5.379,1535,5.379,1536,5.379,1537,5.379,1538,5.379,1539,2.845,1540,2.845,1541,2.845,1542,2.845,1543,2.845,1544,2.845,1545,2.845,1546,2.845,1547,2.845,1548,2.845,1549,4.399,1550,2.845,1551,2.845,1552,2.845,1553,2.845,1554,2.845,1555,2.845,1556,2.845,1557,2.845,1558,2.298,1559,2.136,1560,2.515]],["title/controllers/TicketController.html",[0,1.444,1561,3.346]],["body/controllers/TicketController.html",[0,1.291,2,1.291,3,0.073,4,0.065,5,0.065,7,0.329,8,1.456,12,1.424,13,0.009,14,0.683,16,1.942,17,1.33,18,0.642,19,1.663,20,3.084,21,1.9,22,0.315,23,0.753,26,0.081,27,0.242,28,1.665,29,1.203,32,1.986,34,0.005,35,0.005,121,2.067,129,1.167,133,2.067,142,3.158,143,1.816,144,1.933,156,1.928,185,2.31,193,2.763,194,1.322,195,1.322,276,2.076,277,2.121,278,2.235,279,2.655,280,2.464,286,2.93,288,1.62,289,3.769,291,1.933,292,3.585,295,1.873,297,3.585,299,2.143,300,1.998,301,1.873,302,1.998,305,1.291,307,1.355,308,1.816,309,1.998,310,1.998,317,2.316,319,2.659,675,5.222,868,2.659,977,3.585,1561,4.24,1562,3.523,1563,3.985,1564,3.985,1565,5.648,1566,3.985,1567,3.985,1568,3.985,1569,7.138,1570,3.985,1571,5.798,1572,3.985,1573,4.378,1574,3.523,1575,4.562,1576,3.985,1577,3.985,1578,3.985,1579,3.985,1580,3.985,1581,3.985]],["title/modules/TicketModule.html",[36,1.257,60,3.143]],["body/modules/TicketModule.html",[2,2.271,3,0.1,4,0.089,5,0.089,13,0.009,17,1.237,22,0.342,23,1.037,26,0.111,27,0.334,34,0.006,35,0.006,36,2.178,38,2.232,39,2.232,40,2.36,41,2.36,42,2.232,43,3.32,44,2.36,60,6.062,64,3.013,65,2.36,66,2.294,68,2.58,70,2.663,71,1.266,163,2.752,165,2.326,284,2.429,367,4.677,371,4.434,977,3.484,1175,4.853,1176,4.12,1559,5.262,1561,5.797,1573,5.736,1574,4.853,1582,4.853,1583,4.853,1584,5.489,1585,5.489,1586,4.853,1587,5.489]],["title/injectables/TicketService.html",[108,1.099,1573,2.974]],["body/injectables/TicketService.html",[3,0.061,4,0.054,5,0.054,7,0.274,8,1.274,13,0.009,14,0.665,16,1.893,17,1.296,18,0.626,19,1.621,21,1.765,22,0.306,23,0.627,26,0.067,27,0.202,29,1.493,32,1.726,34,0.005,35,0.005,71,0.765,108,1.219,109,1.313,129,1.152,135,1.663,156,1.795,168,3.876,171,1.857,173,3.366,179,2.658,185,2.067,190,2.962,191,1.559,192,0.957,193,2.673,194,1.101,195,1.101,197,2.253,198,3.177,199,1.857,200,3.521,204,3.283,205,2.737,227,3.177,228,3.521,229,2.76,230,3.177,232,1.721,234,1.559,236,1.512,246,2.76,247,1.493,248,2.565,249,1.704,250,1.928,277,1.857,278,1.956,279,2.323,280,2.219,284,2.614,286,2.565,288,2.01,291,2.398,295,2.323,305,1.075,307,1.128,324,2.213,328,4.435,348,2.106,352,2.49,384,1.784,385,1.784,388,1.609,392,1.928,403,2.933,445,2.679,514,2.658,516,2.339,517,2.339,580,2.106,675,4.899,977,4.661,1176,2.49,1292,3.711,1294,3.486,1361,2.679,1435,2.339,1558,2.679,1571,5.363,1573,3.298,1575,3.993,1586,2.933,1588,2.933,1589,5.908,1590,3.317,1591,3.317,1592,4.943,1593,4.943,1594,3.317,1595,3.317,1596,3.317,1597,3.317,1598,3.317,1599,3.317,1600,3.317,1601,3.317,1602,3.317,1603,3.317,1604,3.317,1605,3.317,1606,3.317,1607,4.943,1608,3.317,1609,3.317]],["title/classes/UpdateAvailabilityDto.html",[27,0.271,296,3.143]],["body/classes/UpdateAvailabilityDto.html",[3,0.114,4,0.101,5,0.101,7,0.514,12,1.177,13,0.009,14,0.565,18,0.531,22,0.32,26,0.126,27,0.461,34,0.007,35,0.007,117,0.935,129,1.058,276,1.971,282,4.156,296,5.348,306,5.031,323,1.567,445,6.606,467,1.925,590,2.401,592,5.031,598,5.767,784,2.678,835,2.839,836,2.756,1610,6.705,1611,6.229,1612,6.229]],["title/classes/UpdateBookingDto.html",[27,0.271,490,3.143]],["body/classes/UpdateBookingDto.html",[3,0.117,4,0.104,5,0.104,7,0.53,13,0.008,14,0.582,18,0.547,22,0.303,26,0.13,27,0.39,34,0.007,35,0.007,117,0.963,185,2.446,276,2.032,323,1.596,467,1.985,479,4.285,484,3.141,490,5.448,494,5.187,602,5.187,784,2.76,835,2.927,836,2.841,1613,6.83,1614,6.421,1615,6.421]],["title/classes/UpdateChatDto.html",[27,0.271,552,3.143]],["body/classes/UpdateChatDto.html",[3,0.117,4,0.104,5,0.104,7,0.53,13,0.008,14,0.582,18,0.547,22,0.303,26,0.13,27,0.39,34,0.007,35,0.007,117,0.963,185,2.446,276,2.032,323,1.596,467,1.985,484,3.141,537,4.076,541,4.82,552,5.448,604,5.187,784,2.76,835,2.927,836,2.841,1616,6.83,1617,6.421,1618,6.421]],["title/classes/UpdateDriverDto.html",[27,0.271,1619,3.143]],["body/classes/UpdateDriverDto.html",[3,0.113,4,0.1,5,0.1,7,0.509,12,1.425,13,0.008,14,0.684,18,0.643,22,0.242,26,0.125,27,0.458,34,0.007,35,0.007,117,0.926,129,1.184,323,1.558,585,5.033,587,3.829,589,3.605,590,2.38,1619,5.319,1620,6.58,1621,5.458,1622,8.146,1623,7.202,1624,6.173,1625,6.173]],["title/classes/UpdateNotificationDto.html",[27,0.271,1056,3.143]],["body/classes/UpdateNotificationDto.html",[3,0.117,4,0.104,5,0.104,7,0.53,13,0.008,14,0.582,18,0.547,22,0.303,26,0.13,27,0.39,34,0.007,35,0.007,117,0.963,185,2.446,276,2.032,323,1.596,467,1.985,484,3.141,608,4.285,610,5.187,784,2.76,835,2.927,836,2.841,1056,5.448,1060,5.187,1626,6.83,1627,6.421,1628,6.421]],["title/classes/UpdatePercelDto.html",[27,0.271,1157,3.143]],["body/classes/UpdatePercelDto.html",[3,0.122,4,0.109,5,0.109,13,0.008,22,0.311,26,0.136,27,0.408,34,0.007,35,0.007,117,1.007,276,2.124,467,2.075,611,4.478,613,5.421,784,2.885,835,3.059,836,2.97,1157,5.593,1162,5.421,1629,5.933,1630,6.711]],["title/classes/UpdatePresenceDto.html",[27,0.271,1254,3.346]],["body/classes/UpdatePresenceDto.html",[3,0.117,4,0.104,5,0.104,7,0.53,13,0.008,14,0.582,18,0.547,22,0.303,26,0.13,27,0.39,34,0.007,35,0.007,117,0.963,185,2.446,276,2.032,323,1.596,467,1.985,484,3.141,638,4.528,640,5.187,784,2.76,835,2.927,836,2.841,1253,5.677,1254,5.799,1631,6.83,1632,6.421,1633,6.421]],["title/classes/UpdateProfileDto.html",[27,0.271,1270,3.143]],["body/classes/UpdateProfileDto.html",[3,0.122,4,0.109,5,0.109,13,0.008,22,0.311,26,0.136,27,0.408,34,0.007,35,0.007,117,1.007,276,2.124,467,2.075,641,4.733,643,5.421,784,2.885,835,3.059,836,2.97,1270,5.593,1274,5.421,1634,5.933,1635,6.711]],["title/classes/UpdateRouteDto.html",[27,0.271,1331,3.143]],["body/classes/UpdateRouteDto.html",[3,0.122,4,0.109,5,0.109,13,0.008,22,0.311,26,0.136,27,0.408,34,0.007,35,0.007,117,1.007,276,2.124,467,2.075,644,4.478,646,5.421,784,2.885,835,3.059,836,2.97,1331,5.593,1335,5.421,1636,5.933,1637,6.711]],["title/classes/UpdateSaccoDto.html",[27,0.271,1397,3.143]],["body/classes/UpdateSaccoDto.html",[3,0.122,4,0.109,5,0.109,13,0.008,22,0.311,26,0.136,27,0.408,34,0.007,35,0.007,117,1.007,276,2.124,467,2.075,655,4.478,657,5.421,784,2.885,835,3.059,836,2.97,1397,5.593,1401,5.421,1638,5.933,1639,6.711]],["title/classes/UpdateStationDto.html",[27,0.271,1473,3.143]],["body/classes/UpdateStationDto.html",[3,0.122,4,0.109,5,0.109,13,0.008,22,0.311,26,0.136,27,0.408,34,0.007,35,0.007,117,1.007,276,2.124,467,2.075,665,4.478,667,5.421,784,2.885,835,3.059,836,2.97,1473,5.593,1477,5.421,1640,5.933,1641,6.711]],["title/classes/UpdateTicketDto.html",[27,0.271,1571,3.143]],["body/classes/UpdateTicketDto.html",[3,0.122,4,0.109,5,0.109,13,0.008,22,0.311,26,0.136,27,0.408,34,0.007,35,0.007,117,1.007,276,2.124,467,2.075,675,4.478,677,5.421,784,2.885,835,3.059,836,2.97,1571,5.593,1575,5.421,1642,5.933,1643,6.711]],["title/classes/UpdateUserDto.html",[27,0.271,1644,3.143]],["body/classes/UpdateUserDto.html",[3,0.115,4,0.103,5,0.103,7,0.522,13,0.009,14,0.573,18,0.539,22,0.3,26,0.128,27,0.384,29,2.486,34,0.007,35,0.007,117,0.949,129,1.068,231,4.127,276,2.001,323,1.581,467,1.955,589,2.798,702,4.219,704,5.108,706,5.59,784,2.718,835,2.883,836,2.798,1644,5.398,1645,6.767,1646,5.108,1647,6.324]],["title/classes/UpdateVehicleDto.html",[27,0.271,1648,3.143]],["body/classes/UpdateVehicleDto.html",[3,0.09,4,0.08,5,0.08,7,0.408,12,1.536,13,0.009,14,0.757,18,0.712,19,1.981,22,0.306,26,0.1,27,0.398,34,0.006,35,0.006,117,0.741,129,1.234,192,1.425,231,3.681,276,1.564,323,1.352,448,3.176,467,2.023,589,3.945,590,1.905,712,4.266,717,3.297,719,3.991,732,4.368,784,2.124,835,2.252,836,2.186,1221,5.787,1620,6.885,1648,4.616,1649,7.341,1650,7.341,1651,7.341,1652,5.929,1653,4.941,1654,4.941,1655,4.941,1656,4.941,1657,4.941,1658,3.991,1659,4.941]],["title/classes/UpdateVehicleOwnerDto.html",[27,0.271,1660,3.143]],["body/classes/UpdateVehicleOwnerDto.html",[3,0.111,4,0.099,5,0.099,7,0.503,12,1.153,13,0.009,14,0.553,18,0.52,22,0.317,26,0.124,27,0.455,34,0.007,35,0.007,78,3.044,117,0.915,129,1.045,231,4.063,276,1.931,323,1.547,467,1.886,589,3.586,590,2.352,750,4.997,751,4.182,753,4.928,784,2.623,835,3.414,836,2.7,1660,5.281,1661,6.621,1662,6.101,1663,4.928]],["title/classes/User.html",[27,0.271,156,0.984]],["body/classes/User.html",[3,0.046,4,0.041,5,0.041,7,0.21,12,1.624,13,0.009,14,0.779,18,0.753,22,0.196,26,0.101,27,0.154,34,0.004,35,0.004,71,0.586,78,2.329,100,3.154,106,4.622,117,0.381,129,1.237,156,1.67,157,1.612,165,1.335,182,3.753,187,1.694,192,0.733,199,0.954,202,2.507,224,4.42,225,2.757,234,2.35,236,2.279,239,2.35,241,2.688,243,2.792,245,3.336,247,1.873,249,2.13,251,3.684,272,1.54,323,0.831,384,2.164,385,2.164,388,2.425,389,3.031,393,2.164,394,3.059,395,1.953,404,2.279,420,2.033,421,2.688,422,3.834,424,4.222,426,4.19,442,1.892,443,3.558,448,3.809,449,3.466,451,4.874,453,3.059,465,1.366,466,1.366,467,0.785,468,1.366,469,3.548,484,1.636,582,3.753,711,3.251,712,2.339,768,4.687,775,4.823,1102,2.339,1315,2.555,1664,1.906,1665,4.999,1666,4.999,1667,4.999,1668,2.539,1669,2.539,1670,2.539,1671,2.539,1672,2.539,1673,2.539,1674,2.539,1675,2.539,1676,2.539,1677,2.539,1678,2.539,1679,2.539,1680,2.539,1681,2.539,1682,2.539,1683,2.539,1684,2.539,1685,2.539,1686,2.539,1687,2.539,1688,2.539,1689,2.539,1690,2.539,1691,2.245]],["title/controllers/UsersController.html",[0,1.444,1692,3.346]],["body/controllers/UsersController.html",[0,0.929,2,0.929,3,0.052,4,0.047,5,0.047,7,0.237,8,1.141,12,1.449,13,0.009,14,0.695,16,1.976,17,1.354,18,0.713,19,1.693,20,2.541,21,1.933,22,0.293,23,0.542,26,0.058,27,0.174,28,1.199,29,0.866,32,2.021,34,0.004,35,0.004,121,1.488,129,1.144,132,2.317,133,1.488,142,4.055,143,1.308,144,1.392,156,0.977,185,2.263,193,2.828,194,0.952,195,0.952,202,2.711,249,2.364,276,1.711,277,2.031,278,2.14,283,2.954,288,1.166,292,2.81,297,2.81,299,1.543,300,1.438,301,1.348,302,1.438,305,0.929,307,0.975,308,1.308,309,1.438,310,1.438,317,3.142,384,3.269,391,3.324,651,4.034,702,4.632,776,4.286,1154,4.749,1464,2.536,1505,2.317,1644,5.269,1646,3.576,1692,3.324,1693,2.536,1694,4.78,1695,4.78,1696,4.78,1697,5.406,1698,4.78,1699,4.78,1700,2.536,1701,3.914,1702,2.869,1703,3.914,1704,2.869,1705,2.869,1706,2.536,1707,6.079,1708,2.869,1709,2.869,1710,6.079,1711,2.869,1712,2.869,1713,2.536,1714,4.427,1715,2.869,1716,4.427,1717,2.869,1718,2.869,1719,2.869,1720,2.536,1721,2.869,1722,3.607,1723,2.536,1724,2.536,1725,2.536,1726,2.869,1727,2.869,1728,2.869,1729,2.869,1730,2.869,1731,2.869,1732,2.869,1733,2.869,1734,2.869,1735,2.869]],["title/modules/UsersModule.html",[36,1.257,61,3.143]],["body/modules/UsersModule.html",[2,2.286,3,0.101,4,0.09,5,0.09,13,0.009,17,1.246,22,0.338,23,1.048,26,0.112,27,0.337,34,0.007,35,0.007,36,2.188,38,2.256,39,2.256,40,2.385,41,2.385,42,2.256,43,3.336,44,2.385,61,6.079,64,3.034,65,2.385,66,2.319,68,2.608,70,2.691,71,1.28,156,1.225,157,4.48,163,2.781,164,4.164,165,2.342,247,1.675,1386,4.48,1413,4.164,1692,5.826,1722,5.752,1723,4.904,1736,4.904,1737,4.904,1738,5.547,1739,5.547,1740,4.904,1741,4.481]],["title/injectables/UsersService.html",[108,1.099,1722,2.974]],["body/injectables/UsersService.html",[3,0.024,4,0.021,5,0.021,7,0.109,8,0.597,11,3.806,13,0.009,14,0.556,16,1.582,17,1.084,18,0.601,19,1.355,21,1.748,22,0.211,23,0.248,26,0.027,27,0.08,32,1.982,34,0.002,35,0.002,71,0.303,100,0.521,106,0.707,108,0.571,109,0.521,129,0.968,132,1.062,135,0.659,142,1.886,156,1.921,168,3.88,171,0.87,172,1.062,173,1.655,177,1.739,179,2.73,182,5.205,185,1.258,187,0.878,190,3.729,191,0.618,192,0.379,193,2.499,194,0.436,195,0.436,196,0.987,197,0.6,198,2.011,199,1.601,200,4.043,202,3.477,204,3.807,205,3.173,208,1.871,217,1.47,227,2.011,228,2.011,229,1.294,230,2.011,231,1.556,232,2.44,234,0.618,236,0.6,241,0.707,243,0.734,245,3.137,246,4.054,247,1.854,248,3.073,249,2.395,250,2.95,278,2.136,280,0.87,300,3.175,301,1.758,305,0.426,307,0.447,384,3.406,385,2.529,390,0.987,392,3.781,393,3.185,394,3.851,395,2.754,404,3.31,409,1.546,410,2.477,411,1.47,420,0.942,421,3.659,429,1.47,453,1.373,514,3.185,580,4.13,582,5.205,651,2.733,702,3.601,712,0.764,776,2.637,1012,1.163,1102,1.346,1154,3.078,1196,1.633,1202,4.783,1204,1.633,1289,5.784,1294,4.89,1315,1.47,1361,1.871,1365,1.163,1426,2.507,1429,1.871,1432,1.871,1434,1.739,1435,4.329,1499,1.871,1505,1.871,1510,2.744,1511,5.599,1519,1.062,1520,1.871,1644,4.176,1646,1.871,1694,2.744,1695,2.048,1696,2.744,1698,2.744,1699,2.744,1700,1.163,1703,2.048,1706,2.048,1713,1.163,1720,1.163,1722,1.546,1724,1.163,1725,1.163,1740,1.163,1742,1.163,1743,2.316,1744,2.316,1745,2.316,1746,2.316,1747,2.316,1748,1.315,1749,2.316,1750,1.315,1751,1.315,1752,2.316,1753,1.315,1754,1.315,1755,1.315,1756,1.315,1757,2.316,1758,1.315,1759,1.315,1760,1.315,1761,2.316,1762,1.315,1763,2.316,1764,1.315,1765,1.315,1766,1.315,1767,1.315,1768,2.048,1769,3.739,1770,1.315,1771,1.315,1772,1.163,1773,1.163,1774,1.315,1775,2.316,1776,1.315,1777,1.315,1778,3.104,1779,1.315,1780,1.315,1781,1.315,1782,2.316,1783,3.104,1784,1.315,1785,2.316,1786,1.315,1787,1.315,1788,1.315,1789,3.104,1790,3.104,1791,2.316,1792,2.316,1793,1.315,1794,1.315,1795,1.315,1796,1.315,1797,2.316,1798,1.315]],["title/classes/Vehicle.html",[27,0.271,78,1.674]],["body/classes/Vehicle.html",[3,0.056,4,0.05,5,0.05,7,0.252,12,1.624,13,0.009,14,0.779,18,0.767,22,0.182,26,0.114,27,0.186,34,0.004,35,0.004,71,0.706,78,1.747,100,3.444,106,4.284,117,0.459,129,1.171,156,1.387,165,1.543,173,2.489,192,0.882,199,1.149,225,2.627,247,2.042,249,2.054,323,0.96,346,2.157,369,1.942,388,2.73,389,3.411,420,2.287,421,3.025,422,4.301,424,4.514,426,4.198,442,2.186,448,4.073,449,3.711,451,3.967,453,2.489,465,1.645,466,1.645,467,0.945,468,1.645,469,3.98,484,1.891,681,3.754,712,3.269,721,4.974,722,4.974,723,4.974,724,3.967,726,4.974,768,4.698,775,4.907,1102,2.702,1315,2.952,1652,4.544,1799,2.296,1800,4.544,1801,4.974,1802,3.059,1803,3.059,1804,3.059,1805,3.059,1806,3.059,1807,3.059,1808,3.059,1809,3.059,1810,3.059,1811,3.059,1812,2.702,1813,3.059,1814,3.059,1815,3.059,1816,3.059,1817,3.059,1818,3.059,1819,3.059,1820,2.704]],["title/classes/VehicleOwner.html",[27,0.271,1812,2.59]],["body/classes/VehicleOwner.html",[3,0.065,4,0.058,5,0.058,7,0.293,12,1.601,13,0.009,14,0.768,18,0.757,22,0.204,26,0.125,27,0.216,34,0.005,35,0.005,71,0.82,100,3.517,106,4.446,117,0.533,129,1.204,165,1.726,192,1.026,199,1.335,202,3.085,225,2.83,234,2.892,236,2.805,239,2.892,241,3.309,243,3.436,247,1.858,323,1.075,388,2.985,389,3.731,404,2.805,420,2.502,421,3.309,426,4.152,442,2.446,448,3.653,449,3.085,453,2.302,465,1.912,466,1.912,467,1.099,468,1.912,469,3.309,751,4.779,768,5.38,775,4.733,1095,4.775,1102,2.066,1812,3.024,1821,6.035,1822,2.669,1823,3.555,1824,3.555,1825,3.555,1826,3.555,1827,3.555,1828,3.555,1829,3.555,1830,3.555,1831,3.555,1832,3.555,1833,3.555,1834,3.555,1835,3.143,1836,2.507,1837,3.143]],["title/controllers/VehicleOwnersController.html",[0,1.444,1838,3.346]],["body/controllers/VehicleOwnersController.html",[0,1.221,2,1.221,3,0.069,4,0.061,5,0.061,7,0.311,8,1.399,12,1.393,13,0.009,14,0.668,16,1.901,17,1.302,18,0.628,19,1.628,20,2.99,21,1.859,22,0.31,23,0.712,26,0.076,27,0.229,28,1.575,29,1.138,32,1.944,34,0.005,35,0.005,78,3.043,79,5.416,121,1.955,129,1.152,133,1.955,142,3.263,143,1.718,144,1.828,156,1.968,185,2.267,193,2.793,194,1.25,195,1.25,277,2.038,278,2.148,280,2.389,283,3.621,286,1.955,288,1.532,289,3.621,295,1.771,299,2.026,300,1.889,301,1.771,302,1.889,305,1.221,307,1.281,308,1.718,309,1.889,310,1.889,313,2.657,317,2.19,724,3.827,750,5.282,751,4.289,868,2.514,1660,5.713,1663,4.383,1838,4.074,1839,3.331,1840,4.798,1841,5.623,1842,4.798,1843,3.331,1844,3.768,1845,3.331,1846,5.427,1847,3.768,1848,3.768,1849,3.768,1850,4.798,1851,5.427,1852,3.768,1853,4.244,1854,3.331,1855,3.768,1856,3.768,1857,3.768,1858,3.768,1859,3.768,1860,3.768,1861,3.768]],["title/modules/VehicleOwnersModule.html",[36,1.257,62,3.143]],["body/modules/VehicleOwnersModule.html",[2,2.222,3,0.097,4,0.086,5,0.086,13,0.009,17,1.342,22,0.34,23,1.003,26,0.107,27,0.322,34,0.006,35,0.006,36,2.143,38,2.158,39,2.158,40,2.281,41,2.281,42,2.158,43,3.267,44,2.281,62,6.008,64,2.949,65,2.281,66,2.218,68,2.494,70,2.575,71,1.224,78,2.855,79,3.742,163,2.661,165,2.522,247,1.603,347,3.742,369,4.354,373,4.286,751,2.963,1386,4.354,1413,3.984,1741,4.286,1812,3.084,1836,4.837,1838,5.705,1853,5.685,1854,4.692,1862,4.692,1863,4.692,1864,5.307,1865,5.307,1866,4.692,1867,4.286,1868,4.692]],["title/injectables/VehicleOwnersService.html",[108,1.099,1853,2.974]],["body/injectables/VehicleOwnersService.html",[3,0.051,4,0.046,5,0.046,7,0.232,8,1.123,13,0.009,14,0.624,16,1.775,17,1.215,18,0.587,19,1.52,21,1.64,22,0.291,23,0.531,26,0.057,27,0.171,32,1.407,34,0.004,35,0.004,71,0.648,78,2.978,79,5.064,108,1.074,109,1.112,129,1.064,135,1.409,156,1.884,168,3.697,171,1.637,173,3.178,179,1.511,185,2.12,190,3.821,191,1.321,192,0.811,193,2.661,194,0.933,195,0.933,197,1.986,199,1.056,200,3.234,204,3.721,205,3.185,217,1.784,225,1.175,231,2.185,232,2.769,246,4.654,247,1.316,248,2.261,251,3.634,277,1.637,278,1.725,280,2.258,286,2.261,288,1.772,295,1.321,301,1.321,305,0.911,307,0.955,330,4.007,347,1.982,354,2.11,369,1.784,392,4.001,393,3.499,394,4.188,395,3.157,400,3.853,404,1.986,409,1.875,410,2.532,411,1.784,420,1.143,421,1.511,580,1.784,724,5.234,750,4.792,751,4.01,1196,1.982,1292,2.11,1294,1.982,1315,1.784,1432,2.27,1434,2.11,1660,5.234,1663,3.52,1812,3.102,1840,2.485,1841,4.718,1842,3.853,1843,2.485,1845,3.853,1853,2.908,1866,2.485,1867,2.27,1869,2.485,1870,2.811,1871,2.811,1872,4.358,1873,2.811,1874,2.811,1875,2.811,1876,2.811,1877,2.811,1878,2.811,1879,2.811,1880,2.811,1881,2.811,1882,2.811,1883,2.811,1884,2.811,1885,2.27,1886,2.811]],["title/controllers/VehiclesController.html",[0,1.444,1887,3.346]],["body/controllers/VehiclesController.html",[0,0.946,2,0.946,3,0.053,4,0.047,5,0.047,7,0.241,8,1.157,12,1.456,13,0.009,14,0.699,16,1.987,17,1.361,18,0.682,19,1.702,20,3.113,21,1.943,22,0.294,23,0.552,26,0.059,27,0.177,28,1.221,29,0.882,32,2.032,34,0.004,35,0.004,78,2.626,121,1.516,129,1.206,133,1.516,142,3.411,143,1.332,144,1.417,156,1.965,185,2.149,193,2.833,194,0.969,195,0.969,249,1.295,277,1.686,278,1.777,283,4.095,286,1.516,288,1.188,292,2.85,299,1.571,300,1.465,301,1.373,302,1.465,305,0.946,307,1.526,308,1.332,309,1.465,310,1.465,313,2.06,317,2.609,651,2.609,681,1.949,712,4.063,717,4.859,868,1.949,1154,4.24,1619,4.328,1648,5.729,1658,3.626,1701,3.969,1812,4.368,1850,3.969,1885,2.359,1887,3.37,1888,2.582,1889,4.834,1890,4.834,1891,4.834,1892,4.834,1893,5.468,1894,4.834,1895,4.834,1896,2.582,1897,2.921,1898,2.582,1899,2.921,1900,2.582,1901,2.921,1902,2.582,1903,6.137,1904,2.921,1905,2.921,1906,4.489,1907,2.921,1908,2.921,1909,4.489,1910,2.921,1911,2.582,1912,4.489,1913,4.489,1914,2.921,1915,2.582,1916,2.921,1917,3.649,1918,2.582,1919,2.582,1920,2.921,1921,4.489,1922,2.921,1923,2.921,1924,2.921,1925,2.921,1926,2.921,1927,2.921,1928,2.921,1929,2.921,1930,2.921,1931,2.921]],["title/modules/VehiclesModule.html",[36,1.257,63,3.143]],["body/modules/VehiclesModule.html",[2,2.148,3,0.092,4,0.082,5,0.082,13,0.009,17,1.444,22,0.344,23,0.952,26,0.102,27,0.306,34,0.006,35,0.006,36,2.09,38,2.048,39,2.048,40,2.165,41,2.165,42,2.048,43,3.186,44,2.165,63,5.923,64,2.85,65,2.165,66,2.105,68,2.368,70,2.444,71,1.162,78,1.892,156,1.112,157,4.208,158,3.361,163,2.525,164,3.781,165,2.715,247,1.521,249,1.453,345,3.552,368,4.208,369,4.208,372,3.781,373,4.068,751,2.813,1386,4.208,1413,3.781,1741,4.068,1812,2.927,1821,3.552,1836,4.675,1867,4.068,1868,4.453,1887,5.563,1917,5.605,1918,4.453,1932,4.453,1933,4.453,1934,5.037,1935,5.037,1936,4.453]],["title/injectables/VehiclesService.html",[108,1.099,1917,2.974]],["body/injectables/VehiclesService.html",[3,0.029,4,0.026,5,0.026,7,0.131,8,0.703,13,0.009,14,0.616,16,1.752,17,1.2,18,0.605,19,1.501,21,1.669,22,0.242,23,0.3,26,0.032,27,0.096,32,1.937,34,0.003,35,0.003,71,0.366,78,2.76,100,1.419,106,1.466,108,0.672,109,0.628,129,1.107,135,0.795,156,1.799,158,1.058,168,4.019,171,1.024,173,2.479,177,2.692,179,3.013,185,1.746,187,1.058,190,3.561,191,0.746,192,0.458,193,2.634,194,0.526,195,0.526,196,1.191,197,1.243,198,3.181,199,1.801,200,4.152,204,3.977,205,3.34,217,1.007,227,3.181,228,3.181,229,3.303,230,3.181,231,2.404,232,1.415,236,1.243,239,1.282,243,1.522,245,1.058,246,4.495,247,2.053,248,3.329,249,1.616,250,2.473,269,3.763,277,1.024,278,1.897,286,1.415,288,1.109,301,0.746,305,0.514,307,0.927,330,2.047,346,1.119,354,1.191,384,1.928,385,1.466,388,0.77,392,3.042,393,3.013,394,3.819,395,2.718,409,1.058,410,2.084,411,1.731,420,0.645,484,1.73,514,0.853,516,1.119,580,2.702,651,1.584,681,3.199,712,2.084,717,3.739,724,2.528,958,3.17,1154,3.587,1196,1.119,1289,2.202,1294,1.119,1426,4.228,1429,2.896,1430,3.763,1435,3.38,1438,2.41,1439,2.41,1440,3.17,1519,2.202,1520,2.202,1619,3.951,1623,5.466,1648,3.951,1652,1.281,1658,2.202,1768,1.402,1772,1.402,1773,2.41,1800,2.202,1801,1.402,1812,2.473,1885,2.202,1889,2.41,1890,3.17,1891,2.41,1892,2.41,1894,2.41,1895,3.17,1896,2.41,1898,1.402,1900,2.41,1902,2.41,1911,2.41,1915,1.402,1917,1.819,1919,1.402,1936,1.402,1937,1.402,1938,2.726,1939,2.726,1940,2.726,1941,1.586,1942,1.586,1943,1.586,1944,1.586,1945,1.586,1946,2.726,1947,1.586,1948,2.726,1949,1.586,1950,1.586,1951,1.586,1952,2.726,1953,1.586,1954,4.794,1955,1.586,1956,2.726,1957,1.586,1958,1.586,1959,3.585,1960,1.586,1961,4.256,1962,2.726,1963,1.586,1964,1.586,1965,1.586,1966,1.586,1967,1.586,1968,4.794,1969,5.235,1970,1.586,1971,1.586,1972,1.586,1973,2.726,1974,1.586,1975,1.586,1976,1.586,1977,2.726,1978,2.726,1979,2.726,1980,1.586,1981,1.586,1982,2.726,1983,1.586,1984,1.586,1985,1.586]],["title/coverage.html",[1986,4.933]],["body/coverage.html",[0,2.455,1,1.481,5,0.032,6,1.744,13,0.009,18,0.168,24,1.317,27,0.554,34,0.003,35,0.003,42,0.802,78,1.58,79,2.312,86,1.196,87,3.989,88,2.807,108,1.999,110,1.744,116,1.391,118,1.744,119,1.481,120,1.744,125,1.317,137,1.317,142,0.873,143,0.899,152,1.391,153,1.391,156,0.724,157,1.252,167,1.744,193,0.624,194,0.655,205,0.825,247,0.596,249,0.946,251,1.102,273,1.481,274,1.744,282,1.317,284,1.451,296,1.391,303,1.252,308,0.899,321,1.481,322,1.744,367,1.317,368,1.252,369,1.252,374,1.744,412,1.594,444,2.461,446,1.147,471,1.481,472,1.744,473,1.481,474,1.744,476,1.317,479,1.317,490,1.391,508,1.744,518,1.317,519,2.461,532,1.481,534,1.481,535,1.744,537,1.252,539,1.252,543,1.481,544,1.744,552,1.391,562,1.744,581,1.744,591,1.744,592,2.648,601,1.744,602,2.648,603,1.744,604,2.648,608,1.317,609,1.744,610,2.648,611,1.317,612,1.744,613,2.648,638,1.391,639,1.744,640,2.648,641,1.391,642,1.744,643,2.648,644,1.317,645,1.744,646,2.648,655,1.317,656,1.744,657,2.648,665,1.317,666,1.744,667,2.648,675,1.317,676,1.744,677,2.648,702,1.317,703,1.744,704,2.648,717,1.317,718,1.744,719,2.648,750,1.317,751,3.277,752,1.744,753,2.648,761,1.594,762,1.594,776,1.391,777,2.648,778,1.744,780,1.744,786,1.744,801,1.744,816,1.317,817,3.501,818,1.744,819,1.744,829,1.391,830,1.744,831,1.391,832,1.744,839,1.481,840,1.744,858,1.252,872,1.481,873,1.744,876,1.252,904,1.481,907,1.744,942,1.481,944,1.594,977,1.252,1007,2.461,1008,2.461,1035,1.594,1036,1.744,1039,1.481,1040,1.744,1041,1.481,1042,1.744,1044,1.317,1056,1.391,1070,1.744,1077,1.594,1078,1.594,1091,7.562,1112,1.391,1113,2.461,1146,1.481,1148,1.481,1149,1.744,1157,1.391,1160,1.317,1179,1.744,1205,1.744,1237,1.594,1238,1.744,1239,1.481,1240,1.744,1243,1.317,1254,1.481,1260,1.744,1265,1.481,1266,1.744,1270,1.391,1272,1.317,1283,1.744,1299,1.744,1309,2.461,1319,1.481,1321,1.481,1322,1.744,1331,1.391,1333,1.317,1348,1.744,1369,2.461,1386,1.252,1388,1.481,1389,1.744,1397,1.391,1399,1.317,1414,1.744,1442,2.461,1457,1.481,1458,1.744,1473,1.391,1475,1.317,1491,1.744,1525,1.744,1526,1.744,1533,2.461,1559,1.481,1561,1.481,1562,1.744,1571,1.391,1573,1.317,1588,1.744,1610,1.744,1613,1.744,1616,1.744,1619,1.391,1620,2.648,1621,1.744,1626,1.744,1629,1.744,1631,1.744,1634,1.744,1636,1.744,1638,1.744,1640,1.744,1642,1.744,1644,1.391,1645,1.744,1648,1.391,1660,1.391,1661,1.744,1664,2.461,1692,1.481,1693,1.744,1722,1.317,1742,1.744,1799,2.461,1812,1.147,1821,2.312,1822,2.461,1836,1.391,1838,1.481,1839,1.744,1853,1.317,1869,1.744,1887,1.481,1888,1.744,1917,1.317,1937,1.744,1986,1.594,1987,1.973,1988,1.973,1989,1.973,1990,1.744,1991,4.332,1992,1.744,1993,8.608,1994,7.79,1995,6.218,1996,7.577,1997,7.151,1998,5.438,1999,5.438,2000,7.577,2001,4.207,2002,5.438,2003,1.744,2004,1.973,2005,1.973,2006,1.973,2007,1.744,2008,1.744,2009,1.744,2010,1.973,2011,1.973,2012,2.899,2013,1.744,2014,1.744,2015,4.207,2016,1.973,2017,1.973,2018,1.973,2019,1.973,2020,1.744,2021,1.594,2022,1.973,2023,3.279,2024,1.973,2025,1.973,2026,1.973,2027,1.973,2028,1.973,2029,1.973]],["title/dependencies.html",[39,2.182,2030,3.281]],["body/dependencies.html",[13,0.009,23,1.045,27,0.428,34,0.007,35,0.007,39,2.25,71,1.276,73,3.901,96,4.153,97,4.153,141,4.469,160,4.469,192,1.596,218,4.891,219,4.891,220,4.891,343,3.512,350,3.692,441,4.469,467,1.71,590,2.133,783,4.153,800,4.469,810,6.261,811,4.469,836,2.448,941,4.891,2031,5.533,2032,5.533,2033,5.533,2034,7.751,2035,5.533,2036,5.533,2037,5.533,2038,5.533,2039,5.533,2040,5.533,2041,5.533,2042,7.045,2043,7.045,2044,5.533,2045,5.533,2046,5.533,2047,5.533,2048,5.533,2049,5.533,2050,5.533,2051,5.533,2052,5.533,2053,5.533,2054,5.533,2055,5.533,2056,5.533,2057,5.533,2058,5.533,2059,5.533,2060,5.533,2061,5.533,2062,5.533,2063,5.533,2064,5.533]],["title/classes/findUserByIdNoDTO.html",[27,0.271,2021,3.6]],["body/classes/findUserByIdNoDTO.html",[3,0.117,4,0.105,5,0.105,7,0.532,12,1.217,13,0.008,14,0.584,18,0.549,22,0.252,27,0.47,34,0.007,35,0.007,117,0.966,129,1.08,156,1.708,202,4.16,323,1.599,585,4.298,587,3.638,589,3.425,590,2.483,777,6.252,2020,5.694,2021,6.252,2065,6.441]],["title/miscellaneous/functions.html",[2066,2.476,2067,4.745]],["body/miscellaneous/functions.html",[7,0.53,13,0.008,16,1.655,17,1.134,18,0.547,19,1.417,21,1.948,34,0.007,35,0.007,42,3.369,136,6.24,339,4.285,1499,5.187,1990,5.677,1991,6.83,1992,7.326,2007,5.677,2008,7.326,2009,5.677,2066,4.285,2067,5.677,2068,6.421,2069,6.421,2070,6.421,2071,6.421,2072,7.326,2073,7.725]],["title/index.html",[7,0.306,2074,3.711,2075,3.711]],["body/index.html",[4,0.09,13,0.009,34,0.007,35,0.007,324,3.682,520,4.878,828,4.457,1264,4.878,1986,4.457,2076,5.518,2077,5.518,2078,7.033,2079,5.518,2080,5.518,2081,5.518,2082,5.518,2083,5.518,2084,7.742,2085,5.518,2086,5.518,2087,5.518,2088,5.518,2089,8.749,2090,5.518,2091,5.518,2092,5.518,2093,8.609,2094,5.518,2095,5.518,2096,7.033,2097,5.518,2098,5.518,2099,5.518,2100,5.518,2101,7.033,2102,7.033,2103,5.518,2104,5.518,2105,5.518,2106,7.033,2107,7.033,2108,5.518,2109,5.518,2110,5.518,2111,5.518,2112,5.518,2113,4.878,2114,5.518,2115,5.518,2116,5.518,2117,5.518,2118,5.518,2119,5.518,2120,5.518,2121,5.518,2122,4.878,2123,5.518,2124,5.518,2125,5.518,2126,5.518,2127,5.518,2128,5.518,2129,4.878]],["title/modules.html",[38,2.483]],["body/modules.html",[13,0.007,34,0.007,35,0.007,37,4.209,38,2.28,48,3.954,49,3.954,50,3.954,51,3.954,52,3.954,53,3.954,54,3.954,55,3.954,56,3.954,57,3.954,58,3.954,59,3.954,60,3.954,61,3.954,62,3.954,63,3.954,2113,8.219,2130,9.296,2131,9.296,2132,9.296]],["title/overview.html",[2133,5.399]],["body/overview.html",[2,1.221,13,0.009,24,4.244,34,0.005,35,0.005,36,1.063,37,6.973,38,1.532,39,1.532,40,1.62,41,1.62,42,1.532,43,1.62,44,1.62,45,3.331,46,3.331,47,3.331,48,5.819,49,5.2,50,5.2,51,5.2,52,5.2,53,5.2,54,5.2,55,5.2,56,5.2,57,5.2,58,5.2,59,5.2,60,5.2,61,5.2,62,5.2,63,5.2,64,2.333,65,1.62,66,1.575,109,1.491,117,0.565,137,4.244,150,3.331,151,3.331,152,4.485,153,4.485,303,4.037,363,3.331,364,3.331,476,4.244,504,3.331,505,3.331,539,4.037,555,3.331,556,3.331,858,4.037,900,3.331,901,3.331,1044,4.244,1066,3.331,1067,3.331,1160,4.244,1171,3.331,1172,3.331,1243,4.244,1256,3.331,1257,3.331,1272,4.244,1279,3.331,1280,3.331,1333,4.244,1342,3.331,1343,3.331,1399,4.244,1408,3.331,1409,3.331,1475,4.244,1486,3.331,1487,3.331,1573,4.244,1582,3.331,1583,3.331,1722,4.244,1736,3.331,1737,3.331,1853,4.244,1862,3.331,1863,3.331,1917,4.244,1932,3.331,1933,3.331,2133,3.331,2134,3.768,2135,3.768,2136,3.768,2137,3.768]],["title/properties.html",[323,1.109,2030,3.281]],["body/properties.html",[13,0.008,34,0.008,35,0.008,323,1.452,828,5.677,2122,6.214,2129,6.214,2138,7.029,2139,7.029,2140,7.029]],["title/miscellaneous/typealiases.html",[2066,2.476,2141,5.368]],["body/miscellaneous/typealiases.html",[7,0.467,13,0.007,18,0.482,34,0.007,35,0.007,87,4.062,187,4.765,344,5.036,346,5.036,348,5.221,412,4.566,442,4.336,444,4.244,519,4.244,531,5.769,751,3.157,762,4.566,774,6.314,817,3.04,887,5.361,1007,4.244,1008,5.361,1078,4.566,1086,6.314,1113,4.244,1145,5.769,1309,4.244,1318,5.769,1369,4.244,1385,5.769,1442,4.244,1533,4.244,1558,5.769,1664,4.244,1799,4.244,1821,3.986,1822,5.361,1835,6.314,2066,3.772,2142,5.653,2143,5.653,2144,4.998,2145,4.998,2146,5.653,2147,4.998,2148,5.653,2149,4.998,2150,4.998,2151,4.998,2152,4.998,2153,4.998,2154,4.998,2155,4.998,2156,4.998]],["title/miscellaneous/variables.html",[2066,2.476,2157,4.745]],["body/miscellaneous/variables.html",[7,0.337,13,0.009,18,0.69,32,1.513,34,0.005,35,0.005,78,2.157,87,3.448,100,3.41,106,3.088,129,0.801,140,3.294,142,2.541,143,1.859,156,0.9,157,3.645,165,1.353,193,1.291,199,1.532,205,1.705,225,1.705,247,1.734,249,1.177,284,2.541,367,3.831,368,3.645,369,3.645,423,5.36,424,4.088,444,3.062,449,2.045,453,3.929,470,3.606,519,3.062,532,4.31,533,3.606,751,2.278,775,4.403,817,2.193,876,2.589,893,4.638,904,4.31,933,7.803,1007,3.062,1008,4.31,1034,3.606,1095,5.713,1102,2.37,1113,3.062,1146,4.31,1147,3.606,1309,3.062,1319,4.31,1320,3.606,1369,3.062,1386,3.645,1387,3.606,1442,3.062,1456,3.606,1533,3.062,1559,4.31,1560,3.606,1664,3.062,1691,3.606,1799,3.062,1800,3.294,1820,3.606,1821,2.876,1822,4.31,1836,4.049,1837,3.606,2003,5.076,2012,3.606,2013,5.874,2014,5.076,2066,2.721,2072,3.606,2144,3.606,2145,3.606,2147,3.606,2149,3.606,2150,3.606,2151,3.606,2152,3.606,2153,3.606,2154,3.606,2155,3.606,2156,3.606,2157,3.606,2158,4.078,2159,5.742,2160,4.078,2161,4.078,2162,4.078,2163,4.078,2164,4.078,2165,4.078,2166,4.078,2167,4.078,2168,4.078]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Booking.html":{},"classes/BookingGateway.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateBookingDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreatePresenceDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"injectables/JwtGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Notification.html":{},"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/Presence.html":{},"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"dependencies.html":{},"classes/findUserByIdNoDTO.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1091,"title":{},"body":{"classes/Parcel.html":{},"classes/Percel.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2139,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":2062,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":2048,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["0.9.0",{"_index":2033,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2011,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2019,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2018,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2010,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":443,"title":{"classes/Availability-1.html":{}},"body":{"classes/User.html":{}}}],["1.0.0",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":2039,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":2049,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":2037,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":2038,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":2135,"title":{},"body":{"overview.html":{}}}],["16",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":2045,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":2134,"title":{},"body":{"overview.html":{}}}],["174379",{"_index":947,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["2.0.0",{"_index":2032,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2035,"title":{},"body":{"dependencies.html":{}}}],["2/12",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2136,"title":{},"body":{"overview.html":{}}}],["3/8",{"_index":2017,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["4.0.1",{"_index":2057,"title":{},"body":{"dependencies.html":{}}}],["5.3.0",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":1606,"title":{},"body":{"injectables/TicketService.html":{}}}],["6/12",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":2137,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2064,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":2034,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":2041,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":2040,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":2043,"title":{},"body":{"dependencies.html":{}}}],["__id",{"_index":1781,"title":{},"body":{"injectables/UsersService.html":{}}}],["__v",{"_index":1292,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/SaccosService.html":{},"injectables/TicketService.html":{},"injectables/VehicleOwnersService.html":{}}}],["_id",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"classes/JwtPayload.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"injectables/RoutesService.html":{},"injectables/StationsService.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["access_token",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LipaNaMpesaService.html":{}}}],["account_reference",{"_index":948,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["accountant",{"_index":711,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/JwtPayload.html":{},"classes/User.html":{}}}],["accountreference",{"_index":975,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["action",{"_index":514,"title":{},"body":{"injectables/BookingService.html":{},"injectables/ChatService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/NotificationsService.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["active",{"_index":1315,"title":{},"body":{"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"injectables/VehicleOwnersService.html":{}}}],["adapter",{"_index":2047,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["added",{"_index":1772,"title":{},"body":{"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["addedby",{"_index":388,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Route.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"injectables/StationsService.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"injectables/VehiclesService.html":{}}}],["addedon",{"_index":389,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Customer.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{}}}],["address",{"_index":658,"title":{},"body":{"classes/CreateSaccoDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Sacco.html":{}}}],["adds",{"_index":515,"title":{},"body":{"injectables/BookingService.html":{},"injectables/ChatService.html":{},"injectables/NotificationsService.html":{},"injectables/StationsService.html":{}}}],["addtoset",{"_index":1604,"title":{},"body":{"injectables/TicketService.html":{}}}],["addtostation",{"_index":1889,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["addtostation(user",{"_index":1896,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["adduser",{"_index":1743,"title":{},"body":{"injectables/UsersService.html":{}}}],["adduser(createuserdto",{"_index":1749,"title":{},"body":{"injectables/UsersService.html":{}}}],["addvehicle",{"_index":1890,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["addvehicle(createvehicledto",{"_index":1898,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["addvehicleowner",{"_index":1841,"title":{},"body":{"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{}}}],["addvehicleowner(createvehicleownerdto",{"_index":1843,"title":{},"body":{"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{}}}],["admin",{"_index":394,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"classes/CreateUserDto.html":{},"classes/JwtPayload.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["agent",{"_index":385,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"classes/CreateUserDto.html":{},"classes/JwtPayload.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["agent._id",{"_index":1190,"title":{},"body":{"injectables/PercelService.html":{}}}],["agent.sacco",{"_index":1193,"title":{},"body":{"injectables/PercelService.html":{}}}],["agent.station",{"_index":1188,"title":{},"body":{"injectables/PercelService.html":{}}}],["agents",{"_index":391,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"controllers/UsersController.html":{}}}],["agents.dto",{"_index":1725,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["agents.dto.ts",{"_index":778,"title":{},"body":{"classes/FindStationAgentsDto.html":{},"coverage.html":{}}}],["agents.dto.ts:5",{"_index":779,"title":{},"body":{"classes/FindStationAgentsDto.html":{}}}],["aliases",{"_index":2142,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":1435,"title":{},"body":{"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["already",{"_index":1429,"title":{},"body":{"injectables/SaccosService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["amazing",{"_index":2114,"title":{},"body":{"index.html":{}}}],["amount",{"_index":820,"title":{},"body":{"classes/LipaDto.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{}}}],["apis",{"_index":115,"title":{},"body":{"injectables/AppService.html":{}}}],["app",{"_index":2091,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":2083,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":37,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":24,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argon2.hash(refreshtoken",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["array",{"_index":429,"title":{},"body":{"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/CreateVehicleDto.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Route.html":{},"classes/Station.html":{},"injectables/UsersService.html":{}}}],["arrivaltime",{"_index":413,"title":{},"body":{"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/CreateAvailabilityDto.html":{}}}],["arrivedat",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":1768,"title":{},"body":{"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["assigndriver",{"_index":1891,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["assigndriver(user",{"_index":1900,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["assigned",{"_index":1519,"title":{},"body":{"injectables/StationsService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["assingmanager",{"_index":1694,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["assingmanager(querydata",{"_index":1700,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["async",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["auth",{"_index":116,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/LipaNaMpesaService.html":{},"coverage.html":{}}}],["auth.controller",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":119,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":782,"title":{},"body":{"injectables/JwtGuard.html":{}}}],["authguard('jwt",{"_index":785,"title":{},"body":{"injectables/JwtGuard.html":{}}}],["authmodule",{"_index":48,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2122,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorisationendpoint",{"_index":908,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["authorization",{"_index":962,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["authorized",{"_index":399,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"injectables/PercelService.html":{}}}],["authservice",{"_index":137,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["availabilities",{"_index":275,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{}}}],["availabilities.controller",{"_index":366,"title":{},"body":{"modules/AvailabilitiesModule.html":{}}}],["availabilities.service",{"_index":304,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{}}}],["availabilities/availabilities.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["availabilitiescontroller",{"_index":273,"title":{"controllers/AvailabilitiesController.html":{}},"body":{"controllers/AvailabilitiesController.html":{},"modules/AvailabilitiesModule.html":{},"coverage.html":{}}}],["availabilitiesgateway",{"_index":321,"title":{"classes/AvailabilitiesGateway.html":{}},"body":{"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"coverage.html":{}}}],["availabilitiesmodule",{"_index":49,"title":{"modules/AvailabilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AvailabilitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["availabilitiesservice",{"_index":303,"title":{"injectables/AvailabilitiesService.html":{}},"body":{"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"coverage.html":{},"overview.html":{}}}],["availability",{"_index":284,"title":{"classes/Availability.html":{},"classes/Availability-1.html":{}},"body":{"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/CreateTicketDto.html":{},"classes/Percel.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/Ticket.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availability.dto",{"_index":306,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/UpdateAvailabilityDto.html":{}}}],["availability.dto.ts",{"_index":592,"title":{},"body":{"classes/CreateAvailabilityDto.html":{},"classes/UpdateAvailabilityDto.html":{},"coverage.html":{}}}],["availability.dto.ts:12",{"_index":600,"title":{},"body":{"classes/CreateAvailabilityDto.html":{}}}],["availability.dto.ts:15",{"_index":595,"title":{},"body":{"classes/CreateAvailabilityDto.html":{}}}],["availability.dto.ts:18",{"_index":594,"title":{},"body":{"classes/CreateAvailabilityDto.html":{}}}],["availability.dto.ts:6",{"_index":597,"title":{},"body":{"classes/CreateAvailabilityDto.html":{}}}],["availability.dto.ts:7",{"_index":1611,"title":{},"body":{"classes/UpdateAvailabilityDto.html":{}}}],["availability.dto.ts:9",{"_index":599,"title":{},"body":{"classes/CreateAvailabilityDto.html":{}}}],["availability.name",{"_index":371,"title":{},"body":{"modules/AvailabilitiesModule.html":{},"modules/PercelModule.html":{},"modules/TicketModule.html":{}}}],["availability/:id",{"_index":293,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["availabilitydocument",{"_index":348,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"injectables/PercelService.html":{},"injectables/TicketService.html":{},"miscellaneous/typealiases.html":{}}}],["availabilitymodel",{"_index":328,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"injectables/PercelService.html":{},"injectables/TicketService.html":{}}}],["availabilityschema",{"_index":367,"title":{},"body":{"modules/AvailabilitiesModule.html":{},"classes/Availability-1.html":{},"modules/PercelModule.html":{},"modules/TicketModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availabilty.gateway",{"_index":370,"title":{},"body":{"modules/AvailabilitiesModule.html":{}}}],["available",{"_index":460,"title":{},"body":{"classes/Availability-1.html":{}}}],["await",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["awaiting",{"_index":1191,"title":{},"body":{"injectables/PercelService.html":{}}}],["axios",{"_index":941,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"dependencies.html":{}}}],["azure",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["backers",{"_index":2115,"title":{},"body":{"index.html":{}}}],["balance",{"_index":998,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{}}}],["bcrypt",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearer",{"_index":963,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["body",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/AvailabilitiesController.html":{},"controllers/ChatController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["body:object",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["book",{"_index":1589,"title":{},"body":{"injectables/TicketService.html":{}}}],["book(createticketdto",{"_index":1593,"title":{},"body":{"injectables/TicketService.html":{}}}],["booked",{"_index":1601,"title":{},"body":{"injectables/TicketService.html":{}}}],["bookedseat",{"_index":678,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{}}}],["bookedseates",{"_index":414,"title":{},"body":{"classes/Availability.html":{}}}],["bookedseats",{"_index":445,"title":{},"body":{"classes/Availability-1.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{}}}],["booking",{"_index":471,"title":{"classes/Booking.html":{}},"body":{"classes/Booking.html":{},"injectables/BookingService.html":{},"coverage.html":{}}}],["booking.dto",{"_index":494,"title":{},"body":{"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"classes/UpdateBookingDto.html":{}}}],["booking.dto.ts",{"_index":602,"title":{},"body":{"classes/CreateBookingDto.html":{},"classes/UpdateBookingDto.html":{},"coverage.html":{}}}],["booking.dto.ts:5",{"_index":1614,"title":{},"body":{"classes/UpdateBookingDto.html":{}}}],["booking.gateway",{"_index":507,"title":{},"body":{"modules/BookingModule.html":{}}}],["booking.service",{"_index":493,"title":{},"body":{"classes/BookingGateway.html":{},"modules/BookingModule.html":{}}}],["booking/booking.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["bookinggateway",{"_index":473,"title":{"classes/BookingGateway.html":{}},"body":{"classes/BookingGateway.html":{},"modules/BookingModule.html":{},"coverage.html":{}}}],["bookingmodule",{"_index":50,"title":{"modules/BookingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules.html":{},"overview.html":{}}}],["bookingservice",{"_index":476,"title":{"injectables/BookingService.html":{}},"body":{"classes/BookingGateway.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"coverage.html":{},"overview.html":{}}}],["boolean",{"_index":1221,"title":{},"body":{"classes/Permission.html":{},"classes/UpdateVehicleDto.html":{}}}],["bootstrap",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":2132,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2130,"title":{},"body":{"modules.html":{}}}],["bson",{"_index":441,"title":{},"body":{"classes/Availability.html":{},"classes/Parcel.html":{},"dependencies.html":{}}}],["building",{"_index":2079,"title":{},"body":{"index.html":{}}}],["bus",{"_index":741,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["businessshortcode",{"_index":964,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["callback",{"_index":922,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["callback.dto",{"_index":861,"title":{},"body":{"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{}}}],["callback.dto.ts",{"_index":832,"title":{},"body":{"classes/LipaNaMpesaCallbackDto.html":{},"coverage.html":{}}}],["callback.dto.ts:5",{"_index":834,"title":{},"body":{"classes/LipaNaMpesaCallbackDto.html":{}}}],["callback_url",{"_index":909,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["callbackurl",{"_index":973,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["canaddagents",{"_index":1206,"title":{},"body":{"classes/Permission.html":{}}}],["canaddavailabilities",{"_index":1207,"title":{},"body":{"classes/Permission.html":{}}}],["canaddroutes",{"_index":1208,"title":{},"body":{"classes/Permission.html":{}}}],["canaddsaccos",{"_index":1209,"title":{},"body":{"classes/Permission.html":{}}}],["canaddstations",{"_index":1210,"title":{},"body":{"classes/Permission.html":{}}}],["canaddtrips",{"_index":1211,"title":{},"body":{"classes/Permission.html":{}}}],["canaddusers",{"_index":1212,"title":{},"body":{"classes/Permission.html":{}}}],["canaddvehicles",{"_index":1213,"title":{},"body":{"classes/Permission.html":{}}}],["canaddvehicletostation",{"_index":1214,"title":{},"body":{"classes/Permission.html":{}}}],["canbookseats",{"_index":1215,"title":{},"body":{"classes/Permission.html":{}}}],["cancelled",{"_index":697,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["canchangestationsettings",{"_index":1216,"title":{},"body":{"classes/Permission.html":{}}}],["candeleteavailabilities",{"_index":1217,"title":{},"body":{"classes/Permission.html":{}}}],["candeleteuser",{"_index":1218,"title":{},"body":{"classes/Permission.html":{}}}],["canupdateavailabilities",{"_index":1219,"title":{},"body":{"classes/Permission.html":{}}}],["canviewagentsbookings",{"_index":1220,"title":{},"body":{"classes/Permission.html":{}}}],["capacity",{"_index":720,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["car",{"_index":746,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["case",{"_index":1511,"title":{},"body":{"injectables/StationsService.html":{},"injectables/UsersService.html":{}}}],["cash",{"_index":1549,"title":{},"body":{"classes/Ticket.html":{}}}],["catch",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["catch((err",{"_index":954,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["chat",{"_index":518,"title":{"classes/Chat.html":{}},"body":{"classes/Chat.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"coverage.html":{}}}],["chat.controller",{"_index":559,"title":{},"body":{"modules/ChatModule.html":{}}}],["chat.dto",{"_index":541,"title":{},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/UpdateChatDto.html":{}}}],["chat.dto.ts",{"_index":604,"title":{},"body":{"classes/CreateChatDto.html":{},"classes/UpdateChatDto.html":{},"coverage.html":{}}}],["chat.dto.ts:13",{"_index":607,"title":{},"body":{"classes/CreateChatDto.html":{}}}],["chat.dto.ts:5",{"_index":1617,"title":{},"body":{"classes/UpdateChatDto.html":{}}}],["chat.dto.ts:6",{"_index":606,"title":{},"body":{"classes/CreateChatDto.html":{}}}],["chat.dto.ts:9",{"_index":605,"title":{},"body":{"classes/CreateChatDto.html":{}}}],["chat.file",{"_index":577,"title":{},"body":{"injectables/ChatService.html":{}}}],["chat.gateway",{"_index":558,"title":{},"body":{"modules/ChatModule.html":{}}}],["chat.message",{"_index":576,"title":{},"body":{"injectables/ChatService.html":{}}}],["chat.name",{"_index":561,"title":{},"body":{"modules/ChatModule.html":{}}}],["chat.service",{"_index":540,"title":{},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{}}}],["chat.to",{"_index":578,"title":{},"body":{"injectables/ChatService.html":{}}}],["chat/chat.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["chatcontroller",{"_index":534,"title":{"controllers/ChatController.html":{}},"body":{"controllers/ChatController.html":{},"modules/ChatModule.html":{},"coverage.html":{}}}],["chatdocument",{"_index":531,"title":{},"body":{"classes/Chat.html":{},"injectables/ChatService.html":{},"miscellaneous/typealiases.html":{}}}],["chatgateway",{"_index":543,"title":{"classes/ChatGateway.html":{}},"body":{"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"coverage.html":{}}}],["chatmodel",{"_index":567,"title":{},"body":{"injectables/ChatService.html":{}}}],["chatmodule",{"_index":51,"title":{"modules/ChatModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules.html":{},"overview.html":{}}}],["chatschema",{"_index":532,"title":{},"body":{"classes/Chat.html":{},"modules/ChatModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chatservice",{"_index":539,"title":{"injectables/ChatService.html":{}},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"coverage.html":{},"overview.html":{}}}],["checkedinatdepatureby",{"_index":1103,"title":{},"body":{"classes/Parcel.html":{}}}],["checkedinatdepatureon",{"_index":1101,"title":{},"body":{"classes/Parcel.html":{}}}],["checkedinatdestinationby",{"_index":1107,"title":{},"body":{"classes/Parcel.html":{}}}],["checkedinatdestinationon",{"_index":1106,"title":{},"body":{"classes/Parcel.html":{}}}],["checkedoutatdepatureby",{"_index":1105,"title":{},"body":{"classes/Parcel.html":{}}}],["checkedoutatdepatureon",{"_index":1104,"title":{},"body":{"classes/Parcel.html":{}}}],["checkedoutatdestinationby",{"_index":1109,"title":{},"body":{"classes/Parcel.html":{}}}],["checkedoutatdestinationon",{"_index":1108,"title":{},"body":{"classes/Parcel.html":{}}}],["checkifuserexists",{"_index":1744,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkifuserexists(idno",{"_index":1752,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkoutrequestid",{"_index":892,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/StkInitResponce.html":{}}}],["checkvehicleregno",{"_index":1938,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["checkvehicleregno(regno",{"_index":1946,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["claimed",{"_index":1009,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["class",{"_index":27,"title":{"classes/Auth.html":{},"classes/AvailabilitiesGateway.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Booking.html":{},"classes/BookingGateway.html":{},"classes/Chat.html":{},"classes/ChatGateway.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateBookingDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreatePresenceDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"classes/JwtPayload.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Notification.html":{},"classes/NotificationsGateway.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"classes/Permission.html":{},"classes/Presence.html":{},"classes/PresenceGateway.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"classes/findUserByIdNoDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Booking.html":{},"classes/BookingGateway.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateBookingDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreatePresenceDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"injectables/JwtGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Notification.html":{},"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/Presence.html":{},"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"dependencies.html":{},"classes/findUserByIdNoDTO.html":{}}}],["classes",{"_index":117,"title":{},"body":{"classes/Auth.html":{},"classes/AvailabilitiesGateway.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Booking.html":{},"classes/BookingGateway.html":{},"classes/Chat.html":{},"classes/ChatGateway.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateBookingDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreatePresenceDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"classes/JwtPayload.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Notification.html":{},"classes/NotificationsGateway.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"classes/Permission.html":{},"classes/Presence.html":{},"classes/PresenceGateway.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"classes/findUserByIdNoDTO.html":{},"overview.html":{}}}],["client",{"_index":1247,"title":{},"body":{"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{}}}],["cluster_appmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_availabilitiesmodule",{"_index":363,"title":{},"body":{"modules/AvailabilitiesModule.html":{},"overview.html":{}}}],["cluster_availabilitiesmodule_providers",{"_index":364,"title":{},"body":{"modules/AvailabilitiesModule.html":{},"overview.html":{}}}],["cluster_bookingmodule",{"_index":504,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_providers",{"_index":505,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_chatmodule",{"_index":555,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_chatmodule_providers",{"_index":556,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_lipanampesamodule",{"_index":900,"title":{},"body":{"modules/LipaNaMpesaModule.html":{},"overview.html":{}}}],["cluster_lipanampesamodule_providers",{"_index":901,"title":{},"body":{"modules/LipaNaMpesaModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule",{"_index":1066,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_providers",{"_index":1067,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_percelmodule",{"_index":1171,"title":{},"body":{"modules/PercelModule.html":{},"overview.html":{}}}],["cluster_percelmodule_providers",{"_index":1172,"title":{},"body":{"modules/PercelModule.html":{},"overview.html":{}}}],["cluster_presencemodule",{"_index":1256,"title":{},"body":{"modules/PresenceModule.html":{},"overview.html":{}}}],["cluster_presencemodule_providers",{"_index":1257,"title":{},"body":{"modules/PresenceModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":1279,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_providers",{"_index":1280,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_routesmodule",{"_index":1342,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["cluster_routesmodule_providers",{"_index":1343,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["cluster_saccosmodule",{"_index":1408,"title":{},"body":{"modules/SaccosModule.html":{},"overview.html":{}}}],["cluster_saccosmodule_providers",{"_index":1409,"title":{},"body":{"modules/SaccosModule.html":{},"overview.html":{}}}],["cluster_stationsmodule",{"_index":1486,"title":{},"body":{"modules/StationsModule.html":{},"overview.html":{}}}],["cluster_stationsmodule_providers",{"_index":1487,"title":{},"body":{"modules/StationsModule.html":{},"overview.html":{}}}],["cluster_ticketmodule",{"_index":1582,"title":{},"body":{"modules/TicketModule.html":{},"overview.html":{}}}],["cluster_ticketmodule_providers",{"_index":1583,"title":{},"body":{"modules/TicketModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1736,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1737,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_vehicleownersmodule",{"_index":1862,"title":{},"body":{"modules/VehicleOwnersModule.html":{},"overview.html":{}}}],["cluster_vehicleownersmodule_providers",{"_index":1863,"title":{},"body":{"modules/VehicleOwnersModule.html":{},"overview.html":{}}}],["cluster_vehiclesmodule",{"_index":1932,"title":{},"body":{"modules/VehiclesModule.html":{},"overview.html":{}}}],["cluster_vehiclesmodule_providers",{"_index":1933,"title":{},"body":{"modules/VehiclesModule.html":{},"overview.html":{}}}],["color",{"_index":721,"title":{},"body":{"classes/CreateVehicleDto.html":{},"classes/Vehicle.html":{}}}],["completed",{"_index":698,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["configmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{}}}],["configservice.get",{"_index":1303,"title":{},"body":{"injectables/RefreshStrategy.html":{}}}],["configservice.get('access_token_secret",{"_index":815,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirmed",{"_index":696,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["connectedsocket",{"_index":1251,"title":{},"body":{"classes/PresenceGateway.html":{}}}],["console.error(error",{"_index":1975,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["console.log('namespace",{"_index":357,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/PresenceGateway.html":{}}}],["console.log('socket",{"_index":359,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/PresenceGateway.html":{}}}],["console.log(err",{"_index":955,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["console.log(error",{"_index":1360,"title":{},"body":{"injectables/RoutesService.html":{}}}],["console.log(mpesadata",{"_index":1006,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["console.log(user.sacco",{"_index":1972,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["const",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"injectables/ChatService.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"injectables/StationsService.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["constructor(availabilitiesservice",{"_index":327,"title":{},"body":{"classes/AvailabilitiesGateway.html":{}}}],["constructor(availabilitymodel",{"_index":376,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["constructor(bookingservice",{"_index":475,"title":{},"body":{"classes/BookingGateway.html":{}}}],["constructor(chatmodel",{"_index":565,"title":{},"body":{"injectables/ChatService.html":{}}}],["constructor(chatservice",{"_index":545,"title":{},"body":{"classes/ChatGateway.html":{}}}],["constructor(configservice",{"_index":803,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{}}}],["constructor(lipanampesaservice",{"_index":875,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["constructor(lipanampesatransaction",{"_index":912,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["constructor(notificationsservice",{"_index":1043,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["constructor(percelmodel",{"_index":1180,"title":{},"body":{"injectables/PercelService.html":{}}}],["constructor(presenceservice",{"_index":1242,"title":{},"body":{"classes/PresenceGateway.html":{}}}],["constructor(private",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BookingGateway.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/LipaNaMpesaController.html":{},"classes/NotificationsGateway.html":{},"controllers/PercelController.html":{},"classes/PresenceGateway.html":{},"controllers/ProfileController.html":{},"injectables/RefreshStrategy.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["constructor(routemodel",{"_index":1349,"title":{},"body":{"injectables/RoutesService.html":{}}}],["constructor(saccomodel",{"_index":1416,"title":{},"body":{"injectables/SaccosService.html":{}}}],["constructor(stationmodel",{"_index":1494,"title":{},"body":{"injectables/StationsService.html":{}}}],["constructor(ticketmodel",{"_index":1590,"title":{},"body":{"injectables/TicketService.html":{}}}],["constructor(usermodel",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["constructor(vehiclemodel",{"_index":1941,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["constructor(vehicleownermodel",{"_index":1870,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["context",{"_index":2072,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AvailabilitiesController.html":{},"controllers/ChatController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AvailabilitiesController.html":{},"controllers/ChatController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{},"coverage.html":{}}}],["controller(\"percels",{"_index":1163,"title":{},"body":{"controllers/PercelController.html":{}}}],["controller('auth",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('availabilities",{"_index":311,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["controller('lipa",{"_index":862,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["controller('profile",{"_index":1275,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('routes",{"_index":1336,"title":{},"body":{"controllers/RoutesController.html":{}}}],["controller('saccos",{"_index":1402,"title":{},"body":{"controllers/SaccosController.html":{}}}],["controller('stations",{"_index":1478,"title":{},"body":{"controllers/StationsController.html":{}}}],["controller('tickets",{"_index":1576,"title":{},"body":{"controllers/TicketController.html":{}}}],["controller('users",{"_index":1726,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('vehicle",{"_index":1855,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["controller('vehicles",{"_index":1920,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/AvailabilitiesController.html":{},"modules/AvailabilitiesModule.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"controllers/LipaNaMpesaController.html":{},"modules/LipaNaMpesaModule.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["coverage",{"_index":1986,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creat",{"_index":1967,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["create",{"_index":276,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"controllers/UsersController.html":{}}}],["create(@messagebody",{"_index":495,"title":{},"body":{"classes/BookingGateway.html":{},"classes/ChatGateway.html":{},"classes/NotificationsGateway.html":{}}}],["create(createavailabilitydto",{"_index":281,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{}}}],["create(createbookingdto",{"_index":478,"title":{},"body":{"classes/BookingGateway.html":{},"injectables/BookingService.html":{}}}],["create(createchatdto",{"_index":548,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["create(createnotificationdto",{"_index":1046,"title":{},"body":{"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{}}}],["create(createroutedto",{"_index":1324,"title":{},"body":{"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["create(createsaccodto",{"_index":1391,"title":{},"body":{"controllers/SaccosController.html":{},"injectables/SaccosService.html":{}}}],["create(createstationdto",{"_index":1462,"title":{},"body":{"controllers/StationsController.html":{}}}],["create(createticketdto",{"_index":1564,"title":{},"body":{"controllers/TicketController.html":{}}}],["create(createuserdto",{"_index":1704,"title":{},"body":{"controllers/UsersController.html":{}}}],["createapp",{"_index":2008,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createauthdto",{"_index":125,"title":{"classes/CreateAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/LogoutDto.html":{},"coverage.html":{}}}],["createauthdto.idno",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["createauthdto.password",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["createavailabilitydto",{"_index":282,"title":{"classes/CreateAvailabilityDto.html":{}},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/CreateAvailabilityDto.html":{},"classes/UpdateAvailabilityDto.html":{},"coverage.html":{}}}],["createbookingdto",{"_index":479,"title":{"classes/CreateBookingDto.html":{}},"body":{"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/UpdateBookingDto.html":{},"coverage.html":{}}}],["createchatdto",{"_index":537,"title":{"classes/CreateChatDto.html":{}},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/CreateChatDto.html":{},"classes/UpdateChatDto.html":{},"coverage.html":{}}}],["created",{"_index":1434,"title":{},"body":{"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{}}}],["createdby",{"_index":1432,"title":{},"body":{"injectables/SaccosService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{}}}],["createlipanampesadto",{"_index":848,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["createnotificationdto",{"_index":608,"title":{"classes/CreateNotificationDto.html":{}},"body":{"classes/CreateNotificationDto.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"classes/UpdateNotificationDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createperceldto",{"_index":611,"title":{"classes/CreatePercelDto.html":{}},"body":{"classes/CreatePercelDto.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/UpdatePercelDto.html":{},"coverage.html":{}}}],["createpresencedto",{"_index":638,"title":{"classes/CreatePresenceDto.html":{}},"body":{"classes/CreatePresenceDto.html":{},"classes/PresenceGateway.html":{},"classes/UpdatePresenceDto.html":{},"coverage.html":{}}}],["createprofiledto",{"_index":641,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileDto.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["createroutedto",{"_index":644,"title":{"classes/CreateRouteDto.html":{}},"body":{"classes/CreateRouteDto.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"classes/UpdateRouteDto.html":{},"coverage.html":{}}}],["createsacco",{"_index":1492,"title":{},"body":{"injectables/StationsService.html":{}}}],["createsacco(createstationdto",{"_index":1496,"title":{},"body":{"injectables/StationsService.html":{}}}],["createsaccodto",{"_index":655,"title":{"classes/CreateSaccoDto.html":{}},"body":{"classes/CreateSaccoDto.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"classes/UpdateSaccoDto.html":{},"coverage.html":{}}}],["createsaccodto.name",{"_index":1428,"title":{},"body":{"injectables/SaccosService.html":{}}}],["createstationdto",{"_index":665,"title":{"classes/CreateStationDto.html":{}},"body":{"classes/CreateStationDto.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"classes/UpdateStationDto.html":{},"coverage.html":{}}}],["createticketdto",{"_index":675,"title":{"classes/CreateTicketDto.html":{}},"body":{"classes/CreateTicketDto.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["createticketdto.availability",{"_index":1603,"title":{},"body":{"injectables/TicketService.html":{}}}],["createticketdto.bookedseat",{"_index":1605,"title":{},"body":{"injectables/TicketService.html":{}}}],["createuserdto",{"_index":702,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.role",{"_index":1776,"title":{},"body":{"injectables/UsersService.html":{}}}],["createvehicledto",{"_index":717,"title":{"classes/CreateVehicleDto.html":{}},"body":{"classes/CreateVehicleDto.html":{},"classes/UpdateVehicleDto.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"coverage.html":{}}}],["createvehicledto.plateno",{"_index":1963,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["createvehicleownerdto",{"_index":750,"title":{"classes/CreateVehicleOwnerDto.html":{}},"body":{"classes/CreateVehicleOwnerDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"coverage.html":{}}}],["credentials",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["current",{"_index":1504,"title":{},"body":{"injectables/StationsService.html":{}}}],["currentlocation",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currently",{"_index":1791,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentstation",{"_index":1800,"title":{},"body":{"classes/Vehicle.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["currentuser",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"controllers/ChatController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuser._id",{"_index":1780,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentuser.role",{"_index":1769,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentuser.sacco",{"_index":1778,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentuser.station",{"_index":1779,"title":{},"body":{"injectables/UsersService.html":{}}}],["customer",{"_index":761,"title":{"classes/Customer.html":{}},"body":{"classes/Customer.html":{},"coverage.html":{}}}],["customerdocument",{"_index":774,"title":{},"body":{"classes/Customer.html":{},"miscellaneous/typealiases.html":{}}}],["customeremail",{"_index":1534,"title":{},"body":{"classes/Ticket.html":{}}}],["customerfirstname",{"_index":1535,"title":{},"body":{"classes/Ticket.html":{}}}],["customerid",{"_index":763,"title":{},"body":{"classes/Customer.html":{},"classes/Parcel.html":{}}}],["customeridnumber",{"_index":1536,"title":{},"body":{"classes/Ticket.html":{}}}],["customermessage",{"_index":1010,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{},"classes/StkInitResponce.html":{}}}],["customerpaybillonline",{"_index":967,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["customerphone",{"_index":764,"title":{},"body":{"classes/Customer.html":{},"classes/Parcel.html":{},"classes/Ticket.html":{}}}],["customerschema",{"_index":1097,"title":{},"body":{"classes/Parcel.html":{}}}],["customersecondname",{"_index":1537,"title":{},"body":{"classes/Ticket.html":{}}}],["data",{"_index":893,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/CreateAvailabilityDto.html":{},"classes/Customer.html":{},"injectables/LipaNaMpesaService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"injectables/VehicleOwnersService.html":{},"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":949,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["date.now",{"_index":1102,"title":{},"body":{"classes/Parcel.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"injectables/StationsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/BookingGateway.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateChatDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"classes/LipaDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/NotificationsGateway.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"classes/PresenceGateway.html":{},"controllers/ProfileController.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{},"classes/findUserByIdNoDTO.html":{}}}],["default",{"_index":453,"title":{},"body":{"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/Customer.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"injectables/StationsService.html":{},"classes/Ticket.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateChatDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"injectables/JwtGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"classes/findUserByIdNoDTO.html":{}}}],["delete",{"_index":301,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["delete(':id",{"_index":849,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["delete('delete",{"_index":292,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehiclesController.html":{}}}],["delete('delete/:id",{"_index":1846,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["deleteavalablity",{"_index":375,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["deleteavalablity(id",{"_index":379,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["deleted",{"_index":409,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"classes/CreateVehicleDto.html":{},"injectables/StationsService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["deletedby",{"_index":1665,"title":{},"body":{"classes/User.html":{}}}],["deleteuser",{"_index":1695,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(id",{"_index":1706,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletevehicle",{"_index":1892,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["deletevehicle(id",{"_index":1902,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["deletevehicleowner",{"_index":1842,"title":{},"body":{"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{}}}],["deletevehicleowner(@param('id",{"_index":1860,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["deletevehicleowner(id",{"_index":1845,"title":{},"body":{"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{}}}],["deletinguser",{"_index":1788,"title":{},"body":{"injectables/UsersService.html":{}}}],["deletinguser.role",{"_index":1789,"title":{},"body":{"injectables/UsersService.html":{}}}],["deletinguser.sacco",{"_index":1793,"title":{},"body":{"injectables/UsersService.html":{}}}],["deletinguser.station",{"_index":1796,"title":{},"body":{"injectables/UsersService.html":{}}}],["delimiter",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["depaturestation",{"_index":415,"title":{},"body":{"classes/Availability.html":{}}}],["depaturetime",{"_index":416,"title":{},"body":{"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/CreateAvailabilityDto.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":828,"title":{},"body":{"classes/LipaDto.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":653,"title":{},"body":{"classes/CreateRouteDto.html":{}}}],["destinations",{"_index":647,"title":{},"body":{"classes/CreateRouteDto.html":{},"classes/CreateStationDto.html":{},"classes/Route.html":{},"classes/Station.html":{}}}],["destinationstation",{"_index":1649,"title":{},"body":{"classes/UpdateVehicleDto.html":{}}}],["details",{"_index":1439,"title":{},"body":{"injectables/SaccosService.html":{},"injectables/VehiclesService.html":{}}}],["development",{"_index":2092,"title":{},"body":{"index.html":{}}}],["document",{"_index":530,"title":{},"body":{"classes/Chat.html":{}}}],["documentation",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["dont",{"_index":1965,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["doue",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["driver",{"_index":712,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/JwtPayload.html":{},"classes/Percel.html":{},"classes/UpdateVehicleDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["driver.dto",{"_index":1919,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["driver.dto.ts",{"_index":1621,"title":{},"body":{"classes/UpdateDriverDto.html":{},"coverage.html":{}}}],["driver.dto.ts:6",{"_index":1624,"title":{},"body":{"classes/UpdateDriverDto.html":{}}}],["driver.dto.ts:9",{"_index":1625,"title":{},"body":{"classes/UpdateDriverDto.html":{}}}],["driverid",{"_index":1622,"title":{},"body":{"classes/UpdateDriverDto.html":{}}}],["dropofflocations",{"_index":417,"title":{},"body":{"classes/Availability.html":{}}}],["dropoffprices",{"_index":418,"title":{},"body":{"classes/Availability.html":{}}}],["dto/create",{"_index":305,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"injectables/ProfileService.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["dto/find",{"_index":1724,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/lipa",{"_index":860,"title":{},"body":{"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{}}}],["dto/login.dto",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":307,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["due",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":2103,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":2080,"title":{},"body":{"index.html":{}}}],["email",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/JwtPayload.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/VehicleOwner.html":{}}}],["emit('onlipanampesatransaction",{"_index":896,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["emitter",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"dependencies.html":{}}}],["error",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["error.message",{"_index":1361,"title":{},"body":{"injectables/RoutesService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["error.status",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["eventemitter",{"_index":913,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["eventemitter2",{"_index":914,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["eventemittermodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["exec",{"_index":1969,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["executioncontext",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VehiclesService.html":{}}}],["existing",{"_index":1884,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["exists",{"_index":1426,"title":{},"body":{"injectables/SaccosService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["expiresin",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Booking.html":{},"classes/BookingGateway.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateBookingDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreatePresenceDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"injectables/JwtGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Notification.html":{},"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/Presence.html":{},"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{}}}],["exports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["express",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshStrategy.html":{},"dependencies.html":{}}}],["extends",{"_index":784,"title":{},"body":{"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"injectables/RefreshStrategy.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{}}}],["extractjwt",{"_index":808,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":813,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{}}}],["failed",{"_index":699,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["false",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"classes/Parcel.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Booking.html":{},"classes/BookingGateway.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateBookingDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreatePresenceDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"injectables/JwtGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Notification.html":{},"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/Presence.html":{},"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"classes/findUserByIdNoDTO.html":{}}}],["finaldestinationstation",{"_index":419,"title":{},"body":{"classes/Availability.html":{}}}],["find",{"_index":580,"title":{},"body":{"injectables/ChatService.html":{},"injectables/PercelService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["findagentsinstation",{"_index":1696,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findagentsinstation(currentuser",{"_index":1709,"title":{},"body":{"controllers/UsersController.html":{}}}],["findagentsinstation(user",{"_index":1755,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":277,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["findall(@currentuser",{"_index":313,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["findall(@query",{"_index":1166,"title":{},"body":{"controllers/PercelController.html":{},"controllers/RoutesController.html":{}}}],["findall(currentuser",{"_index":1464,"title":{},"body":{"controllers/StationsController.html":{},"controllers/UsersController.html":{}}}],["findall(query",{"_index":1152,"title":{},"body":{"controllers/PercelController.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["findall(user",{"_index":286,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"injectables/PercelService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["findallusers",{"_index":1745,"title":{},"body":{"injectables/UsersService.html":{}}}],["findallusers(currentuser",{"_index":1757,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":1697,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyid(id",{"_index":1608,"title":{},"body":{"injectables/TicketService.html":{}}}],["findbyid(idno",{"_index":1713,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyid(user._id",{"_index":1290,"title":{},"body":{"injectables/ProfileService.html":{}}}],["findbyidandupdate(id",{"_index":1785,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":278,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["findone(@currentuser",{"_index":1276,"title":{},"body":{"controllers/ProfileController.html":{}}}],["findone(@messagebody",{"_index":498,"title":{},"body":{"classes/BookingGateway.html":{},"classes/NotificationsGateway.html":{}}}],["findone(@param('id",{"_index":868,"title":{},"body":{"controllers/LipaNaMpesaController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/TicketController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["findone(id",{"_index":288,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["findonestation",{"_index":1460,"title":{},"body":{"controllers/StationsController.html":{},"injectables/StationsService.html":{}}}],["findonestation(currentuser",{"_index":1466,"title":{},"body":{"controllers/StationsController.html":{}}}],["findonestation(user",{"_index":1500,"title":{},"body":{"injectables/StationsService.html":{}}}],["findstationagentsdto",{"_index":776,"title":{"classes/FindStationAgentsDto.html":{}},"body":{"classes/FindStationAgentsDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findstationmanager",{"_index":1698,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findstationmanager(currentuser",{"_index":1718,"title":{},"body":{"controllers/UsersController.html":{}}}],["findstationmanager(user",{"_index":1759,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduser",{"_index":1746,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduser(idno",{"_index":1761,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyid",{"_index":1747,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyid(idno",{"_index":1763,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyidnodto",{"_index":2021,"title":{"classes/findUserByIdNoDTO.html":{}},"body":{"coverage.html":{},"classes/findUserByIdNoDTO.html":{}}}],["firstname",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/JwtPayload.html":{},"classes/LipaDto.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"injectables/PercelService.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/VehicleOwner.html":{}}}],["forbiddenexception",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["found",{"_index":1767,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":2078,"title":{},"body":{"index.html":{}}}],["func",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["function",{"_index":1991,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["function(context",{"_index":2071,"title":{},"body":{"miscellaneous/functions.html":{}}}],["functions",{"_index":2067,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["functionsnest",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["general",{"_index":393,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"classes/CreateUserDto.html":{},"classes/JwtPayload.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["get(':id",{"_index":289,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/VehicleOwnersController.html":{}}}],["get('authorization",{"_index":1306,"title":{},"body":{"injectables/RefreshStrategy.html":{}}}],["get('driver/:vehicleid",{"_index":1909,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["get('find",{"_index":1714,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('my",{"_index":1469,"title":{},"body":{"controllers/StationsController.html":{}}}],["get('route/:id",{"_index":1327,"title":{},"body":{"controllers/RoutesController.html":{}}}],["get('station",{"_index":1710,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('user/:id",{"_index":1716,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('vehicle",{"_index":1912,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["get('vehicle/:id",{"_index":1906,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["getdriver",{"_index":1939,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["getdriver(user",{"_index":1952,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["getdrivervehicles",{"_index":1893,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["getdrivervehicles(user",{"_index":1908,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ChatController.html":{}}}],["gethello(@body",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello(body",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello(chat",{"_index":536,"title":{},"body":{"controllers/ChatController.html":{}}}],["getownervehicles",{"_index":1894,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["getownervehicles(user",{"_index":1911,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["getting",{"_index":2074,"title":{"index.html":{}},"body":{}}],["grow",{"_index":2110,"title":{},"body":{"index.html":{}}}],["handlemessage",{"_index":325,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/LipaNaMpesaGateway.html":{}}}],["handlemessage(@messagebody",{"_index":361,"title":{},"body":{"classes/AvailabilitiesGateway.html":{}}}],["handlemessage(mpesadata",{"_index":879,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["handlemessage(stationid",{"_index":334,"title":{},"body":{"classes/AvailabilitiesGateway.html":{}}}],["handlempesapaymentcreatedevent",{"_index":874,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["handlempesapaymentcreatedevent(mpesadata",{"_index":883,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["hasdriver",{"_index":1940,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["hasdriver(user",{"_index":1956,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["hashedrefreshtoken",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers",{"_index":961,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["here",{"_index":1264,"title":{},"body":{"injectables/PresenceService.html":{},"index.html":{}}}],["http",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["httpcode",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["httpexception",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["httpexception('delete",{"_index":1794,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpexception('driver",{"_index":1981,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["httpexception('percel",{"_index":1194,"title":{},"body":{"injectables/PercelService.html":{}}}],["httpexception('profile",{"_index":1297,"title":{},"body":{"injectables/ProfileService.html":{}}}],["httpexception('sacco",{"_index":1433,"title":{},"body":{"injectables/SaccosService.html":{}}}],["httpexception('station",{"_index":1524,"title":{},"body":{"injectables/StationsService.html":{}}}],["httpexception('transaction",{"_index":1003,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["httpexception('vehicle",{"_index":1985,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["httpexception(err.message",{"_index":956,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["httpexception(error",{"_index":1295,"title":{},"body":{"injectables/ProfileService.html":{}}}],["httpexception(error.message",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["httprequest",{"_index":2073,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://api.nganyaapp.com/api/lipa",{"_index":936,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["https://nestjs.com",{"_index":2126,"title":{},"body":{"index.html":{}}}],["https://sandbox.safaricom.co.ke/mpesa/stkpush/v1/processrequest",{"_index":939,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["https://sandbox.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials",{"_index":934,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["httpstatus",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["httpstatus.bad_gateway",{"_index":957,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["httpstatus.bad_request",{"_index":1430,"title":{},"body":{"injectables/SaccosService.html":{},"injectables/VehiclesService.html":{}}}],["httpstatus.conflict",{"_index":1777,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpstatus.created",{"_index":1196,"title":{},"body":{"injectables/PercelService.html":{},"injectables/SaccosService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["httpstatus.forbidden",{"_index":392,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["httpstatus.internal_server_error",{"_index":1365,"title":{},"body":{"injectables/RoutesService.html":{},"injectables/UsersService.html":{}}}],["httpstatus.not_found",{"_index":1520,"title":{},"body":{"injectables/StationsService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["httpstatus.ok",{"_index":411,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/ProfileService.html":{},"injectables/StationsService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["httpstatus.unauthorized",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["hydrateddocument",{"_index":442,"title":{},"body":{"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/Customer.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePresenceDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["identifier",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["idno",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/JwtPayload.html":{},"classes/LipaDto.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VehicleOwner.html":{},"classes/findUserByIdNoDTO.html":{}}}],["idno.dto.ts",{"_index":2020,"title":{},"body":{"coverage.html":{},"classes/findUserByIdNoDTO.html":{}}}],["idno.dto.ts:6",{"_index":2065,"title":{},"body":{"classes/findUserByIdNoDTO.html":{}}}],["idnumber",{"_index":679,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ignoreerrors",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["imageurl",{"_index":722,"title":{},"body":{"classes/CreateVehicleDto.html":{},"classes/Vehicle.html":{}}}],["immutable",{"_index":1095,"title":{},"body":{"classes/Parcel.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/VehicleOwner.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":1262,"title":{},"body":{"injectables/PresenceService.html":{}}}],["import",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/BookingGateway.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateChatDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"injectables/JwtGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"classes/findUserByIdNoDTO.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/PercelModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{}}}],["incompatibility",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateChatDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"classes/findUserByIdNoDTO.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Booking.html":{},"classes/BookingGateway.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateBookingDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreatePresenceDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"injectables/JwtGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Notification.html":{},"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/Presence.html":{},"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"classes/findUserByIdNoDTO.html":{}}}],["init",{"_index":944,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"classes/StkInitResponce.html":{},"coverage.html":{}}}],["initialise",{"_index":928,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["injectable",{"_index":108,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/BookingService.html":{},"injectables/ChatService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/NotificationsService.html":{},"injectables/PercelService.html":{},"injectables/PresenceService.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/BookingService.html":{},"injectables/ChatService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/NotificationsService.html":{},"injectables/PercelService.html":{},"injectables/PresenceService.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{},"coverage.html":{}}}],["injectables",{"_index":109,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/BookingService.html":{},"injectables/ChatService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/NotificationsService.html":{},"injectables/PercelService.html":{},"injectables/PresenceService.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{},"overview.html":{}}}],["injectmodel",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["injectmodel(availability.name",{"_index":352,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"injectables/PercelService.html":{},"injectables/TicketService.html":{}}}],["injectmodel(chat.name",{"_index":573,"title":{},"body":{"injectables/ChatService.html":{}}}],["injectmodel(lipanampesatransaction.name",{"_index":891,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{}}}],["injectmodel(percel.name",{"_index":1187,"title":{},"body":{"injectables/PercelService.html":{}}}],["injectmodel(route.name",{"_index":1358,"title":{},"body":{"injectables/RoutesService.html":{}}}],["injectmodel(sacco.name",{"_index":1425,"title":{},"body":{"injectables/SaccosService.html":{}}}],["injectmodel(station.name",{"_index":353,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"injectables/StationsService.html":{}}}],["injectmodel(ticket.name",{"_index":1599,"title":{},"body":{"injectables/TicketService.html":{}}}],["injectmodel(user.name",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["injectmodel(vehicle.name",{"_index":354,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["injectmodel(vehicleowner.name",{"_index":1878,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["inqueue",{"_index":1650,"title":{},"body":{"classes/UpdateVehicleDto.html":{}}}],["installation",{"_index":2088,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2090,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["isarray",{"_index":598,"title":{},"body":{"classes/CreateAvailabilityDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateVehicleDto.html":{},"classes/UpdateAvailabilityDto.html":{}}}],["isarray()@isnotempty",{"_index":735,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["isdatestring",{"_index":593,"title":{},"body":{"classes/CreateAvailabilityDto.html":{}}}],["isdriver",{"_index":1978,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["isemail",{"_index":685,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/Sacco.html":{},"classes/Station.html":{}}}],["isemail()@prop({required",{"_index":1375,"title":{},"body":{"classes/Sacco.html":{},"classes/Station.html":{}}}],["isempty",{"_index":827,"title":{},"body":{"classes/LipaDto.html":{}}}],["isglobal",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":587,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateChatDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/LipaDto.html":{},"classes/LogoutDto.html":{},"classes/UpdateDriverDto.html":{},"classes/findUserByIdNoDTO.html":{}}}],["isnotempty()@isarray",{"_index":649,"title":{},"body":{"classes/CreateRouteDto.html":{}}}],["isnotempty()@isnumber",{"_index":821,"title":{},"body":{"classes/LipaDto.html":{}}}],["isnotempty()@isstring",{"_index":585,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/LipaDto.html":{},"classes/UpdateDriverDto.html":{},"classes/findUserByIdNoDTO.html":{}}}],["isnumber",{"_index":749,"title":{},"body":{"classes/CreateVehicleDto.html":{},"classes/LipaDto.html":{}}}],["isnumber()@isnotempty",{"_index":727,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["isnumberstring",{"_index":588,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateVehicleOwnerDto.html":{}}}],["isnumberstring()@isnotempty",{"_index":583,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateVehicleOwnerDto.html":{}}}],["isphonenumber",{"_index":715,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isphonenumber('ke",{"_index":716,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":589,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateChatDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/FindStationAgentsDto.html":{},"classes/LipaDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/findUserByIdNoDTO.html":{}}}],["isstring()@isnotempty",{"_index":596,"title":{},"body":{"classes/CreateAvailabilityDto.html":{},"classes/CreateChatDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/LipaDto.html":{}}}],["isstring()@isphonenumber('ke",{"_index":708,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":2117,"title":{},"body":{"index.html":{}}}],["joinroom",{"_index":1241,"title":{},"body":{"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{}}}],["joinroom(user",{"_index":1246,"title":{},"body":{"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{}}}],["jwt",{"_index":811,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":812,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{}}}],["jwtguard",{"_index":308,"title":{"injectables/JwtGuard.html":{}},"body":{"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"controllers/ChatController.html":{},"injectables/JwtGuard.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":193,"title":{"classes/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"classes/JwtPayload.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtservice",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":152,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":2123,"title":{},"body":{"index.html":{}}}],["lastavailability",{"_index":1651,"title":{},"body":{"classes/UpdateVehicleDto.html":{}}}],["lastlogin",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["laststation",{"_index":1652,"title":{},"body":{"classes/UpdateVehicleDto.html":{},"classes/Vehicle.html":{},"injectables/VehiclesService.html":{}}}],["legend",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["level",{"_index":1666,"title":{},"body":{"classes/User.html":{}}}],["license",{"_index":2129,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2107,"title":{},"body":{"index.html":{}}}],["lipa",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"coverage.html":{}}}],["lipadto",{"_index":816,"title":{"classes/LipaDto.html":{}},"body":{"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"coverage.html":{}}}],["lipadto.amount",{"_index":968,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["lipadto.firstname",{"_index":984,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["lipadto.idno",{"_index":986,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["lipadto.phone",{"_index":970,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["lipadto.secondname",{"_index":985,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["lipanampesa",{"_index":1005,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["lipanampesacallbackdto",{"_index":829,"title":{"classes/LipaNaMpesaCallbackDto.html":{}},"body":{"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"coverage.html":{}}}],["lipanampesacontroller",{"_index":839,"title":{"controllers/LipaNaMpesaController.html":{}},"body":{"controllers/LipaNaMpesaController.html":{},"modules/LipaNaMpesaModule.html":{},"coverage.html":{}}}],["lipanampesagateway",{"_index":872,"title":{"classes/LipaNaMpesaGateway.html":{}},"body":{"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"coverage.html":{}}}],["lipanampesamodule",{"_index":52,"title":{"modules/LipaNaMpesaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules.html":{},"overview.html":{}}}],["lipanampesaservice",{"_index":858,"title":{"injectables/LipaNaMpesaService.html":{}},"body":{"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"coverage.html":{},"overview.html":{}}}],["lipanampesatransaction",{"_index":876,"title":{"classes/LipaNaMpesaTransaction.html":{}},"body":{"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lipanampesatransaction.name",{"_index":906,"title":{},"body":{"modules/LipaNaMpesaModule.html":{}}}],["lipanampesatransactiondocument",{"_index":887,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"miscellaneous/typealiases.html":{}}}],["lipanampesatransactionschema",{"_index":904,"title":{},"body":{"modules/LipaNaMpesaModule.html":{},"classes/LipaNaMpesaTransaction.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listentopaymentupdates",{"_index":911,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["listentopaymentupdates(mpesadata",{"_index":918,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["literal",{"_index":651,"title":{},"body":{"classes/CreateRouteDto.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["loading",{"_index":897,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["local",{"_index":2058,"title":{},"body":{"dependencies.html":{}}}],["location",{"_index":668,"title":{},"body":{"classes/CreateStationDto.html":{},"classes/Station.html":{},"injectables/StationsService.html":{}}}],["login",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(createauthdto",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.dto",{"_index":1038,"title":{},"body":{"classes/LogoutDto.html":{}}}],["logo",{"_index":659,"title":{},"body":{"classes/CreateSaccoDto.html":{},"classes/Sacco.html":{}}}],["logoutdto",{"_index":1035,"title":{"classes/LogoutDto.html":{}},"body":{"classes/LogoutDto.html":{},"coverage.html":{}}}],["main/.../index.ts",{"_index":2070,"title":{},"body":{"miscellaneous/functions.html":{}}}],["main/index.ts",{"_index":1990,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["maintenance",{"_index":739,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["make",{"_index":723,"title":{},"body":{"classes/CreateVehicleDto.html":{},"classes/Vehicle.html":{}}}],["manager",{"_index":384,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"classes/CreateUserDto.html":{},"classes/JwtPayload.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["managers",{"_index":390,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"injectables/UsersService.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Booking.html":{},"classes/BookingGateway.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateBookingDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreatePresenceDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"injectables/JwtGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Notification.html":{},"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/Presence.html":{},"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"dependencies.html":{},"classes/findUserByIdNoDTO.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantrequestid",{"_index":989,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/StkInitResponce.html":{}}}],["message",{"_index":112,"title":{},"body":{"injectables/AppService.html":{},"classes/Chat.html":{},"injectables/ChatService.html":{},"classes/CreateChatDto.html":{},"injectables/StationsService.html":{}}}],["messagebody",{"_index":342,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/BookingGateway.html":{},"classes/ChatGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/NotificationsGateway.html":{},"classes/PresenceGateway.html":{}}}],["metadata",{"_index":2061,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":959,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/JwtStrategy.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["mini",{"_index":742,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["miscellaneous",{"_index":2066,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2106,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2096,"title":{},"body":{"index.html":{}}}],["model",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"classes/CreateVehicleDto.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["model(\"parcel",{"_index":1111,"title":{},"body":{"classes/Parcel.html":{}}}],["model(\"triphistory",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":800,"title":{},"body":{"classes/JwtPayload.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["mongoose",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"injectables/ChatService.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/JwtPayload.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"classes/Route.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"injectables/StationsService.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/UpdateVehicleDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/PercelModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{}}}],["mongoosemodule.forfeature",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/PercelModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{}}}],["mongoosemodule.forroot(process.env.mongo_uri",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":2119,"title":{},"body":{"index.html":{}}}],["mpesa",{"_index":831,"title":{},"body":{"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"coverage.html":{}}}],["mpesa.controller",{"_index":903,"title":{},"body":{"modules/LipaNaMpesaModule.html":{}}}],["mpesa.controller.ts",{"_index":840,"title":{},"body":{"controllers/LipaNaMpesaController.html":{},"coverage.html":{}}}],["mpesa.controller.ts:24",{"_index":854,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["mpesa.controller.ts:32",{"_index":847,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["mpesa.controller.ts:37",{"_index":843,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["mpesa.controller.ts:42",{"_index":844,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["mpesa.controller.ts:47",{"_index":857,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["mpesa.controller.ts:55",{"_index":850,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["mpesa.dto",{"_index":837,"title":{},"body":{"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{}}}],["mpesa.dto.ts",{"_index":819,"title":{},"body":{"classes/LipaDto.html":{},"coverage.html":{}}}],["mpesa.dto.ts:10",{"_index":822,"title":{},"body":{"classes/LipaDto.html":{}}}],["mpesa.dto.ts:14",{"_index":823,"title":{},"body":{"classes/LipaDto.html":{}}}],["mpesa.dto.ts:18",{"_index":826,"title":{},"body":{"classes/LipaDto.html":{}}}],["mpesa.dto.ts:22",{"_index":824,"title":{},"body":{"classes/LipaDto.html":{}}}],["mpesa.dto.ts:6",{"_index":825,"title":{},"body":{"classes/LipaDto.html":{}}}],["mpesa.gateway",{"_index":905,"title":{},"body":{"modules/LipaNaMpesaModule.html":{}}}],["mpesa.gateway.ts",{"_index":873,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{},"coverage.html":{}}}],["mpesa.gateway.ts:18",{"_index":877,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["mpesa.gateway.ts:26",{"_index":878,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["mpesa.gateway.ts:28",{"_index":886,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["mpesa.gateway.ts:36",{"_index":881,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["mpesa.gateway.ts:49",{"_index":885,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["mpesa.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["mpesa.module.ts",{"_index":902,"title":{},"body":{"modules/LipaNaMpesaModule.html":{}}}],["mpesa.schema",{"_index":889,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{}}}],["mpesa.schema.ts",{"_index":1008,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mpesa.schema.ts:10",{"_index":1021,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:13",{"_index":1016,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:16",{"_index":1026,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:19",{"_index":1027,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:21",{"_index":1025,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:24",{"_index":1018,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:27",{"_index":1014,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:30",{"_index":1022,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:33",{"_index":1015,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:36",{"_index":1033,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:39",{"_index":1024,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:42",{"_index":1019,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:45",{"_index":1029,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:48",{"_index":1020,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:51",{"_index":1023,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:54",{"_index":1028,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:57",{"_index":1030,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:60",{"_index":1031,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:63",{"_index":1017,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:66",{"_index":1013,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.schema.ts:69",{"_index":1032,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{}}}],["mpesa.service",{"_index":859,"title":{},"body":{"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{}}}],["mpesa.service.ts",{"_index":907,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"coverage.html":{}}}],["mpesa.service.ts:146",{"_index":921,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa.service.ts:16",{"_index":915,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa.service.ts:185",{"_index":916,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa.service.ts:189",{"_index":917,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa.service.ts:193",{"_index":932,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa.service.ts:197",{"_index":925,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa.service.ts:201",{"_index":919,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa.service.ts:23",{"_index":935,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa.service.ts:26",{"_index":940,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa.service.ts:29",{"_index":938,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa.service.ts:41",{"_index":927,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa/callback",{"_index":937,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesa/dto/create",{"_index":818,"title":{},"body":{"classes/LipaDto.html":{},"coverage.html":{}}}],["mpesa/dto/lipa",{"_index":830,"title":{},"body":{"classes/LipaNaMpesaCallbackDto.html":{},"coverage.html":{}}}],["mpesa/lipa",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"coverage.html":{}}}],["mpesa/schema/lipa",{"_index":1007,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mpesa/types/stk",{"_index":1525,"title":{},"body":{"classes/StkInitResponce.html":{},"coverage.html":{}}}],["mpesacallback",{"_index":841,"title":{},"body":{"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{}}}],["mpesacallback(@body",{"_index":865,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["mpesacallback(createlipanampesadto",{"_index":845,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["mpesacallback(mpesaresponse",{"_index":920,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesadata",{"_index":882,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{}}}],["mpesadata.checkoutrequestid",{"_index":898,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["mpesadata.data",{"_index":899,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["mpesareceiptnumber",{"_index":996,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{}}}],["mpesaresponse",{"_index":924,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesaresponse.body?.stkcallback.checkoutrequestid",{"_index":988,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesaresponse.body?.stkcallback?.callbackmetadata?.item[1]?.value",{"_index":997,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesaresponse.body?.stkcallback?.callbackmetadata?.item[2]?.value",{"_index":999,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesaresponse.body?.stkcallback?.callbackmetadata?.item[3]?.value",{"_index":1001,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesaresponse.body?.stkcallback?.callbackmetadata?.item[4]?.value",{"_index":1002,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesaresponse.body?.stkcallback?.checkoutrequestid",{"_index":991,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesaresponse.body?.stkcallback?.merchantrequestid",{"_index":990,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesaresponse.body?.stkcallback?.resultcode",{"_index":993,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesaresponse.body?.stkcallback?.resultdesc",{"_index":995,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["mpesatrasaction",{"_index":1538,"title":{},"body":{"classes/Ticket.html":{}}}],["myprofile",{"_index":1284,"title":{},"body":{"injectables/ProfileService.html":{}}}],["myprofile(user",{"_index":1286,"title":{},"body":{"injectables/ProfileService.html":{}}}],["mystation",{"_index":1461,"title":{},"body":{"controllers/StationsController.html":{},"injectables/StationsService.html":{}}}],["mystation(@currentuser('station",{"_index":1481,"title":{},"body":{"controllers/StationsController.html":{}}}],["mystation(stationid",{"_index":1468,"title":{},"body":{"controllers/StationsController.html":{}}}],["mystation(userstationid",{"_index":1502,"title":{},"body":{"injectables/StationsService.html":{}}}],["myśliwiec",{"_index":2124,"title":{},"body":{"index.html":{}}}],["n",{"_index":951,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["na",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/StkInitResponce.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":351,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/LipaNaMpesaGateway.html":{}}}],["nest",{"_index":2084,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":2128,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":2031,"title":{},"body":{"dependencies.html":{}}}],["nestjs/azure",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LipaNaMpesaController.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":2036,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":836,"title":{},"body":{"classes/LipaNaMpesaCallbackDto.html":{},"classes/LogoutDto.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/Customer.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/Route.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"classes/Ticket.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":783,"title":{},"body":{"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2042,"title":{},"body":{"dependencies.html":{}}}],["nestjs/websockets",{"_index":343,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/BookingGateway.html":{},"classes/ChatGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/NotificationsGateway.html":{},"classes/PresenceGateway.html":{},"dependencies.html":{}}}],["new",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/BookingService.html":{},"injectables/ChatService.html":{},"classes/Customer.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newchat",{"_index":574,"title":{},"body":{"injectables/ChatService.html":{}}}],["newchat.save",{"_index":579,"title":{},"body":{"injectables/ChatService.html":{}}}],["nextstation",{"_index":1801,"title":{},"body":{"classes/Vehicle.html":{},"injectables/VehiclesService.html":{}}}],["nganya",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/LipaNaMpesaService.html":{}}}],["node.js",{"_index":2077,"title":{},"body":{"index.html":{}}}],["notification",{"_index":1039,"title":{"classes/Notification.html":{}},"body":{"classes/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["notification.dto",{"_index":1060,"title":{},"body":{"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"classes/UpdateNotificationDto.html":{}}}],["notification.dto.ts",{"_index":610,"title":{},"body":{"classes/CreateNotificationDto.html":{},"classes/UpdateNotificationDto.html":{},"coverage.html":{}}}],["notification.dto.ts:5",{"_index":1627,"title":{},"body":{"classes/UpdateNotificationDto.html":{}}}],["notifications",{"_index":1076,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications.gateway",{"_index":1069,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["notifications.service",{"_index":1059,"title":{},"body":{"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["notificationsgateway",{"_index":1041,"title":{"classes/NotificationsGateway.html":{}},"body":{"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{},"coverage.html":{}}}],["notificationsmodule",{"_index":53,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NotificationsModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservice",{"_index":1044,"title":{"injectables/NotificationsService.html":{}},"body":{"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["npm",{"_index":2089,"title":{},"body":{"index.html":{}}}],["null",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Percel.html":{},"classes/Ticket.html":{},"classes/User.html":{}}}],["number",{"_index":484,"title":{},"body":{"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"classes/CreateRouteDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateVehicleDto.html":{},"classes/LipaDto.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"injectables/RoutesService.html":{},"classes/Ticket.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"injectables/VehiclesService.html":{}}}],["number(n",{"_index":952,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["object",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ChatController.html":{},"classes/LipaNaMpesaTransaction.html":{},"injectables/UsersService.html":{}}}],["objectid",{"_index":423,"title":{},"body":{"classes/Availability.html":{},"classes/JwtPayload.html":{},"classes/Parcel.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["onevent",{"_index":890,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["onevent('mpesapayment.created",{"_index":884,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["onmoduleinit",{"_index":326,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/ChatGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/PresenceGateway.html":{}}}],["open",{"_index":2108,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateVehicleDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"classes/CreateVehicleDto.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["overview",{"_index":2133,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":724,"title":{},"body":{"classes/CreateVehicleDto.html":{},"classes/Vehicle.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["owner.dto",{"_index":1663,"title":{},"body":{"classes/UpdateVehicleOwnerDto.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{}}}],["owner.dto.ts",{"_index":753,"title":{},"body":{"classes/CreateVehicleOwnerDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"coverage.html":{}}}],["owner.dto.ts:11",{"_index":757,"title":{},"body":{"classes/CreateVehicleOwnerDto.html":{}}}],["owner.dto.ts:15",{"_index":756,"title":{},"body":{"classes/CreateVehicleOwnerDto.html":{}}}],["owner.dto.ts:19",{"_index":760,"title":{},"body":{"classes/CreateVehicleOwnerDto.html":{}}}],["owner.dto.ts:22",{"_index":754,"title":{},"body":{"classes/CreateVehicleOwnerDto.html":{}}}],["owner.dto.ts:26",{"_index":758,"title":{},"body":{"classes/CreateVehicleOwnerDto.html":{}}}],["owner.dto.ts:30",{"_index":755,"title":{},"body":{"classes/CreateVehicleOwnerDto.html":{}}}],["owner.dto.ts:34",{"_index":759,"title":{},"body":{"classes/CreateVehicleOwnerDto.html":{}}}],["owner.dto.ts:9",{"_index":1662,"title":{},"body":{"classes/UpdateVehicleOwnerDto.html":{}}}],["owner.schema",{"_index":1867,"title":{},"body":{"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"modules/VehiclesModule.html":{}}}],["owner.schema.ts",{"_index":1822,"title":{},"body":{"classes/VehicleOwner.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["owner.schema.ts:12",{"_index":1831,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner.schema.ts:15",{"_index":1827,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner.schema.ts:18",{"_index":1828,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner.schema.ts:21",{"_index":1825,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner.schema.ts:24",{"_index":1829,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner.schema.ts:31",{"_index":1824,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner.schema.ts:34",{"_index":1830,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner.schema.ts:37",{"_index":1832,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner.schema.ts:44",{"_index":1823,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner.schema.ts:47",{"_index":1833,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner.schema.ts:53",{"_index":1834,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner.schema.ts:9",{"_index":1826,"title":{},"body":{"classes/VehicleOwner.html":{}}}],["owner/:id",{"_index":1851,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["owner/:vehicleownerid",{"_index":1913,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["owners",{"_index":1840,"title":{},"body":{"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{}}}],["owners.controller",{"_index":1865,"title":{},"body":{"modules/VehicleOwnersModule.html":{}}}],["owners.controller.ts",{"_index":1839,"title":{},"body":{"controllers/VehicleOwnersController.html":{},"coverage.html":{}}}],["owners.controller.ts:24",{"_index":1844,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["owners.controller.ts:35",{"_index":1848,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["owners.controller.ts:40",{"_index":1849,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["owners.controller.ts:45",{"_index":1852,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["owners.controller.ts:54",{"_index":1847,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["owners.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["owners.module.ts",{"_index":1864,"title":{},"body":{"modules/VehicleOwnersModule.html":{}}}],["owners.service",{"_index":1854,"title":{},"body":{"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{}}}],["owners.service.ts",{"_index":1869,"title":{},"body":{"injectables/VehicleOwnersService.html":{},"coverage.html":{}}}],["owners.service.ts:100",{"_index":1874,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["owners.service.ts:11",{"_index":1871,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["owners.service.ts:19",{"_index":1873,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["owners.service.ts:46",{"_index":1875,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["owners.service.ts:62",{"_index":1876,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["owners.service.ts:75",{"_index":1877,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["owners/dto/create",{"_index":752,"title":{},"body":{"classes/CreateVehicleOwnerDto.html":{},"coverage.html":{}}}],["owners/dto/update",{"_index":1661,"title":{},"body":{"classes/UpdateVehicleOwnerDto.html":{},"coverage.html":{}}}],["owners/schema/vehicle",{"_index":1821,"title":{},"body":{"classes/VehicleOwner.html":{},"modules/VehiclesModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["owners/vehicle",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"coverage.html":{}}}],["package",{"_index":2030,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pad2",{"_index":950,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["param",{"_index":300,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"controllers/PercelController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["param(\"id",{"_index":1169,"title":{},"body":{"controllers/PercelController.html":{}}}],["param('availability/id",{"_index":315,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["param('id",{"_index":317,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["param('vehicleid",{"_index":1924,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["param('vehicleownerid",{"_index":1921,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/JwtStrategy.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"miscellaneous/functions.html":{}}}],["parcel",{"_index":1077,"title":{"classes/Parcel.html":{}},"body":{"classes/Parcel.html":{},"coverage.html":{}}}],["parceldescription",{"_index":1093,"title":{},"body":{"classes/Parcel.html":{}}}],["parceldocument",{"_index":1086,"title":{},"body":{"classes/Parcel.html":{},"miscellaneous/typealiases.html":{}}}],["parcelmodel",{"_index":1110,"title":{},"body":{"classes/Parcel.html":{}}}],["parceltype",{"_index":1092,"title":{},"body":{"classes/Parcel.html":{}}}],["partialtype",{"_index":835,"title":{},"body":{"classes/LipaNaMpesaCallbackDto.html":{},"classes/LogoutDto.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{}}}],["partialtype(createavailabilitydto",{"_index":1612,"title":{},"body":{"classes/UpdateAvailabilityDto.html":{}}}],["partialtype(createbookingdto",{"_index":1615,"title":{},"body":{"classes/UpdateBookingDto.html":{}}}],["partialtype(createchatdto",{"_index":1618,"title":{},"body":{"classes/UpdateChatDto.html":{}}}],["partialtype(createnotificationdto",{"_index":1628,"title":{},"body":{"classes/UpdateNotificationDto.html":{}}}],["partialtype(createperceldto",{"_index":1630,"title":{},"body":{"classes/UpdatePercelDto.html":{}}}],["partialtype(createpresencedto",{"_index":1633,"title":{},"body":{"classes/UpdatePresenceDto.html":{}}}],["partialtype(createprofiledto",{"_index":1635,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["partialtype(createroutedto",{"_index":1637,"title":{},"body":{"classes/UpdateRouteDto.html":{}}}],["partialtype(createsaccodto",{"_index":1639,"title":{},"body":{"classes/UpdateSaccoDto.html":{}}}],["partialtype(createstationdto",{"_index":1641,"title":{},"body":{"classes/UpdateStationDto.html":{}}}],["partialtype(createticketdto",{"_index":1643,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["partialtype(createuserdto",{"_index":1647,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createvehicledto",{"_index":1659,"title":{},"body":{"classes/UpdateVehicleDto.html":{}}}],["partialtype(lipadto",{"_index":838,"title":{},"body":{"classes/LipaNaMpesaCallbackDto.html":{}}}],["partya",{"_index":969,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["partyb",{"_index":971,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["passport",{"_index":810,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":807,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{}}}],["passreqtocallback",{"_index":1305,"title":{},"body":{"injectables/RefreshStrategy.html":{}}}],["password",{"_index":582,"title":{},"body":{"classes/CreateAuthDto.html":{},"injectables/LipaNaMpesaService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":299,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["patch(\"upadate/:id",{"_index":1168,"title":{},"body":{"controllers/PercelController.html":{}}}],["patch(':id",{"_index":856,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["patch('assign",{"_index":1701,"title":{},"body":{"controllers/UsersController.html":{},"controllers/VehiclesController.html":{}}}],["patch('upadate",{"_index":1850,"title":{},"body":{"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["patch('upadate/:id",{"_index":1158,"title":{},"body":{"controllers/PercelController.html":{}}}],["patch('update",{"_index":297,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["payload",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"injectables/JwtStrategy.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["payload.ts",{"_index":786,"title":{},"body":{"classes/JwtPayload.html":{},"coverage.html":{}}}],["payload.ts:10",{"_index":790,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:11",{"_index":792,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:12",{"_index":788,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:13",{"_index":793,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:14",{"_index":794,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:22",{"_index":795,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:23",{"_index":797,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:24",{"_index":799,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:25",{"_index":791,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:6",{"_index":787,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:7",{"_index":798,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:8",{"_index":789,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.ts:9",{"_index":796,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payment",{"_index":695,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["paymentid",{"_index":1087,"title":{},"body":{"classes/Parcel.html":{}}}],["paymentmethod",{"_index":680,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{}}}],["paymentmethode",{"_index":614,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["paymentmode",{"_index":1088,"title":{},"body":{"classes/Parcel.html":{}}}],["pending",{"_index":527,"title":{},"body":{"classes/Chat.html":{},"classes/CreateTicketDto.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{}}}],["percel",{"_index":1112,"title":{"classes/Percel.html":{}},"body":{"classes/Percel.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"coverage.html":{}}}],["percel.controller",{"_index":1174,"title":{},"body":{"modules/PercelModule.html":{}}}],["percel.dto",{"_index":1162,"title":{},"body":{"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/UpdatePercelDto.html":{}}}],["percel.dto.ts",{"_index":613,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/UpdatePercelDto.html":{},"coverage.html":{}}}],["percel.dto.ts:10",{"_index":637,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.dto.ts:14",{"_index":636,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.dto.ts:18",{"_index":634,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.dto.ts:22",{"_index":635,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.dto.ts:26",{"_index":629,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.dto.ts:30",{"_index":632,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.dto.ts:34",{"_index":631,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.dto.ts:38",{"_index":630,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.dto.ts:42",{"_index":627,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.dto.ts:45",{"_index":628,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.dto.ts:49",{"_index":626,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.dto.ts:6",{"_index":633,"title":{},"body":{"classes/CreatePercelDto.html":{}}}],["percel.name",{"_index":1178,"title":{},"body":{"modules/PercelModule.html":{}}}],["percel.service",{"_index":1161,"title":{},"body":{"controllers/PercelController.html":{},"modules/PercelModule.html":{}}}],["percel/percel.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["percelcontroller",{"_index":1148,"title":{"controllers/PercelController.html":{}},"body":{"controllers/PercelController.html":{},"modules/PercelModule.html":{},"coverage.html":{}}}],["perceldocument",{"_index":1145,"title":{},"body":{"classes/Percel.html":{},"injectables/PercelService.html":{},"miscellaneous/typealiases.html":{}}}],["percelmodel",{"_index":1182,"title":{},"body":{"injectables/PercelService.html":{}}}],["percelmodule",{"_index":54,"title":{"modules/PercelModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercelModule.html":{},"modules.html":{},"overview.html":{}}}],["percels",{"_index":1150,"title":{},"body":{"controllers/PercelController.html":{}}}],["percelschema",{"_index":1146,"title":{},"body":{"classes/Percel.html":{},"modules/PercelModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["percelservice",{"_index":1160,"title":{"injectables/PercelService.html":{}},"body":{"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"coverage.html":{},"overview.html":{}}}],["perceltype",{"_index":615,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["percelweight",{"_index":616,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["perform",{"_index":1202,"title":{},"body":{"injectables/PercelService.html":{},"injectables/StationsService.html":{},"injectables/UsersService.html":{}}}],["permision",{"_index":1966,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["permission",{"_index":251,"title":{"classes/Permission.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"classes/JwtPayload.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"injectables/RoutesService.html":{},"classes/User.html":{},"injectables/VehicleOwnersService.html":{},"coverage.html":{}}}],["phone",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/JwtPayload.html":{},"classes/LipaDto.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/User.html":{},"classes/VehicleOwner.html":{},"injectables/VehiclesService.html":{}}}],["phonenumber",{"_index":972,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{}}}],["photourl",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/JwtPayload.html":{},"injectables/PercelService.html":{},"classes/Station.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/VehicleOwner.html":{},"injectables/VehiclesService.html":{}}}],["pickedupat",{"_index":1114,"title":{},"body":{"classes/Percel.html":{}}}],["pickupagent",{"_index":1115,"title":{},"body":{"classes/Percel.html":{},"injectables/PercelService.html":{}}}],["plateno",{"_index":681,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/CreateVehicleDto.html":{},"classes/Ticket.html":{},"classes/Vehicle.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["please",{"_index":2118,"title":{},"body":{"index.html":{}}}],["populate('addedby",{"_index":1609,"title":{},"body":{"injectables/TicketService.html":{}}}],["populate('recivingagent",{"_index":1200,"title":{},"body":{"injectables/PercelService.html":{}}}],["populate('route",{"_index":398,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["populate('sacco",{"_index":1291,"title":{},"body":{"injectables/ProfileService.html":{}}}],["populate('sendingagent",{"_index":1199,"title":{},"body":{"injectables/PercelService.html":{}}}],["populate('sendingstation",{"_index":1201,"title":{},"body":{"injectables/PercelService.html":{}}}],["populate('station",{"_index":1293,"title":{},"body":{"injectables/ProfileService.html":{}}}],["populate('vehicle",{"_index":397,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"injectables/ProfileService.html":{}}}],["post",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AvailabilitiesController.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"controllers/PercelController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["post(\"send",{"_index":1164,"title":{},"body":{"controllers/PercelController.html":{}}}],["post('add",{"_index":283,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"controllers/RoutesController.html":{},"controllers/StationsController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["post('book",{"_index":1565,"title":{},"body":{"controllers/TicketController.html":{}}}],["post('callback",{"_index":846,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["post('login",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":863,"title":{},"body":{"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{}}}],["precence",{"_index":1263,"title":{},"body":{"injectables/PresenceService.html":{}}}],["prefix",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AvailabilitiesController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["presence",{"_index":1237,"title":{"classes/Presence.html":{}},"body":{"classes/Presence.html":{},"coverage.html":{}}}],["presence.dto",{"_index":1253,"title":{},"body":{"classes/PresenceGateway.html":{},"classes/UpdatePresenceDto.html":{}}}],["presence.dto.ts",{"_index":640,"title":{},"body":{"classes/CreatePresenceDto.html":{},"classes/UpdatePresenceDto.html":{},"coverage.html":{}}}],["presence.dto.ts:5",{"_index":1632,"title":{},"body":{"classes/UpdatePresenceDto.html":{}}}],["presence.gateway",{"_index":1259,"title":{},"body":{"modules/PresenceModule.html":{}}}],["presence.service",{"_index":1252,"title":{},"body":{"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{}}}],["presence/presence.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["presencegateway",{"_index":1239,"title":{"classes/PresenceGateway.html":{}},"body":{"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{},"coverage.html":{}}}],["presencemodule",{"_index":55,"title":{"modules/PresenceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PresenceModule.html":{},"modules.html":{},"overview.html":{}}}],["presenceservice",{"_index":1243,"title":{"injectables/PresenceService.html":{}},"body":{"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"coverage.html":{},"overview.html":{}}}],["price",{"_index":654,"title":{},"body":{"classes/CreateRouteDto.html":{}}}],["priceperseat",{"_index":682,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{}}}],["prices",{"_index":648,"title":{},"body":{"classes/CreateRouteDto.html":{},"classes/Route.html":{}}}],["primarycolor",{"_index":1370,"title":{},"body":{"classes/Sacco.html":{}}}],["private",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["production",{"_index":2098,"title":{},"body":{"index.html":{}}}],["profile",{"_index":1267,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":1282,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":1274,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts",{"_index":643,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.service",{"_index":1273,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":1265,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":56,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":1272,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":2076,"title":{},"body":{"index.html":{}}}],["project",{"_index":2109,"title":{},"body":{"index.html":{}}}],["promise",{"_index":1499,"title":{},"body":{"injectables/StationsService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["promise.all",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["prop",{"_index":426,"title":{},"body":{"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/Customer.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{}}}],["prop({default",{"_index":451,"title":{},"body":{"classes/Availability-1.html":{},"classes/Customer.html":{},"classes/Parcel.html":{},"classes/User.html":{},"classes/Vehicle.html":{}}}],["prop({required",{"_index":768,"title":{},"body":{"classes/Customer.html":{},"classes/Parcel.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{}}}],["prop({type",{"_index":422,"title":{},"body":{"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Ticket.html":{},"classes/User.html":{},"classes/Vehicle.html":{}}}],["properties",{"_index":323,"title":{"properties.html":{}},"body":{"classes/AvailabilitiesGateway.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/ChatGateway.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateChatDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"classes/JwtPayload.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"classes/Permission.html":{},"classes/PresenceGateway.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"classes/findUserByIdNoDTO.html":{},"properties.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["push",{"_index":930,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["query",{"_index":1154,"title":{},"body":{"controllers/PercelController.html":{},"injectables/PercelService.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["query.plateno.tolowercase",{"_index":1973,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["querydata",{"_index":1703,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["querydata.station",{"_index":1771,"title":{},"body":{"injectables/UsersService.html":{}}}],["read",{"_index":520,"title":{},"body":{"classes/Chat.html":{},"index.html":{}}}],["readonly",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePercelDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LogoutDto.html":{},"classes/NotificationsGateway.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["receivingcustomer",{"_index":1098,"title":{},"body":{"classes/Parcel.html":{}}}],["recievedby",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reciverfirstname",{"_index":617,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["reciveridno",{"_index":1116,"title":{},"body":{"classes/Percel.html":{}}}],["reciverlocation",{"_index":618,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["reciverphone",{"_index":619,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["reciversecondname",{"_index":620,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["recivingagent",{"_index":1117,"title":{},"body":{"classes/Percel.html":{},"injectables/PercelService.html":{}}}],["recivingstation",{"_index":1118,"title":{},"body":{"classes/Percel.html":{},"injectables/PercelService.html":{}}}],["ref",{"_index":424,"title":{},"body":{"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Ticket.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":2060,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RefreshStrategy.html":{}}}],["refresh(refreshtoken",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"classes/LogoutDto.html":{}}}],["refresh_token_secret",{"_index":1304,"title":{},"body":{"injectables/RefreshStrategy.html":{}}}],["refreshstrategy",{"_index":153,"title":{"injectables/RefreshStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/RefreshStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["refreshtoken",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RefreshStrategy.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["registration",{"_index":1961,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["regno",{"_index":1948,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["remove",{"_index":279,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["remove(@messagebody",{"_index":502,"title":{},"body":{"classes/BookingGateway.html":{},"classes/NotificationsGateway.html":{}}}],["remove(@param('id",{"_index":319,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{}}}],["remove(_id",{"_index":1355,"title":{},"body":{"injectables/RoutesService.html":{}}}],["remove(id",{"_index":291,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["removed",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["removes",{"_index":517,"title":{},"body":{"injectables/BookingService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/NotificationsService.html":{},"injectables/SaccosService.html":{},"injectables/TicketService.html":{}}}],["replace('bearer",{"_index":1307,"title":{},"body":{"injectables/RefreshStrategy.html":{}}}],["reponce.type",{"_index":945,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["reponce.type.ts",{"_index":1526,"title":{},"body":{"classes/StkInitResponce.html":{},"coverage.html":{}}}],["reponce.type.ts:2",{"_index":1530,"title":{},"body":{"classes/StkInitResponce.html":{}}}],["reponce.type.ts:3",{"_index":1528,"title":{},"body":{"classes/StkInitResponce.html":{}}}],["reponce.type.ts:4",{"_index":1531,"title":{},"body":{"classes/StkInitResponce.html":{}}}],["reponce.type.ts:5",{"_index":1532,"title":{},"body":{"classes/StkInitResponce.html":{}}}],["reponce.type.ts:6",{"_index":1529,"title":{},"body":{"classes/StkInitResponce.html":{}}}],["repository",{"_index":2087,"title":{},"body":{"index.html":{}}}],["req",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshStrategy.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshStrategy.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":775,"title":{},"body":{"classes/Customer.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"miscellaneous/variables.html":{}}}],["requres",{"_index":931,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["res",{"_index":979,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["res.data",{"_index":980,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["res.data.access_token",{"_index":953,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["responsecode",{"_index":1527,"title":{},"body":{"classes/StkInitResponce.html":{}}}],["responsedescription",{"_index":1011,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{},"classes/StkInitResponce.html":{}}}],["result",{"_index":958,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"injectables/VehiclesService.html":{}}}],["result.checkoutrequestid",{"_index":982,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["resultcode",{"_index":992,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{}}}],["resultdesc",{"_index":994,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Booking.html":{},"classes/BookingGateway.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateBookingDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreatePresenceDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"injectables/JwtGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Notification.html":{},"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/Presence.html":{},"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"dependencies.html":{},"classes/findUserByIdNoDTO.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/JwtStrategy.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/JwtStrategy.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/JwtPayload.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["route",{"_index":446,"title":{"classes/Route.html":{}},"body":{"classes/Availability-1.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateVehicleDto.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{}}}],["route.dto",{"_index":1335,"title":{},"body":{"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"classes/UpdateRouteDto.html":{}}}],["route.dto.ts",{"_index":646,"title":{},"body":{"classes/CreateRouteDto.html":{},"classes/UpdateRouteDto.html":{},"coverage.html":{}}}],["route.dto.ts:6",{"_index":650,"title":{},"body":{"classes/CreateRouteDto.html":{}}}],["route.dto.ts:9",{"_index":652,"title":{},"body":{"classes/CreateRouteDto.html":{}}}],["route.name",{"_index":1347,"title":{},"body":{"modules/RoutesModule.html":{}}}],["route/:id",{"_index":1329,"title":{},"body":{"controllers/RoutesController.html":{}}}],["routedocument",{"_index":1318,"title":{},"body":{"classes/Route.html":{},"injectables/RoutesService.html":{},"miscellaneous/typealiases.html":{}}}],["routemodel",{"_index":1351,"title":{},"body":{"injectables/RoutesService.html":{}}}],["routes",{"_index":1323,"title":{},"body":{"controllers/RoutesController.html":{},"injectables/RoutesService.html":{}}}],["routes.controller",{"_index":1345,"title":{},"body":{"modules/RoutesModule.html":{}}}],["routes.service",{"_index":1334,"title":{},"body":{"controllers/RoutesController.html":{},"modules/RoutesModule.html":{}}}],["routes/routes.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["routeschema",{"_index":1319,"title":{},"body":{"classes/Route.html":{},"modules/RoutesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routescontroller",{"_index":1321,"title":{"controllers/RoutesController.html":{}},"body":{"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"coverage.html":{}}}],["routesmodule",{"_index":57,"title":{"modules/RoutesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["routesservice",{"_index":1333,"title":{"injectables/RoutesService.html":{}},"body":{"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":2093,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2063,"title":{},"body":{"dependencies.html":{}}}],["sacco",{"_index":247,"title":{"classes/Sacco.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"injectables/ChatService.html":{},"classes/JwtPayload.html":{},"injectables/LipaNaMpesaService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"injectables/PercelService.html":{},"classes/Route.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"injectables/StationsService.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sacco.dto",{"_index":1401,"title":{},"body":{"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"classes/UpdateSaccoDto.html":{}}}],["sacco.dto.ts",{"_index":657,"title":{},"body":{"classes/CreateSaccoDto.html":{},"classes/UpdateSaccoDto.html":{},"coverage.html":{}}}],["sacco.dto.ts:10",{"_index":660,"title":{},"body":{"classes/CreateSaccoDto.html":{}}}],["sacco.dto.ts:14",{"_index":664,"title":{},"body":{"classes/CreateSaccoDto.html":{}}}],["sacco.dto.ts:18",{"_index":661,"title":{},"body":{"classes/CreateSaccoDto.html":{}}}],["sacco.dto.ts:22",{"_index":662,"title":{},"body":{"classes/CreateSaccoDto.html":{}}}],["sacco.dto.ts:6",{"_index":663,"title":{},"body":{"classes/CreateSaccoDto.html":{}}}],["sacco.name",{"_index":1413,"title":{},"body":{"modules/SaccosModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{}}}],["sacco/:id",{"_index":1395,"title":{},"body":{"controllers/SaccosController.html":{}}}],["saccodocument",{"_index":1385,"title":{},"body":{"classes/Sacco.html":{},"injectables/SaccosService.html":{},"miscellaneous/typealiases.html":{}}}],["saccomodel",{"_index":1418,"title":{},"body":{"injectables/SaccosService.html":{}}}],["saccos",{"_index":1390,"title":{},"body":{"controllers/SaccosController.html":{},"injectables/SaccosService.html":{}}}],["saccos.controller",{"_index":1411,"title":{},"body":{"modules/SaccosModule.html":{}}}],["saccos.service",{"_index":1400,"title":{},"body":{"controllers/SaccosController.html":{},"modules/SaccosModule.html":{}}}],["saccos/saccos.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["saccoschema",{"_index":1386,"title":{},"body":{"classes/Sacco.html":{},"modules/SaccosModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["saccoscontroller",{"_index":1388,"title":{"controllers/SaccosController.html":{}},"body":{"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"coverage.html":{}}}],["saccosmodule",{"_index":58,"title":{"modules/SaccosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SaccosModule.html":{},"modules.html":{},"overview.html":{}}}],["saccosservice",{"_index":1399,"title":{"injectables/SaccosService.html":{}},"body":{"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"coverage.html":{},"overview.html":{}}}],["sacoo",{"_index":1012,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{},"injectables/UsersService.html":{}}}],["saved",{"_index":1004,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["scalable",{"_index":2081,"title":{},"body":{"index.html":{}}}],["schema",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"modules/ChatModule.html":{},"classes/Customer.html":{},"modules/LipaNaMpesaModule.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"modules/PercelModule.html":{},"modules/ProfileModule.html":{},"classes/Route.html":{},"modules/RoutesModule.html":{},"classes/Sacco.html":{},"modules/SaccosModule.html":{},"classes/Station.html":{},"modules/StationsModule.html":{},"classes/Ticket.html":{},"modules/TicketModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"miscellaneous/variables.html":{}}}],["schema/availability.schema",{"_index":349,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{}}}],["schema/chat.schema",{"_index":560,"title":{},"body":{"modules/ChatModule.html":{},"injectables/ChatService.html":{}}}],["schema/lipa",{"_index":888,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{}}}],["schema/percel.schema",{"_index":1177,"title":{},"body":{"modules/PercelModule.html":{},"injectables/PercelService.html":{}}}],["schema/route.schema",{"_index":1346,"title":{},"body":{"modules/RoutesModule.html":{},"injectables/RoutesService.html":{}}}],["schema/sacco.schema",{"_index":1412,"title":{},"body":{"modules/SaccosModule.html":{},"injectables/SaccosService.html":{}}}],["schema/station.schema",{"_index":1490,"title":{},"body":{"modules/StationsModule.html":{},"injectables/StationsService.html":{}}}],["schema/tickets.schema",{"_index":1586,"title":{},"body":{"modules/TicketModule.html":{},"injectables/TicketService.html":{}}}],["schema/user.schema",{"_index":1740,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["schema/vehicle",{"_index":1866,"title":{},"body":{"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{}}}],["schema/vehicle.schema",{"_index":1936,"title":{},"body":{"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{}}}],["schemafactory",{"_index":465,"title":{},"body":{"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{}}}],["schemafactory.createforclass",{"_index":1034,"title":{},"body":{"classes/LipaNaMpesaTransaction.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(availability",{"_index":470,"title":{},"body":{"classes/Availability-1.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(chat",{"_index":533,"title":{},"body":{"classes/Chat.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(percel",{"_index":1147,"title":{},"body":{"classes/Percel.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(route",{"_index":1320,"title":{},"body":{"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(sacco",{"_index":1387,"title":{},"body":{"classes/Sacco.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(station",{"_index":1456,"title":{},"body":{"classes/Station.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(ticket",{"_index":1560,"title":{},"body":{"classes/Ticket.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1691,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(vehicle",{"_index":1820,"title":{},"body":{"classes/Vehicle.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(vehicleowner",{"_index":1837,"title":{},"body":{"classes/VehicleOwner.html":{},"miscellaneous/variables.html":{}}}],["schematics/angular",{"_index":2044,"title":{},"body":{"dependencies.html":{}}}],["schematypes",{"_index":466,"title":{},"body":{"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{}}}],["schematypes.objectid",{"_index":469,"title":{},"body":{"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{}}}],["seatlayout",{"_index":725,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["seatno",{"_index":765,"title":{},"body":{"classes/Customer.html":{},"classes/Parcel.html":{}}}],["seatst",{"_index":1602,"title":{},"body":{"injectables/TicketService.html":{}}}],["secondarycolor",{"_index":1371,"title":{},"body":{"classes/Sacco.html":{}}}],["secondname",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/JwtPayload.html":{},"classes/LipaDto.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"injectables/PercelService.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/VehicleOwner.html":{},"injectables/VehiclesService.html":{}}}],["secret",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":814,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{}}}],["see",{"_index":1438,"title":{},"body":{"injectables/SaccosService.html":{},"injectables/VehiclesService.html":{}}}],["select",{"_index":1294,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["select('_id",{"_index":1516,"title":{},"body":{"injectables/StationsService.html":{}}}],["select('firstname",{"_index":1982,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["select('phone",{"_index":1798,"title":{},"body":{"injectables/UsersService.html":{}}}],["selected",{"_index":1440,"title":{},"body":{"injectables/SaccosService.html":{},"injectables/VehiclesService.html":{}}}],["senderfirstname",{"_index":621,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["senderidno",{"_index":622,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["senderlocation",{"_index":623,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["senderphone",{"_index":624,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["sendersecondname",{"_index":625,"title":{},"body":{"classes/CreatePercelDto.html":{},"classes/Percel.html":{}}}],["sendingagent",{"_index":1119,"title":{},"body":{"classes/Percel.html":{},"injectables/PercelService.html":{}}}],["sendingcustomer",{"_index":1096,"title":{},"body":{"classes/Parcel.html":{}}}],["sendingfrom",{"_index":1099,"title":{},"body":{"classes/Parcel.html":{}}}],["sendingstation",{"_index":1120,"title":{},"body":{"classes/Percel.html":{},"injectables/PercelService.html":{}}}],["sendingto",{"_index":1100,"title":{},"body":{"classes/Parcel.html":{}}}],["sendmessage",{"_index":563,"title":{},"body":{"injectables/ChatService.html":{}}}],["sendmessage(chat",{"_index":569,"title":{},"body":{"injectables/ChatService.html":{}}}],["sendpercel",{"_index":1151,"title":{},"body":{"controllers/PercelController.html":{},"injectables/PercelService.html":{}}}],["sendpercel(createperceldto",{"_index":1155,"title":{},"body":{"controllers/PercelController.html":{},"injectables/PercelService.html":{}}}],["sendstk",{"_index":842,"title":{},"body":{"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{}}}],["sendstk(createlipanampesadto",{"_index":851,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["sendstk(lipadto",{"_index":926,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["sent",{"_index":1195,"title":{},"body":{"injectables/PercelService.html":{}}}],["server",{"_index":324,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/ChatGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/PresenceGateway.html":{},"injectables/TicketService.html":{},"index.html":{}}}],["service",{"_index":738,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["shipingvehicle",{"_index":1094,"title":{},"body":{"classes/Parcel.html":{}}}],["shippingcost",{"_index":1089,"title":{},"body":{"classes/Parcel.html":{}}}],["shortcode",{"_index":946,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["side",{"_index":2082,"title":{},"body":{"index.html":{}}}],["signout",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signout(@currentuser('_id",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["signout(id",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout(userid",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["signtoken",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(user",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["socket",{"_index":356,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/ChatGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{}}}],["socket.id",{"_index":360,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/PresenceGateway.html":{}}}],["socket.io",{"_index":350,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/ChatGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"dependencies.html":{}}}],["socket.io/mongo",{"_index":2046,"title":{},"body":{"dependencies.html":{}}}],["socket.nsp.name",{"_index":358,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/PresenceGateway.html":{}}}],["solution",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["something",{"_index":1362,"title":{},"body":{"injectables/RoutesService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Booking.html":{},"classes/BookingGateway.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateBookingDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreatePresenceDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"injectables/JwtGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Notification.html":{},"classes/NotificationsGateway.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/Presence.html":{},"classes/PresenceGateway.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"modules/RoutesModule.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"modules/SaccosModule.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"classes/findUserByIdNoDTO.html":{},"index.html":{}}}],["sponsors",{"_index":2112,"title":{},"body":{"index.html":{}}}],["src/.../availability.schema.ts",{"_index":2144,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../availability.ts",{"_index":2143,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../chat.schema.ts",{"_index":2145,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../customer.ts",{"_index":2146,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../lipa",{"_index":2147,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.azure.ts",{"_index":2069,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":2068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../parcel.ts",{"_index":2148,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../percel.schema.ts",{"_index":2149,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../route.schema.ts",{"_index":2150,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sacco.schema.ts",{"_index":2151,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../station.schema.ts",{"_index":2152,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tickets.schema.ts",{"_index":2153,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../triphistory.ts",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2154,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../vehicle",{"_index":2156,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../vehicle.schema.ts",{"_index":2155,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":110,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":111,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:18",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:45",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:85",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:98",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":581,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:10",{"_index":584,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["src/auth/dto/login.dto.ts:14",{"_index":586,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["src/auth/dto/logout.dto.ts",{"_index":1036,"title":{},"body":{"classes/LogoutDto.html":{},"coverage.html":{}}}],["src/auth/dto/logout.dto.ts:7",{"_index":1037,"title":{},"body":{"classes/LogoutDto.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":118,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard",{"_index":309,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"controllers/ChatController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["src/auth/guards/jwt.guard.ts",{"_index":780,"title":{},"body":{"injectables/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard.ts:5",{"_index":781,"title":{},"body":{"injectables/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":801,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":804,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:19",{"_index":806,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/refresh.strategy.ts",{"_index":1299,"title":{},"body":{"injectables/RefreshStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/refresh.strategy.ts:11",{"_index":1300,"title":{},"body":{"injectables/RefreshStrategy.html":{}}}],["src/auth/strategy/refresh.strategy.ts:23",{"_index":1302,"title":{},"body":{"injectables/RefreshStrategy.html":{}}}],["src/availabilities/availabilities.controller.ts",{"_index":274,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"coverage.html":{}}}],["src/availabilities/availabilities.controller.ts:26",{"_index":285,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["src/availabilities/availabilities.controller.ts:37",{"_index":287,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["src/availabilities/availabilities.controller.ts:42",{"_index":290,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["src/availabilities/availabilities.controller.ts:50",{"_index":298,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["src/availabilities/availabilities.controller.ts:63",{"_index":294,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["src/availabilities/availabilities.module.ts",{"_index":365,"title":{},"body":{"modules/AvailabilitiesModule.html":{}}}],["src/availabilities/availabilities.service.ts",{"_index":374,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"coverage.html":{}}}],["src/availabilities/availabilities.service.ts:124",{"_index":380,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["src/availabilities/availabilities.service.ts:15",{"_index":377,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["src/availabilities/availabilities.service.ts:25",{"_index":378,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["src/availabilities/availabilities.service.ts:49",{"_index":381,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["src/availabilities/availabilities.service.ts:86",{"_index":382,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["src/availabilities/availabilities.service.ts:90",{"_index":383,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["src/availabilities/availabilty.gateway.ts",{"_index":322,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"coverage.html":{}}}],["src/availabilities/availabilty.gateway.ts:24",{"_index":331,"title":{},"body":{"classes/AvailabilitiesGateway.html":{}}}],["src/availabilities/availabilty.gateway.ts:37",{"_index":333,"title":{},"body":{"classes/AvailabilitiesGateway.html":{}}}],["src/availabilities/availabilty.gateway.ts:39",{"_index":338,"title":{},"body":{"classes/AvailabilitiesGateway.html":{}}}],["src/availabilities/availabilty.gateway.ts:47",{"_index":336,"title":{},"body":{"classes/AvailabilitiesGateway.html":{}}}],["src/availabilities/dto/create",{"_index":591,"title":{},"body":{"classes/CreateAvailabilityDto.html":{},"coverage.html":{}}}],["src/availabilities/dto/update",{"_index":1610,"title":{},"body":{"classes/UpdateAvailabilityDto.html":{},"coverage.html":{}}}],["src/availabilities/schema/availability.schema",{"_index":1175,"title":{},"body":{"modules/PercelModule.html":{},"modules/TicketModule.html":{}}}],["src/availabilities/schema/availability.schema.ts",{"_index":444,"title":{},"body":{"classes/Availability-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/availabilities/schema/availability.schema.ts:12",{"_index":456,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/availabilities/schema/availability.schema.ts:15",{"_index":459,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/availabilities/schema/availability.schema.ts:18",{"_index":455,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/availabilities/schema/availability.schema.ts:21",{"_index":452,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/availabilities/schema/availability.schema.ts:24",{"_index":464,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/availabilities/schema/availability.schema.ts:27",{"_index":454,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/availabilities/schema/availability.schema.ts:30",{"_index":457,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/availabilities/schema/availability.schema.ts:33",{"_index":461,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/availabilities/schema/availability.schema.ts:36",{"_index":450,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/availabilities/schema/availability.schema.ts:39",{"_index":462,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/availabilities/schema/availability.schema.ts:42",{"_index":463,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/availabilities/schema/availability.schema.ts:9",{"_index":458,"title":{},"body":{"classes/Availability-1.html":{}}}],["src/booking/booking.gateway.ts",{"_index":474,"title":{},"body":{"classes/BookingGateway.html":{},"coverage.html":{}}}],["src/booking/booking.gateway.ts:11",{"_index":481,"title":{},"body":{"classes/BookingGateway.html":{}}}],["src/booking/booking.gateway.ts:16",{"_index":483,"title":{},"body":{"classes/BookingGateway.html":{}}}],["src/booking/booking.gateway.ts:21",{"_index":486,"title":{},"body":{"classes/BookingGateway.html":{}}}],["src/booking/booking.gateway.ts:26",{"_index":492,"title":{},"body":{"classes/BookingGateway.html":{}}}],["src/booking/booking.gateway.ts:31",{"_index":488,"title":{},"body":{"classes/BookingGateway.html":{}}}],["src/booking/booking.gateway.ts:7",{"_index":477,"title":{},"body":{"classes/BookingGateway.html":{}}}],["src/booking/booking.module.ts",{"_index":506,"title":{},"body":{"modules/BookingModule.html":{}}}],["src/booking/booking.service.ts",{"_index":508,"title":{},"body":{"injectables/BookingService.html":{},"coverage.html":{}}}],["src/booking/booking.service.ts:11",{"_index":510,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:15",{"_index":511,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:19",{"_index":513,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:23",{"_index":512,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:7",{"_index":509,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/dto/create",{"_index":601,"title":{},"body":{"classes/CreateBookingDto.html":{},"coverage.html":{}}}],["src/booking/dto/update",{"_index":1613,"title":{},"body":{"classes/UpdateBookingDto.html":{},"coverage.html":{}}}],["src/booking/schema/booking.schema.ts",{"_index":472,"title":{},"body":{"classes/Booking.html":{},"coverage.html":{}}}],["src/chat/chat.controller.ts",{"_index":535,"title":{},"body":{"controllers/ChatController.html":{},"coverage.html":{}}}],["src/chat/chat.controller.ts:14",{"_index":538,"title":{},"body":{"controllers/ChatController.html":{}}}],["src/chat/chat.gateway.ts",{"_index":544,"title":{},"body":{"classes/ChatGateway.html":{},"coverage.html":{}}}],["src/chat/chat.gateway.ts:13",{"_index":546,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/chat.gateway.ts:17",{"_index":547,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/chat.gateway.ts:19",{"_index":551,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/chat.gateway.ts:24",{"_index":550,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/chat.module.ts",{"_index":557,"title":{},"body":{"modules/ChatModule.html":{}}}],["src/chat/chat.service.ts",{"_index":562,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{}}}],["src/chat/chat.service.ts:10",{"_index":566,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/chat.service.ts:15",{"_index":570,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/chat.service.ts:25",{"_index":568,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/chat.service.ts:29",{"_index":572,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/dto/create",{"_index":603,"title":{},"body":{"classes/CreateChatDto.html":{},"coverage.html":{}}}],["src/chat/dto/update",{"_index":1616,"title":{},"body":{"classes/UpdateChatDto.html":{},"coverage.html":{}}}],["src/chat/schema/chat.schema.ts",{"_index":519,"title":{},"body":{"classes/Chat.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/chat/schema/chat.schema.ts:10",{"_index":523,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/schema/chat.schema.ts:13",{"_index":522,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/schema/chat.schema.ts:16",{"_index":529,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/schema/chat.schema.ts:19",{"_index":528,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/schema/chat.schema.ts:22",{"_index":525,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/schema/chat.schema.ts:25",{"_index":521,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/schema/chat.schema.ts:28",{"_index":526,"title":{},"body":{"classes/Chat.html":{}}}],["src/common/decorators/current",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"controllers/ChatController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lipa",{"_index":817,"title":{},"body":{"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"modules/LipaNaMpesaModule.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/StkInitResponce.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/main.azure.ts",{"_index":2007,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":2009,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/notifications/dto/create",{"_index":609,"title":{},"body":{"classes/CreateNotificationDto.html":{},"coverage.html":{}}}],["src/notifications/dto/update",{"_index":1626,"title":{},"body":{"classes/UpdateNotificationDto.html":{},"coverage.html":{}}}],["src/notifications/entities/notification.entity.ts",{"_index":1040,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["src/notifications/notifications.gateway.ts",{"_index":1042,"title":{},"body":{"classes/NotificationsGateway.html":{},"coverage.html":{}}}],["src/notifications/notifications.gateway.ts:11",{"_index":1048,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["src/notifications/notifications.gateway.ts:16",{"_index":1050,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["src/notifications/notifications.gateway.ts:21",{"_index":1052,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["src/notifications/notifications.gateway.ts:26",{"_index":1058,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["src/notifications/notifications.gateway.ts:31",{"_index":1054,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["src/notifications/notifications.gateway.ts:7",{"_index":1045,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["src/notifications/notifications.module.ts",{"_index":1068,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["src/notifications/notifications.service.ts",{"_index":1070,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/notifications/notifications.service.ts:11",{"_index":1072,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:15",{"_index":1073,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:19",{"_index":1075,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:23",{"_index":1074,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:7",{"_index":1071,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/percel/dto/create",{"_index":612,"title":{},"body":{"classes/CreatePercelDto.html":{},"coverage.html":{}}}],["src/percel/dto/update",{"_index":1629,"title":{},"body":{"classes/UpdatePercelDto.html":{},"coverage.html":{}}}],["src/percel/percel.controller.ts",{"_index":1149,"title":{},"body":{"controllers/PercelController.html":{},"coverage.html":{}}}],["src/percel/percel.controller.ts:25",{"_index":1156,"title":{},"body":{"controllers/PercelController.html":{}}}],["src/percel/percel.controller.ts:33",{"_index":1153,"title":{},"body":{"controllers/PercelController.html":{}}}],["src/percel/percel.controller.ts:38",{"_index":1159,"title":{},"body":{"controllers/PercelController.html":{}}}],["src/percel/percel.module.ts",{"_index":1173,"title":{},"body":{"modules/PercelModule.html":{}}}],["src/percel/percel.service.ts",{"_index":1179,"title":{},"body":{"injectables/PercelService.html":{},"coverage.html":{}}}],["src/percel/percel.service.ts:11",{"_index":1181,"title":{},"body":{"injectables/PercelService.html":{}}}],["src/percel/percel.service.ts:18",{"_index":1184,"title":{},"body":{"injectables/PercelService.html":{}}}],["src/percel/percel.service.ts:41",{"_index":1183,"title":{},"body":{"injectables/PercelService.html":{}}}],["src/percel/percel.service.ts:81",{"_index":1186,"title":{},"body":{"injectables/PercelService.html":{}}}],["src/percel/schema/percel.schema.ts",{"_index":1113,"title":{},"body":{"classes/Percel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/percel/schema/percel.schema.ts:12",{"_index":1140,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:15",{"_index":1139,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:18",{"_index":1138,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:21",{"_index":1137,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:24",{"_index":1128,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:27",{"_index":1132,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:30",{"_index":1131,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:33",{"_index":1130,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:36",{"_index":1129,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:39",{"_index":1124,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:42",{"_index":1125,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:45",{"_index":1123,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:48",{"_index":1143,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:51",{"_index":1141,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:54",{"_index":1133,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:57",{"_index":1122,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:60",{"_index":1121,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:63",{"_index":1135,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:70",{"_index":1142,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:73",{"_index":1134,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:76",{"_index":1126,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:79",{"_index":1127,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:82",{"_index":1144,"title":{},"body":{"classes/Percel.html":{}}}],["src/percel/schema/percel.schema.ts:9",{"_index":1136,"title":{},"body":{"classes/Percel.html":{}}}],["src/presence/dto/create",{"_index":639,"title":{},"body":{"classes/CreatePresenceDto.html":{},"coverage.html":{}}}],["src/presence/dto/update",{"_index":1631,"title":{},"body":{"classes/UpdatePresenceDto.html":{},"coverage.html":{}}}],["src/presence/entities/presence.entity.ts",{"_index":1238,"title":{},"body":{"classes/Presence.html":{},"coverage.html":{}}}],["src/presence/presence.gateway.ts",{"_index":1240,"title":{},"body":{"classes/PresenceGateway.html":{},"coverage.html":{}}}],["src/presence/presence.gateway.ts:14",{"_index":1244,"title":{},"body":{"classes/PresenceGateway.html":{}}}],["src/presence/presence.gateway.ts:18",{"_index":1245,"title":{},"body":{"classes/PresenceGateway.html":{}}}],["src/presence/presence.gateway.ts:20",{"_index":1250,"title":{},"body":{"classes/PresenceGateway.html":{}}}],["src/presence/presence.gateway.ts:28",{"_index":1249,"title":{},"body":{"classes/PresenceGateway.html":{}}}],["src/presence/presence.module.ts",{"_index":1258,"title":{},"body":{"modules/PresenceModule.html":{}}}],["src/presence/presence.service.ts",{"_index":1260,"title":{},"body":{"injectables/PresenceService.html":{},"coverage.html":{}}}],["src/presence/presence.service.ts:6",{"_index":1261,"title":{},"body":{"injectables/PresenceService.html":{}}}],["src/profile/dto/create",{"_index":642,"title":{},"body":{"classes/CreateProfileDto.html":{},"coverage.html":{}}}],["src/profile/dto/update",{"_index":1634,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts",{"_index":1266,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:14",{"_index":1268,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:19",{"_index":1271,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":1281,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":1283,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:11",{"_index":1285,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:17",{"_index":1287,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:42",{"_index":1288,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/routes/dto/create",{"_index":645,"title":{},"body":{"classes/CreateRouteDto.html":{},"coverage.html":{}}}],["src/routes/dto/update",{"_index":1636,"title":{},"body":{"classes/UpdateRouteDto.html":{},"coverage.html":{}}}],["src/routes/routes.controller.ts",{"_index":1322,"title":{},"body":{"controllers/RoutesController.html":{},"coverage.html":{}}}],["src/routes/routes.controller.ts:25",{"_index":1325,"title":{},"body":{"controllers/RoutesController.html":{}}}],["src/routes/routes.controller.ts:33",{"_index":1326,"title":{},"body":{"controllers/RoutesController.html":{}}}],["src/routes/routes.controller.ts:38",{"_index":1328,"title":{},"body":{"controllers/RoutesController.html":{}}}],["src/routes/routes.controller.ts:43",{"_index":1332,"title":{},"body":{"controllers/RoutesController.html":{}}}],["src/routes/routes.controller.ts:52",{"_index":1330,"title":{},"body":{"controllers/RoutesController.html":{}}}],["src/routes/routes.module.ts",{"_index":1344,"title":{},"body":{"modules/RoutesModule.html":{}}}],["src/routes/routes.service.ts",{"_index":1348,"title":{},"body":{"injectables/RoutesService.html":{},"coverage.html":{}}}],["src/routes/routes.service.ts:10",{"_index":1350,"title":{},"body":{"injectables/RoutesService.html":{}}}],["src/routes/routes.service.ts:105",{"_index":1356,"title":{},"body":{"injectables/RoutesService.html":{}}}],["src/routes/routes.service.ts:16",{"_index":1352,"title":{},"body":{"injectables/RoutesService.html":{}}}],["src/routes/routes.service.ts:46",{"_index":1353,"title":{},"body":{"injectables/RoutesService.html":{}}}],["src/routes/routes.service.ts:66",{"_index":1354,"title":{},"body":{"injectables/RoutesService.html":{}}}],["src/routes/routes.service.ts:70",{"_index":1357,"title":{},"body":{"injectables/RoutesService.html":{}}}],["src/routes/schema/route.schema.ts",{"_index":1309,"title":{},"body":{"classes/Route.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/routes/schema/route.schema.ts:12",{"_index":1311,"title":{},"body":{"classes/Route.html":{}}}],["src/routes/schema/route.schema.ts:15",{"_index":1312,"title":{},"body":{"classes/Route.html":{}}}],["src/routes/schema/route.schema.ts:18",{"_index":1313,"title":{},"body":{"classes/Route.html":{}}}],["src/routes/schema/route.schema.ts:21",{"_index":1316,"title":{},"body":{"classes/Route.html":{}}}],["src/routes/schema/route.schema.ts:24",{"_index":1310,"title":{},"body":{"classes/Route.html":{}}}],["src/routes/schema/route.schema.ts:27",{"_index":1317,"title":{},"body":{"classes/Route.html":{}}}],["src/routes/schema/route.schema.ts:9",{"_index":1314,"title":{},"body":{"classes/Route.html":{}}}],["src/saccos/dto/create",{"_index":656,"title":{},"body":{"classes/CreateSaccoDto.html":{},"coverage.html":{}}}],["src/saccos/dto/update",{"_index":1638,"title":{},"body":{"classes/UpdateSaccoDto.html":{},"coverage.html":{}}}],["src/saccos/saccos.controller.ts",{"_index":1389,"title":{},"body":{"controllers/SaccosController.html":{},"coverage.html":{}}}],["src/saccos/saccos.controller.ts:24",{"_index":1392,"title":{},"body":{"controllers/SaccosController.html":{}}}],["src/saccos/saccos.controller.ts:32",{"_index":1393,"title":{},"body":{"controllers/SaccosController.html":{}}}],["src/saccos/saccos.controller.ts:37",{"_index":1394,"title":{},"body":{"controllers/SaccosController.html":{}}}],["src/saccos/saccos.controller.ts:42",{"_index":1398,"title":{},"body":{"controllers/SaccosController.html":{}}}],["src/saccos/saccos.controller.ts:51",{"_index":1396,"title":{},"body":{"controllers/SaccosController.html":{}}}],["src/saccos/saccos.module.ts",{"_index":1410,"title":{},"body":{"modules/SaccosModule.html":{}}}],["src/saccos/saccos.service.ts",{"_index":1414,"title":{},"body":{"injectables/SaccosService.html":{},"coverage.html":{}}}],["src/saccos/saccos.service.ts:10",{"_index":1417,"title":{},"body":{"injectables/SaccosService.html":{}}}],["src/saccos/saccos.service.ts:15",{"_index":1419,"title":{},"body":{"injectables/SaccosService.html":{}}}],["src/saccos/saccos.service.ts:39",{"_index":1420,"title":{},"body":{"injectables/SaccosService.html":{}}}],["src/saccos/saccos.service.ts:49",{"_index":1421,"title":{},"body":{"injectables/SaccosService.html":{}}}],["src/saccos/saccos.service.ts:59",{"_index":1424,"title":{},"body":{"injectables/SaccosService.html":{}}}],["src/saccos/saccos.service.ts:73",{"_index":1422,"title":{},"body":{"injectables/SaccosService.html":{}}}],["src/saccos/schema/sacco.schema",{"_index":1741,"title":{},"body":{"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{}}}],["src/saccos/schema/sacco.schema.ts",{"_index":1369,"title":{},"body":{"classes/Sacco.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/saccos/schema/sacco.schema.ts:10",{"_index":1378,"title":{},"body":{"classes/Sacco.html":{}}}],["src/saccos/schema/sacco.schema.ts:14",{"_index":1376,"title":{},"body":{"classes/Sacco.html":{}}}],["src/saccos/schema/sacco.schema.ts:17",{"_index":1379,"title":{},"body":{"classes/Sacco.html":{}}}],["src/saccos/schema/sacco.schema.ts:20",{"_index":1374,"title":{},"body":{"classes/Sacco.html":{}}}],["src/saccos/schema/sacco.schema.ts:23",{"_index":1377,"title":{},"body":{"classes/Sacco.html":{}}}],["src/saccos/schema/sacco.schema.ts:26",{"_index":1380,"title":{},"body":{"classes/Sacco.html":{}}}],["src/saccos/schema/sacco.schema.ts:29",{"_index":1381,"title":{},"body":{"classes/Sacco.html":{}}}],["src/saccos/schema/sacco.schema.ts:32",{"_index":1382,"title":{},"body":{"classes/Sacco.html":{}}}],["src/saccos/schema/sacco.schema.ts:39",{"_index":1373,"title":{},"body":{"classes/Sacco.html":{}}}],["src/saccos/schema/sacco.schema.ts:46",{"_index":1372,"title":{},"body":{"classes/Sacco.html":{}}}],["src/saccos/schema/sacco.schema.ts:49",{"_index":1383,"title":{},"body":{"classes/Sacco.html":{}}}],["src/saccos/schema/sacco.schema.ts:55",{"_index":1384,"title":{},"body":{"classes/Sacco.html":{}}}],["src/schemas/availability",{"_index":1176,"title":{},"body":{"modules/PercelModule.html":{},"injectables/PercelService.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{}}}],["src/schemas/availability.ts",{"_index":412,"title":{},"body":{"classes/Availability.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/schemas/availability.ts:10",{"_index":431,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:13",{"_index":435,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:16",{"_index":433,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:19",{"_index":434,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:22",{"_index":432,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:25",{"_index":428,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:28",{"_index":440,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:31",{"_index":430,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:34",{"_index":436,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:37",{"_index":437,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:40",{"_index":427,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:43",{"_index":425,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:46",{"_index":438,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/availability.ts:49",{"_index":439,"title":{},"body":{"classes/Availability.html":{}}}],["src/schemas/customer.ts",{"_index":762,"title":{},"body":{"classes/Customer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/schemas/customer.ts:12",{"_index":772,"title":{},"body":{"classes/Customer.html":{}}}],["src/schemas/customer.ts:15",{"_index":767,"title":{},"body":{"classes/Customer.html":{}}}],["src/schemas/customer.ts:18",{"_index":769,"title":{},"body":{"classes/Customer.html":{}}}],["src/schemas/customer.ts:21",{"_index":771,"title":{},"body":{"classes/Customer.html":{}}}],["src/schemas/customer.ts:24",{"_index":766,"title":{},"body":{"classes/Customer.html":{}}}],["src/schemas/customer.ts:27",{"_index":773,"title":{},"body":{"classes/Customer.html":{}}}],["src/schemas/customer.ts:9",{"_index":770,"title":{},"body":{"classes/Customer.html":{}}}],["src/schemas/parcel.ts",{"_index":1078,"title":{},"body":{"classes/Parcel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/schemas/parcel.ts:10",{"_index":1081,"title":{},"body":{"classes/Parcel.html":{}}}],["src/schemas/parcel.ts:13",{"_index":1083,"title":{},"body":{"classes/Parcel.html":{}}}],["src/schemas/parcel.ts:16",{"_index":1079,"title":{},"body":{"classes/Parcel.html":{}}}],["src/schemas/parcel.ts:19",{"_index":1080,"title":{},"body":{"classes/Parcel.html":{}}}],["src/schemas/parcel.ts:22",{"_index":1082,"title":{},"body":{"classes/Parcel.html":{}}}],["src/schemas/parcel.ts:26",{"_index":1085,"title":{},"body":{"classes/Parcel.html":{}}}],["src/schemas/triphistory.ts",{"_index":2012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stations/dto/create",{"_index":666,"title":{},"body":{"classes/CreateStationDto.html":{},"coverage.html":{}}}],["src/stations/dto/update",{"_index":1640,"title":{},"body":{"classes/UpdateStationDto.html":{},"coverage.html":{}}}],["src/stations/schema/station.schema",{"_index":345,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"modules/PercelModule.html":{},"modules/VehiclesModule.html":{}}}],["src/stations/schema/station.schema.ts",{"_index":1442,"title":{},"body":{"classes/Station.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/stations/schema/station.schema.ts:10",{"_index":1448,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:13",{"_index":1453,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:16",{"_index":1447,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:19",{"_index":1449,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:23",{"_index":1446,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:26",{"_index":1450,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:29",{"_index":1445,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:35",{"_index":1451,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:38",{"_index":1452,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:45",{"_index":1444,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:52",{"_index":1443,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:55",{"_index":1454,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/schema/station.schema.ts:61",{"_index":1455,"title":{},"body":{"classes/Station.html":{}}}],["src/stations/stations.controller.ts",{"_index":1458,"title":{},"body":{"controllers/StationsController.html":{},"coverage.html":{}}}],["src/stations/stations.controller.ts:24",{"_index":1463,"title":{},"body":{"controllers/StationsController.html":{}}}],["src/stations/stations.controller.ts:32",{"_index":1465,"title":{},"body":{"controllers/StationsController.html":{}}}],["src/stations/stations.controller.ts:37",{"_index":1470,"title":{},"body":{"controllers/StationsController.html":{}}}],["src/stations/stations.controller.ts:42",{"_index":1467,"title":{},"body":{"controllers/StationsController.html":{}}}],["src/stations/stations.controller.ts:50",{"_index":1474,"title":{},"body":{"controllers/StationsController.html":{}}}],["src/stations/stations.controller.ts:63",{"_index":1472,"title":{},"body":{"controllers/StationsController.html":{}}}],["src/stations/stations.module.ts",{"_index":1488,"title":{},"body":{"modules/StationsModule.html":{}}}],["src/stations/stations.service.ts",{"_index":1491,"title":{},"body":{"injectables/StationsService.html":{},"coverage.html":{}}}],["src/stations/stations.service.ts:10",{"_index":1495,"title":{},"body":{"injectables/StationsService.html":{}}}],["src/stations/stations.service.ts:105",{"_index":1503,"title":{},"body":{"injectables/StationsService.html":{}}}],["src/stations/stations.service.ts:126",{"_index":1509,"title":{},"body":{"injectables/StationsService.html":{}}}],["src/stations/stations.service.ts:155",{"_index":1507,"title":{},"body":{"injectables/StationsService.html":{}}}],["src/stations/stations.service.ts:16",{"_index":1501,"title":{},"body":{"injectables/StationsService.html":{}}}],["src/stations/stations.service.ts:41",{"_index":1497,"title":{},"body":{"injectables/StationsService.html":{}}}],["src/stations/stations.service.ts:70",{"_index":1498,"title":{},"body":{"injectables/StationsService.html":{}}}],["src/tickets/dto/create",{"_index":676,"title":{},"body":{"classes/CreateTicketDto.html":{},"coverage.html":{}}}],["src/tickets/dto/update",{"_index":1642,"title":{},"body":{"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["src/tickets/schema/tickets.schema.ts",{"_index":1533,"title":{},"body":{"classes/Ticket.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/tickets/schema/tickets.schema.ts:12",{"_index":1552,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:15",{"_index":1547,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:18",{"_index":1556,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:21",{"_index":1554,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:24",{"_index":1553,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:27",{"_index":1545,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:30",{"_index":1543,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:33",{"_index":1546,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:36",{"_index":1544,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:39",{"_index":1542,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:42",{"_index":1548,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:45",{"_index":1550,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:52",{"_index":1540,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:55",{"_index":1551,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:58",{"_index":1555,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:61",{"_index":1539,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:64",{"_index":1557,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/schema/tickets.schema.ts:9",{"_index":1541,"title":{},"body":{"classes/Ticket.html":{}}}],["src/tickets/tickets.controller.ts",{"_index":1562,"title":{},"body":{"controllers/TicketController.html":{},"coverage.html":{}}}],["src/tickets/tickets.controller.ts:24",{"_index":1566,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/tickets/tickets.controller.ts:32",{"_index":1567,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/tickets/tickets.controller.ts:37",{"_index":1568,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/tickets/tickets.controller.ts:42",{"_index":1572,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/tickets/tickets.controller.ts:51",{"_index":1570,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/tickets/tickets.module.ts",{"_index":1584,"title":{},"body":{"modules/TicketModule.html":{}}}],["src/tickets/tickets.service.ts",{"_index":1588,"title":{},"body":{"injectables/TicketService.html":{},"coverage.html":{}}}],["src/tickets/tickets.service.ts:13",{"_index":1591,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/tickets/tickets.service.ts:21",{"_index":1594,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/tickets/tickets.service.ts:55",{"_index":1595,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/tickets/tickets.service.ts:67",{"_index":1596,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/tickets/tickets.service.ts:78",{"_index":1598,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/tickets/tickets.service.ts:82",{"_index":1597,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/types/jwt",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"classes/JwtPayload.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"coverage.html":{}}}],["src/types/permission",{"_index":1690,"title":{},"body":{"classes/User.html":{}}}],["src/types/permission.ts",{"_index":1205,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{}}}],["src/types/permission.ts:10",{"_index":1229,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:11",{"_index":1225,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:12",{"_index":1226,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:13",{"_index":1222,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:14",{"_index":1224,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:15",{"_index":1227,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:16",{"_index":1230,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:2",{"_index":1231,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:3",{"_index":1223,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:4",{"_index":1235,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:5",{"_index":1233,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:6",{"_index":1234,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:7",{"_index":1236,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:8",{"_index":1232,"title":{},"body":{"classes/Permission.html":{}}}],["src/types/permission.ts:9",{"_index":1228,"title":{},"body":{"classes/Permission.html":{}}}],["src/users/dto/create",{"_index":703,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/find",{"_index":777,"title":{},"body":{"classes/FindStationAgentsDto.html":{},"coverage.html":{},"classes/findUserByIdNoDTO.html":{}}}],["src/users/dto/update",{"_index":1645,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schema/user.schema",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{}}}],["src/users/schema/user.schema.ts",{"_index":1664,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schema/user.schema.ts:10",{"_index":1686,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:101",{"_index":1670,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:104",{"_index":1680,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:13",{"_index":1672,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:16",{"_index":1683,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:19",{"_index":1673,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:22",{"_index":1676,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:25",{"_index":1678,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:28",{"_index":1675,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:31",{"_index":1671,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:34",{"_index":1679,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:41",{"_index":1689,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:48",{"_index":1682,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:55",{"_index":1684,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:58",{"_index":1681,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:68",{"_index":1677,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:71",{"_index":1685,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:74",{"_index":1674,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:77",{"_index":1669,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:80",{"_index":1687,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:87",{"_index":1668,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:94",{"_index":1688,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1693,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:26",{"_index":1705,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:34",{"_index":1712,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:42",{"_index":1717,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:50",{"_index":1715,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:58",{"_index":1721,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:71",{"_index":1708,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:79",{"_index":1711,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:90",{"_index":1719,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:98",{"_index":1702,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1738,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1742,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:140",{"_index":1758,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":1748,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:189",{"_index":1762,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":1751,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:234",{"_index":1764,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:285",{"_index":1765,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:340",{"_index":1754,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:395",{"_index":1756,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:434",{"_index":1760,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:71",{"_index":1753,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:88",{"_index":1750,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/vehicle",{"_index":751,"title":{},"body":{"classes/CreateVehicleOwnerDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"modules/VehiclesModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/vehicles/dto/create",{"_index":718,"title":{},"body":{"classes/CreateVehicleDto.html":{},"coverage.html":{}}}],["src/vehicles/dto/update",{"_index":1620,"title":{},"body":{"classes/UpdateDriverDto.html":{},"classes/UpdateVehicleDto.html":{},"coverage.html":{}}}],["src/vehicles/schema/vehicle.schema",{"_index":347,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{}}}],["src/vehicles/schema/vehicle.schema.ts",{"_index":1799,"title":{},"body":{"classes/Vehicle.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:12",{"_index":1809,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:15",{"_index":1810,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:18",{"_index":1819,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:21",{"_index":1804,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:24",{"_index":1817,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:27",{"_index":1807,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:30",{"_index":1806,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:33",{"_index":1813,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:36",{"_index":1815,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:39",{"_index":1802,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:42",{"_index":1803,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:45",{"_index":1818,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:48",{"_index":1816,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:51",{"_index":1808,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:54",{"_index":1805,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:57",{"_index":1811,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/schema/vehicle.schema.ts:9",{"_index":1814,"title":{},"body":{"classes/Vehicle.html":{}}}],["src/vehicles/vehicles.controller.ts",{"_index":1888,"title":{},"body":{"controllers/VehiclesController.html":{},"coverage.html":{}}}],["src/vehicles/vehicles.controller.ts:26",{"_index":1899,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["src/vehicles/vehicles.controller.ts:39",{"_index":1914,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["src/vehicles/vehicles.controller.ts:47",{"_index":1910,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["src/vehicles/vehicles.controller.ts:55",{"_index":1901,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["src/vehicles/vehicles.controller.ts:63",{"_index":1905,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["src/vehicles/vehicles.controller.ts:68",{"_index":1897,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["src/vehicles/vehicles.controller.ts:76",{"_index":1907,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["src/vehicles/vehicles.controller.ts:81",{"_index":1916,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["src/vehicles/vehicles.controller.ts:94",{"_index":1904,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["src/vehicles/vehicles.module.ts",{"_index":1934,"title":{},"body":{"modules/VehiclesModule.html":{}}}],["src/vehicles/vehicles.service.ts",{"_index":1937,"title":{},"body":{"injectables/VehiclesService.html":{},"coverage.html":{}}}],["src/vehicles/vehicles.service.ts:108",{"_index":1955,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:12",{"_index":1942,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:134",{"_index":1951,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:158",{"_index":1943,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:19",{"_index":1947,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:211",{"_index":1957,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:226",{"_index":1945,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:27",{"_index":1944,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:270",{"_index":1953,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:294",{"_index":1958,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:302",{"_index":1949,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:75",{"_index":1950,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["start",{"_index":2094,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2097,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2099,"title":{},"body":{"index.html":{}}}],["started",{"_index":2075,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2086,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["station",{"_index":249,"title":{"classes/Station.html":{}},"body":{"injectables/AuthService.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/FindStationAgentsDto.html":{},"classes/JwtPayload.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"modules/PercelModule.html":{},"injectables/PercelService.html":{},"classes/Route.html":{},"injectables/RoutesService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["station.dto",{"_index":1477,"title":{},"body":{"controllers/StationsController.html":{},"injectables/StationsService.html":{},"classes/UpdateStationDto.html":{}}}],["station.dto.ts",{"_index":667,"title":{},"body":{"classes/CreateStationDto.html":{},"classes/UpdateStationDto.html":{},"coverage.html":{}}}],["station.dto.ts:10",{"_index":672,"title":{},"body":{"classes/CreateStationDto.html":{}}}],["station.dto.ts:14",{"_index":674,"title":{},"body":{"classes/CreateStationDto.html":{}}}],["station.dto.ts:18",{"_index":671,"title":{},"body":{"classes/CreateStationDto.html":{}}}],["station.dto.ts:22",{"_index":673,"title":{},"body":{"classes/CreateStationDto.html":{}}}],["station.dto.ts:25",{"_index":670,"title":{},"body":{"classes/CreateStationDto.html":{}}}],["station.name",{"_index":372,"title":{},"body":{"modules/AvailabilitiesModule.html":{},"modules/PercelModule.html":{},"modules/StationsModule.html":{},"modules/VehiclesModule.html":{}}}],["station.station",{"_index":1797,"title":{},"body":{"injectables/UsersService.html":{}}}],["station/:id",{"_index":1471,"title":{},"body":{"controllers/StationsController.html":{}}}],["stationdocument",{"_index":344,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/Station.html":{},"injectables/StationsService.html":{},"miscellaneous/typealiases.html":{}}}],["stationid",{"_index":337,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{}}}],["stationmodel",{"_index":329,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"injectables/StationsService.html":{}}}],["stations",{"_index":1459,"title":{},"body":{"controllers/StationsController.html":{},"injectables/StationsService.html":{}}}],["stations.controller",{"_index":1489,"title":{},"body":{"modules/StationsModule.html":{}}}],["stations.service",{"_index":1476,"title":{},"body":{"controllers/StationsController.html":{},"modules/StationsModule.html":{}}}],["stations/stations.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["stationschema",{"_index":368,"title":{},"body":{"modules/AvailabilitiesModule.html":{},"modules/PercelModule.html":{},"classes/Station.html":{},"modules/StationsModule.html":{},"modules/VehiclesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stationscontroller",{"_index":1457,"title":{"controllers/StationsController.html":{}},"body":{"controllers/StationsController.html":{},"modules/StationsModule.html":{},"coverage.html":{}}}],["stationsmodule",{"_index":59,"title":{"modules/StationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StationsModule.html":{},"modules.html":{},"overview.html":{}}}],["stationsservice",{"_index":1475,"title":{"injectables/StationsService.html":{}},"body":{"controllers/StationsController.html":{},"modules/StationsModule.html":{},"injectables/StationsService.html":{},"coverage.html":{},"overview.html":{}}}],["stationsserviced",{"_index":447,"title":{},"body":{"classes/Availability-1.html":{},"classes/CreateAvailabilityDto.html":{}}}],["status",{"_index":420,"title":{},"body":{"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/CreateTicketDto.html":{},"classes/CreateVehicleDto.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"injectables/PercelService.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["stay",{"_index":2120,"title":{},"body":{"index.html":{}}}],["stk",{"_index":853,"title":{},"body":{"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{}}}],["stkendpoint",{"_index":910,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["stkinitresponce",{"_index":942,"title":{"classes/StkInitResponce.html":{}},"body":{"injectables/LipaNaMpesaService.html":{},"classes/StkInitResponce.html":{},"coverage.html":{}}}],["strategy",{"_index":809,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{}}}],["strategy/jwt.strategy",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/refresh.strategy",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["street",{"_index":669,"title":{},"body":{"classes/CreateStationDto.html":{},"classes/Station.html":{},"injectables/StationsService.html":{}}}],["string",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateChatDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"classes/JwtPayload.html":{},"classes/LipaDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"classes/findUserByIdNoDTO.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtPayload.html":{}}}],["subscribemessage",{"_index":341,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/BookingGateway.html":{},"classes/ChatGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/NotificationsGateway.html":{},"classes/PresenceGateway.html":{}}}],["subscribemessage('createbooking",{"_index":480,"title":{},"body":{"classes/BookingGateway.html":{}}}],["subscribemessage('createchat",{"_index":549,"title":{},"body":{"classes/ChatGateway.html":{}}}],["subscribemessage('createnotification",{"_index":1047,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["subscribemessage('findallbooking",{"_index":482,"title":{},"body":{"classes/BookingGateway.html":{}}}],["subscribemessage('findallnotifications",{"_index":1049,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["subscribemessage('findonebooking",{"_index":485,"title":{},"body":{"classes/BookingGateway.html":{}}}],["subscribemessage('findonenotification",{"_index":1051,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["subscribemessage('lipanampesa",{"_index":880,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["subscribemessage('onlinestatus",{"_index":1248,"title":{},"body":{"classes/PresenceGateway.html":{}}}],["subscribemessage('removebooking",{"_index":487,"title":{},"body":{"classes/BookingGateway.html":{}}}],["subscribemessage('removenotification",{"_index":1053,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["subscribemessage('stationavailabilities",{"_index":335,"title":{},"body":{"classes/AvailabilitiesGateway.html":{}}}],["subscribemessage('updatebooking",{"_index":491,"title":{},"body":{"classes/BookingGateway.html":{}}}],["subscribemessage('updatenotification",{"_index":1057,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["success",{"_index":1795,"title":{},"body":{"injectables/UsersService.html":{}}}],["successfully",{"_index":410,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["super",{"_index":395,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/PercelService.html":{},"injectables/RefreshStrategy.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["support",{"_index":2113,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":2131,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1510,"title":{},"body":{"injectables/StationsService.html":{},"injectables/UsersService.html":{}}}],["table",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["taxi",{"_index":743,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["temporary",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["test",{"_index":2102,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":2105,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2104,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2101,"title":{},"body":{"index.html":{}}}],["th",{"_index":929,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["thanks",{"_index":2111,"title":{},"body":{"index.html":{}}}],["then(async",{"_index":978,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["this.appservice.gethello",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(createauthdto",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signout(userid",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.availabilitiesservice.create",{"_index":312,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["this.availabilitiesservice.deleteavalablity(id",{"_index":320,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["this.availabilitiesservice.findall(user",{"_index":314,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["this.availabilitiesservice.findone(id",{"_index":316,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["this.availabilitiesservice.update",{"_index":318,"title":{},"body":{"controllers/AvailabilitiesController.html":{}}}],["this.availabilitymodel",{"_index":396,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["this.availabilitymodel.create",{"_index":387,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["this.availabilitymodel.deleteone",{"_index":408,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["this.availabilitymodel.findbyid(id",{"_index":401,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["this.availabilitymodel.findbyidanddelete(id",{"_index":406,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["this.availabilitymodel.findbyidandupdate",{"_index":403,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"injectables/TicketService.html":{}}}],["this.bookingservice.create(createbookingdto",{"_index":496,"title":{},"body":{"classes/BookingGateway.html":{}}}],["this.bookingservice.findall",{"_index":497,"title":{},"body":{"classes/BookingGateway.html":{}}}],["this.bookingservice.findone(id",{"_index":499,"title":{},"body":{"classes/BookingGateway.html":{}}}],["this.bookingservice.remove(id",{"_index":503,"title":{},"body":{"classes/BookingGateway.html":{}}}],["this.bookingservice.update(updatebookingdto.id",{"_index":501,"title":{},"body":{"classes/BookingGateway.html":{}}}],["this.callback_url",{"_index":974,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["this.chatmodel",{"_index":575,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.chatservice.create(createchatdto",{"_index":554,"title":{},"body":{"classes/ChatGateway.html":{}}}],["this.chatservice.sendmessage(chat",{"_index":542,"title":{},"body":{"controllers/ChatController.html":{}}}],["this.checkifuserexists(createuserdto.idno",{"_index":1774,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.checkvehicleregno(createvehicledto.plateno",{"_index":1960,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["this.configservice.get('access_token_secret",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_expiration_time",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('refresh_token_expiration_time",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('refresh_token_secret",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.eventemitter.emit('mpesapayment.created",{"_index":981,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["this.hasdriver(user",{"_index":1976,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lipanampesaservice.findall",{"_index":867,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["this.lipanampesaservice.findone(+id",{"_index":869,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["this.lipanampesaservice.mpesacallback(createlipanampesadto",{"_index":866,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["this.lipanampesaservice.remove(+id",{"_index":871,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["this.lipanampesaservice.sendstk(createlipanampesadto",{"_index":864,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["this.lipanampesaservice.update(+id",{"_index":870,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["this.lipanampesatransaction.create",{"_index":983,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["this.lipanampesatransaction.findoneandupdate",{"_index":987,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["this.notificationsservice.create(createnotificationdto",{"_index":1061,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["this.notificationsservice.findall",{"_index":1062,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["this.notificationsservice.findone(id",{"_index":1063,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["this.notificationsservice.remove(id",{"_index":1065,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["this.notificationsservice.update(updatenotificationdto.id",{"_index":1064,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["this.percelmodel",{"_index":1198,"title":{},"body":{"injectables/PercelService.html":{}}}],["this.percelmodel.create",{"_index":1189,"title":{},"body":{"injectables/PercelService.html":{}}}],["this.percelmodel.find",{"_index":1197,"title":{},"body":{"injectables/PercelService.html":{}}}],["this.percelmodel.findbyidandupdate",{"_index":1203,"title":{},"body":{"injectables/PercelService.html":{}}}],["this.percelservice.findall(user",{"_index":1167,"title":{},"body":{"controllers/PercelController.html":{}}}],["this.percelservice.sendpercel(createperceldto",{"_index":1165,"title":{},"body":{"controllers/PercelController.html":{}}}],["this.percelservice.update(user",{"_index":1170,"title":{},"body":{"controllers/PercelController.html":{}}}],["this.presenceservice.joinroom(user",{"_index":1255,"title":{},"body":{"classes/PresenceGateway.html":{}}}],["this.profileservice.myprofile(id",{"_index":1277,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.update(updateprofiledto",{"_index":1278,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.routemodel.create",{"_index":1359,"title":{},"body":{"injectables/RoutesService.html":{}}}],["this.routemodel.deleteone",{"_index":1368,"title":{},"body":{"injectables/RoutesService.html":{}}}],["this.routemodel.find",{"_index":1366,"title":{},"body":{"injectables/RoutesService.html":{}}}],["this.routemodel.updateone",{"_index":1367,"title":{},"body":{"injectables/RoutesService.html":{}}}],["this.routesservice.create(createroutedto",{"_index":1337,"title":{},"body":{"controllers/RoutesController.html":{}}}],["this.routesservice.findall(query",{"_index":1338,"title":{},"body":{"controllers/RoutesController.html":{}}}],["this.routesservice.findone(+id",{"_index":1339,"title":{},"body":{"controllers/RoutesController.html":{}}}],["this.routesservice.remove(id",{"_index":1341,"title":{},"body":{"controllers/RoutesController.html":{}}}],["this.routesservice.update(id",{"_index":1340,"title":{},"body":{"controllers/RoutesController.html":{}}}],["this.saccomodel.create",{"_index":1431,"title":{},"body":{"injectables/SaccosService.html":{}}}],["this.saccomodel.exists",{"_index":1427,"title":{},"body":{"injectables/SaccosService.html":{}}}],["this.saccomodel.find().select",{"_index":1436,"title":{},"body":{"injectables/SaccosService.html":{}}}],["this.saccomodel.findbyid(id).select",{"_index":1437,"title":{},"body":{"injectables/SaccosService.html":{}}}],["this.saccomodel.findbyidandupdate(id",{"_index":1441,"title":{},"body":{"injectables/SaccosService.html":{}}}],["this.saccosservice.create(createsaccodto",{"_index":1403,"title":{},"body":{"controllers/SaccosController.html":{}}}],["this.saccosservice.findall(user",{"_index":1404,"title":{},"body":{"controllers/SaccosController.html":{}}}],["this.saccosservice.findone(id",{"_index":1405,"title":{},"body":{"controllers/SaccosController.html":{}}}],["this.saccosservice.remove(id",{"_index":1407,"title":{},"body":{"controllers/SaccosController.html":{}}}],["this.saccosservice.updatesacco(id",{"_index":1406,"title":{},"body":{"controllers/SaccosController.html":{}}}],["this.server",{"_index":894,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["this.server.on('connection",{"_index":355,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/ChatGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/PresenceGateway.html":{}}}],["this.server.to(createchatdto.to).emit('createchat",{"_index":553,"title":{},"body":{"classes/ChatGateway.html":{}}}],["this.server.to(stationid).emit('onstationavailabilities",{"_index":362,"title":{},"body":{"classes/AvailabilitiesGateway.html":{}}}],["this.signtoken(user",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.stationmodel",{"_index":1515,"title":{},"body":{"injectables/StationsService.html":{}}}],["this.stationmodel.create",{"_index":1514,"title":{},"body":{"injectables/StationsService.html":{}}}],["this.stationmodel.find",{"_index":1517,"title":{},"body":{"injectables/StationsService.html":{}}}],["this.stationmodel.findbyid(id",{"_index":1512,"title":{},"body":{"injectables/StationsService.html":{}}}],["this.stationmodel.findbyid(userstationid",{"_index":1518,"title":{},"body":{"injectables/StationsService.html":{}}}],["this.stationmodel.findbyidanddelete(id",{"_index":1522,"title":{},"body":{"injectables/StationsService.html":{}}}],["this.stationmodel.findbyidandupdate(stationid",{"_index":1521,"title":{},"body":{"injectables/StationsService.html":{}}}],["this.stationmodel.findone",{"_index":1513,"title":{},"body":{"injectables/StationsService.html":{}}}],["this.stationmodel.findoneanddelete",{"_index":1523,"title":{},"body":{"injectables/StationsService.html":{}}}],["this.stationsservice.createsacco(createstationdto",{"_index":1479,"title":{},"body":{"controllers/StationsController.html":{}}}],["this.stationsservice.findall(currentuser",{"_index":1480,"title":{},"body":{"controllers/StationsController.html":{}}}],["this.stationsservice.findonestation(currentuser",{"_index":1483,"title":{},"body":{"controllers/StationsController.html":{}}}],["this.stationsservice.mystation(stationid",{"_index":1482,"title":{},"body":{"controllers/StationsController.html":{}}}],["this.stationsservice.remove(id",{"_index":1485,"title":{},"body":{"controllers/StationsController.html":{}}}],["this.stationsservice.updatestation",{"_index":1484,"title":{},"body":{"controllers/StationsController.html":{}}}],["this.stkendpoint",{"_index":960,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["this.ticketmodel",{"_index":1607,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketmodel.create",{"_index":1600,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketservice.book(createticketdto",{"_index":1577,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.findall(user",{"_index":1578,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.findone(id",{"_index":1579,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.remove(id",{"_index":1581,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.update(id",{"_index":1580,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.usermodel",{"_index":1289,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["this.usermodel.create",{"_index":1775,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.exists",{"_index":1773,"title":{},"body":{"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1783,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(querydata.userid",{"_index":1766,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidanddelete(id",{"_index":1790,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate(id",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findbyidandupdate(querydata.userid",{"_index":1770,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate(user._id",{"_index":1296,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.usermodel.findone",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findoneandupdate",{"_index":1980,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["this.usersservice.adduser(createuserdto",{"_index":1727,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.assingmanager(querydata",{"_index":1735,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(id",{"_index":1732,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findagentsinstation",{"_index":1733,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findallusers(currentuser",{"_index":1728,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findstationmanager(currentuser",{"_index":1734,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduser(id",{"_index":1729,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyid(idno",{"_index":1730,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuser",{"_index":1731,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.vehiclemodel",{"_index":1968,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["this.vehiclemodel.create",{"_index":1964,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["this.vehiclemodel.exists",{"_index":1959,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["this.vehiclemodel.findbyid(id",{"_index":1970,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["this.vehiclemodel.findbyidanddelete(id",{"_index":1983,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["this.vehiclemodel.findone",{"_index":1971,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["this.vehiclemodel.findoneanddelete",{"_index":1984,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["this.vehiclemodel.findoneandupdate",{"_index":1974,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["this.vehicleownermodel",{"_index":1880,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["this.vehicleownermodel.create",{"_index":1879,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["this.vehicleownermodel.exists",{"_index":1883,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["this.vehicleownermodel.findbyidanddelete(id",{"_index":1886,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["this.vehicleownermodel.findone",{"_index":1881,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["this.vehicleownermodel.updateone",{"_index":1882,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["this.vehicleownersservice.addvehicleowner",{"_index":1856,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["this.vehicleownersservice.deletevehicleowner(id",{"_index":1861,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["this.vehicleownersservice.findall(user",{"_index":1857,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["this.vehicleownersservice.findone(id",{"_index":1858,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["this.vehicleownersservice.update(id",{"_index":1859,"title":{},"body":{"controllers/VehicleOwnersController.html":{}}}],["this.vehiclesservice.addtostation(user",{"_index":1928,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["this.vehiclesservice.addvehicle",{"_index":1922,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["this.vehiclesservice.assigndriver(user",{"_index":1926,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["this.vehiclesservice.deletevehicle(id",{"_index":1931,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["this.vehiclesservice.findall(user",{"_index":1927,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["this.vehiclesservice.findone(id",{"_index":1929,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["this.vehiclesservice.getdriver(user",{"_index":1925,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["this.vehiclesservice.getownervehicles(user",{"_index":1923,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["this.vehiclesservice.updatevehicle",{"_index":1930,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["throw",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["ticket",{"_index":977,"title":{"classes/Ticket.html":{}},"body":{"injectables/LipaNaMpesaService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"coverage.html":{}}}],["ticket.dto",{"_index":1575,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts",{"_index":677,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["ticket.dto.ts:10",{"_index":693,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:14",{"_index":688,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:18",{"_index":701,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:22",{"_index":691,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:26",{"_index":687,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:30",{"_index":694,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:34",{"_index":689,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:37",{"_index":686,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:41",{"_index":690,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:45",{"_index":683,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:49",{"_index":692,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:52",{"_index":700,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:6",{"_index":684,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.name",{"_index":1587,"title":{},"body":{"modules/TicketModule.html":{}}}],["ticket/:id",{"_index":1569,"title":{},"body":{"controllers/TicketController.html":{}}}],["ticketcontroller",{"_index":1561,"title":{"controllers/TicketController.html":{}},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{},"coverage.html":{}}}],["ticketdocument",{"_index":1558,"title":{},"body":{"classes/Ticket.html":{},"injectables/TicketService.html":{},"miscellaneous/typealiases.html":{}}}],["ticketmodel",{"_index":1592,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketmodule",{"_index":60,"title":{"modules/TicketModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TicketModule.html":{},"modules.html":{},"overview.html":{}}}],["tickets",{"_index":1563,"title":{},"body":{"controllers/TicketController.html":{}}}],["tickets.controller",{"_index":1585,"title":{},"body":{"modules/TicketModule.html":{}}}],["tickets.service",{"_index":1574,"title":{},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{}}}],["tickets/tickets.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["ticketschema",{"_index":1559,"title":{},"body":{"classes/Ticket.html":{},"modules/TicketModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ticketservice",{"_index":1573,"title":{"injectables/TicketService.html":{}},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"coverage.html":{},"overview.html":{}}}],["timestamp",{"_index":965,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["timestamps",{"_index":468,"title":{},"body":{"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{}}}],["to(mpesadata.checkoutrequestid",{"_index":895,"title":{},"body":{"classes/LipaNaMpesaGateway.html":{}}}],["todo",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PresenceService.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":2121,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":833,"title":{},"body":{"classes/LipaNaMpesaCallbackDto.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{}}}],["transactiondate",{"_index":1000,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{}}}],["transactiondesc",{"_index":976,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["transactiontype",{"_index":966,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["transformer",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["transit",{"_index":1192,"title":{},"body":{"injectables/PercelService.html":{}}}],["trim",{"_index":1308,"title":{},"body":{"injectables/RefreshStrategy.html":{}}}],["triphistory",{"_index":2013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["triphistorymodel",{"_index":2014,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["truck",{"_index":744,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["true",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/Customer.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"injectables/PercelService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["twitter",{"_index":2127,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateChatDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/Customer.html":{},"classes/FindStationAgentsDto.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LipaDto.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"controllers/LipaNaMpesaController.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/Permission.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"classes/StkInitResponce.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"classes/findUserByIdNoDTO.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2141,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":467,"title":{},"body":{"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/JwtPayload.html":{},"classes/LipaNaMpesaCallbackDto.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/LogoutDto.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateBookingDto.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdatePercelDto.html":{},"classes/UpdatePresenceDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRouteDto.html":{},"classes/UpdateSaccoDto.html":{},"classes/UpdateStationDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":448,"title":{},"body":{"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/CreateVehicleDto.html":{},"classes/JwtPayload.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/UpdateVehicleDto.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{}}}],["types/stk",{"_index":943,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["typescript",{"_index":2085,"title":{},"body":{"index.html":{}}}],["uid",{"_index":1667,"title":{},"body":{"classes/User.html":{}}}],["unassigned",{"_index":737,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["undefined",{"_index":449,"title":{},"body":{"classes/Availability-1.html":{},"classes/Chat.html":{},"classes/Customer.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Percel.html":{},"classes/Route.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/Ticket.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"miscellaneous/variables.html":{}}}],["undefined})@prop",{"_index":1084,"title":{},"body":{"classes/Parcel.html":{}}}],["unit",{"_index":2100,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"classes/LipaNaMpesaGateway.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/ProfileService.html":{},"injectables/RefreshStrategy.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["unlicensed",{"_index":2140,"title":{},"body":{"properties.html":{}}}],["unnamed",{"_index":1992,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["unread",{"_index":524,"title":{},"body":{"classes/Chat.html":{}}}],["upadatedat",{"_index":421,"title":{},"body":{"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Customer.html":{},"classes/Parcel.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"injectables/VehicleOwnersService.html":{}}}],["update",{"_index":280,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"controllers/StationsController.html":{},"injectables/StationsService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{}}}],["update(@messagebody",{"_index":500,"title":{},"body":{"classes/BookingGateway.html":{},"classes/NotificationsGateway.html":{}}}],["update(id",{"_index":295,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"injectables/BookingService.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/NotificationsService.html":{},"controllers/PercelController.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{}}}],["update(updatebookingdto",{"_index":489,"title":{},"body":{"classes/BookingGateway.html":{}}}],["update(updatenotificationdto",{"_index":1055,"title":{},"body":{"classes/NotificationsGateway.html":{}}}],["update(updateprofiledto",{"_index":1269,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["update(user",{"_index":1185,"title":{},"body":{"injectables/PercelService.html":{}}}],["updateavailabilitydto",{"_index":296,"title":{"classes/UpdateAvailabilityDto.html":{}},"body":{"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/UpdateAvailabilityDto.html":{},"coverage.html":{}}}],["updatebookingdto",{"_index":490,"title":{"classes/UpdateBookingDto.html":{}},"body":{"classes/BookingGateway.html":{},"injectables/BookingService.html":{},"classes/UpdateBookingDto.html":{},"coverage.html":{}}}],["updatechatdto",{"_index":552,"title":{"classes/UpdateChatDto.html":{}},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/UpdateChatDto.html":{},"coverage.html":{}}}],["updated",{"_index":1298,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/StationsService.html":{}}}],["updatedat",{"_index":1204,"title":{},"body":{"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/UsersService.html":{}}}],["updatedby",{"_index":404,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Percel.html":{},"injectables/PercelService.html":{},"classes/Route.html":{},"injectables/RoutesService.html":{},"classes/Sacco.html":{},"injectables/SaccosService.html":{},"classes/Station.html":{},"injectables/StationsService.html":{},"classes/Ticket.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/VehicleOwner.html":{},"injectables/VehicleOwnersService.html":{}}}],["updatedon",{"_index":405,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["updatedriverdto",{"_index":1619,"title":{"classes/UpdateDriverDto.html":{}},"body":{"classes/UpdateDriverDto.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"coverage.html":{}}}],["updatedriverdto.driverid",{"_index":1979,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["updatedriverdto.vehicleid",{"_index":1977,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["updatelipanampesadto",{"_index":855,"title":{},"body":{"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{}}}],["updatenotificationdto",{"_index":1056,"title":{"classes/UpdateNotificationDto.html":{}},"body":{"classes/NotificationsGateway.html":{},"injectables/NotificationsService.html":{},"classes/UpdateNotificationDto.html":{},"coverage.html":{}}}],["updateperceldto",{"_index":1157,"title":{"classes/UpdatePercelDto.html":{}},"body":{"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/UpdatePercelDto.html":{},"coverage.html":{}}}],["updatepresencedto",{"_index":1254,"title":{"classes/UpdatePresenceDto.html":{}},"body":{"classes/PresenceGateway.html":{},"classes/UpdatePresenceDto.html":{},"coverage.html":{}}}],["updateprofiledto",{"_index":1270,"title":{"classes/UpdateProfileDto.html":{}},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updateroutedto",{"_index":1331,"title":{"classes/UpdateRouteDto.html":{}},"body":{"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"classes/UpdateRouteDto.html":{},"coverage.html":{}}}],["updates",{"_index":516,"title":{},"body":{"injectables/BookingService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/NotificationsService.html":{},"injectables/TicketService.html":{},"injectables/VehiclesService.html":{}}}],["updatesacco",{"_index":1415,"title":{},"body":{"injectables/SaccosService.html":{}}}],["updatesacco(id",{"_index":1423,"title":{},"body":{"injectables/SaccosService.html":{}}}],["updatesaccodto",{"_index":1397,"title":{"classes/UpdateSaccoDto.html":{}},"body":{"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"classes/UpdateSaccoDto.html":{},"coverage.html":{}}}],["updatestation",{"_index":1493,"title":{},"body":{"injectables/StationsService.html":{}}}],["updatestation(user",{"_index":1508,"title":{},"body":{"injectables/StationsService.html":{}}}],["updatestationdto",{"_index":1473,"title":{"classes/UpdateStationDto.html":{}},"body":{"controllers/StationsController.html":{},"injectables/StationsService.html":{},"classes/UpdateStationDto.html":{},"coverage.html":{}}}],["updateticketdto",{"_index":1571,"title":{"classes/UpdateTicketDto.html":{}},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":1699,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":1720,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":1644,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updatevehicle",{"_index":1895,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["updatevehicle(id",{"_index":1915,"title":{},"body":{"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["updatevehicledto",{"_index":1648,"title":{"classes/UpdateVehicleDto.html":{}},"body":{"classes/UpdateVehicleDto.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{},"coverage.html":{}}}],["updatevehicleownerdto",{"_index":1660,"title":{"classes/UpdateVehicleOwnerDto.html":{}},"body":{"classes/UpdateVehicleOwnerDto.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"coverage.html":{}}}],["updatinguser",{"_index":1782,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatinguser.role",{"_index":1787,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatinguser.sacco",{"_index":1784,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatinguser.station",{"_index":1786,"title":{},"body":{"injectables/UsersService.html":{}}}],["url",{"_index":923,"title":{},"body":{"injectables/LipaNaMpesaService.html":{}}}],["useguards",{"_index":302,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"controllers/ChatController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["useguards(jwtguard",{"_index":310,"title":{},"body":{"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"controllers/ChatController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["useguards(jwtguard)@post('send",{"_index":852,"title":{},"body":{"controllers/LipaNaMpesaController.html":{}}}],["user",{"_index":156,"title":{"classes/User.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AvailabilitiesController.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"classes/CreateUserDto.html":{},"classes/JwtPayload.html":{},"controllers/LipaNaMpesaController.html":{},"injectables/LipaNaMpesaService.html":{},"classes/LipaNaMpesaTransaction.html":{},"classes/Parcel.html":{},"classes/Percel.html":{},"controllers/PercelController.html":{},"injectables/PercelService.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/Route.html":{},"controllers/RoutesController.html":{},"injectables/RoutesService.html":{},"controllers/SaccosController.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vehicle.html":{},"controllers/VehicleOwnersController.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"classes/findUserByIdNoDTO.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["user.decorator",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AvailabilitiesController.html":{},"classes/AvailabilitiesGateway.html":{},"controllers/ChatController.html":{},"controllers/LipaNaMpesaController.html":{},"controllers/PercelController.html":{},"controllers/ProfileController.html":{},"controllers/RoutesController.html":{},"controllers/SaccosController.html":{},"controllers/StationsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/VehicleOwnersController.html":{},"controllers/VehiclesController.html":{}}}],["user.decorator.ts",{"_index":2003,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":1646,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":704,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":714,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":707,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":709,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":710,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":713,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":705,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":706,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.firstname",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.firstname}@${user.idno",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.idno",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"modules/VehiclesModule.html":{}}}],["user.permission",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permission?.canaddavailabilities",{"_index":386,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["user.permission?.candeleteavailabilities",{"_index":407,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["user.permission?.canupdateavailabilities",{"_index":402,"title":{},"body":{"injectables/AvailabilitiesService.html":{}}}],["user.phone",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.photourl",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["user.sacco",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/ChatService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/RoutesService.html":{},"injectables/SaccosService.html":{},"injectables/StationsService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["user.secondname",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.station",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilitiesService.html":{},"injectables/LipaNaMpesaService.html":{},"injectables/PercelService.html":{},"injectables/ProfileService.html":{},"injectables/RoutesService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["user.updateone",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.vehicle",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["user/:id",{"_index":1707,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdocument",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usermessages",{"_index":564,"title":{},"body":{"injectables/ChatService.html":{}}}],["usermessages(user",{"_index":571,"title":{},"body":{"injectables/ChatService.html":{}}}],["usermodel",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{},"injectables/VehiclesService.html":{}}}],["users",{"_index":1505,"title":{},"body":{"injectables/StationsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":1739,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1723,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"modules/VehiclesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1692,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":61,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":1722,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userstationid",{"_index":1506,"title":{},"body":{"injectables/StationsService.html":{}}}],["validate",{"_index":802,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshStrategy.html":{}}}],["validate(payload",{"_index":805,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(req",{"_index":1301,"title":{},"body":{"injectables/RefreshStrategy.html":{}}}],["validator",{"_index":590,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateChatDto.html":{},"classes/CreatePercelDto.html":{},"classes/CreateRouteDto.html":{},"classes/CreateSaccoDto.html":{},"classes/CreateStationDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVehicleDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/FindStationAgentsDto.html":{},"classes/LipaDto.html":{},"classes/LogoutDto.html":{},"classes/Sacco.html":{},"classes/Station.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateVehicleDto.html":{},"classes/UpdateVehicleOwnerDto.html":{},"dependencies.html":{},"classes/findUserByIdNoDTO.html":{}}}],["value",{"_index":933,"title":{},"body":{"injectables/LipaNaMpesaService.html":{},"miscellaneous/variables.html":{}}}],["van",{"_index":745,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["variable",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2157,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vehicle",{"_index":78,"title":{"classes/Vehicle.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/AvailabilitiesGateway.html":{},"modules/AvailabilitiesModule.html":{},"injectables/AvailabilitiesService.html":{},"classes/Availability.html":{},"classes/Availability-1.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateVehicleOwnerDto.html":{},"classes/JwtPayload.html":{},"classes/Parcel.html":{},"classes/UpdateVehicleOwnerDto.html":{},"classes/User.html":{},"classes/Vehicle.html":{},"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vehicle.dto",{"_index":1658,"title":{},"body":{"classes/UpdateVehicleDto.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["vehicle.dto.ts",{"_index":719,"title":{},"body":{"classes/CreateVehicleDto.html":{},"classes/UpdateVehicleDto.html":{},"coverage.html":{}}}],["vehicle.dto.ts:10",{"_index":729,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["vehicle.dto.ts:11",{"_index":1655,"title":{},"body":{"classes/UpdateVehicleDto.html":{}}}],["vehicle.dto.ts:13",{"_index":731,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["vehicle.dto.ts:14",{"_index":1657,"title":{},"body":{"classes/UpdateVehicleDto.html":{}}}],["vehicle.dto.ts:17",{"_index":732,"title":{},"body":{"classes/CreateVehicleDto.html":{},"classes/UpdateVehicleDto.html":{}}}],["vehicle.dto.ts:18",{"_index":1654,"title":{},"body":{"classes/UpdateVehicleDto.html":{}}}],["vehicle.dto.ts:20",{"_index":748,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["vehicle.dto.ts:21",{"_index":1656,"title":{},"body":{"classes/UpdateVehicleDto.html":{}}}],["vehicle.dto.ts:23",{"_index":733,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["vehicle.dto.ts:27",{"_index":747,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["vehicle.dto.ts:31",{"_index":736,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["vehicle.dto.ts:35",{"_index":728,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["vehicle.dto.ts:39",{"_index":740,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["vehicle.dto.ts:48",{"_index":730,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["vehicle.dto.ts:7",{"_index":734,"title":{},"body":{"classes/CreateVehicleDto.html":{}}}],["vehicle.dto.ts:8",{"_index":1653,"title":{},"body":{"classes/UpdateVehicleDto.html":{}}}],["vehicle.name",{"_index":373,"title":{},"body":{"modules/AvailabilitiesModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{}}}],["vehicle/:id",{"_index":1903,"title":{},"body":{"controllers/VehiclesController.html":{}}}],["vehicledocument",{"_index":346,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"classes/Vehicle.html":{},"injectables/VehiclesService.html":{},"miscellaneous/typealiases.html":{}}}],["vehicleexists",{"_index":1962,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["vehicleid",{"_index":1623,"title":{},"body":{"classes/UpdateDriverDto.html":{},"injectables/VehiclesService.html":{}}}],["vehiclemodel",{"_index":330,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"injectables/AvailabilitiesService.html":{},"injectables/VehicleOwnersService.html":{},"injectables/VehiclesService.html":{}}}],["vehicleowner",{"_index":1812,"title":{"classes/VehicleOwner.html":{}},"body":{"classes/Vehicle.html":{},"classes/VehicleOwner.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"coverage.html":{}}}],["vehicleowner.name",{"_index":1868,"title":{},"body":{"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{}}}],["vehicleownerdocument",{"_index":1835,"title":{},"body":{"classes/VehicleOwner.html":{},"miscellaneous/typealiases.html":{}}}],["vehicleownerid",{"_index":1954,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["vehicleownermodel",{"_index":1872,"title":{},"body":{"injectables/VehicleOwnersService.html":{}}}],["vehicleownerschema",{"_index":1836,"title":{},"body":{"classes/VehicleOwner.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vehicleownerscontroller",{"_index":1838,"title":{"controllers/VehicleOwnersController.html":{}},"body":{"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"coverage.html":{}}}],["vehicleownersmodule",{"_index":62,"title":{"modules/VehicleOwnersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VehicleOwnersModule.html":{},"modules.html":{},"overview.html":{}}}],["vehicleownersservice",{"_index":1853,"title":{"injectables/VehicleOwnersService.html":{}},"body":{"controllers/VehicleOwnersController.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"coverage.html":{},"overview.html":{}}}],["vehicles",{"_index":1885,"title":{},"body":{"injectables/VehicleOwnersService.html":{},"controllers/VehiclesController.html":{},"injectables/VehiclesService.html":{}}}],["vehicles.controller",{"_index":1935,"title":{},"body":{"modules/VehiclesModule.html":{}}}],["vehicles.service",{"_index":1918,"title":{},"body":{"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{}}}],["vehicles/vehicles.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["vehicleschema",{"_index":369,"title":{},"body":{"modules/AvailabilitiesModule.html":{},"classes/Vehicle.html":{},"modules/VehicleOwnersModule.html":{},"injectables/VehicleOwnersService.html":{},"modules/VehiclesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vehiclescontroller",{"_index":1887,"title":{"controllers/VehiclesController.html":{}},"body":{"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"coverage.html":{}}}],["vehiclesmodule",{"_index":63,"title":{"modules/VehiclesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VehiclesModule.html":{},"modules.html":{},"overview.html":{}}}],["vehiclesservice",{"_index":1917,"title":{"injectables/VehiclesService.html":{}},"body":{"controllers/VehiclesController.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"overview.html":{}}}],["verbosememoryleak",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["version",{"_index":2138,"title":{},"body":{"properties.html":{}}}],["view",{"_index":400,"title":{},"body":{"injectables/AvailabilitiesService.html":{},"injectables/VehicleOwnersService.html":{}}}],["void",{"_index":339,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/ChatGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/PresenceGateway.html":{},"injectables/PresenceService.html":{},"miscellaneous/functions.html":{}}}],["watch",{"_index":2095,"title":{},"body":{"index.html":{}}}],["website",{"_index":2125,"title":{},"body":{"index.html":{}}}],["websocketgateway",{"_index":340,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/BookingGateway.html":{},"classes/ChatGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/NotificationsGateway.html":{},"classes/PresenceGateway.html":{}}}],["websocketserver",{"_index":332,"title":{},"body":{"classes/AvailabilitiesGateway.html":{},"classes/ChatGateway.html":{},"classes/LipaNaMpesaGateway.html":{},"classes/PresenceGateway.html":{}}}],["weight",{"_index":1090,"title":{},"body":{"classes/Parcel.html":{}}}],["welcome",{"_index":113,"title":{},"body":{"injectables/AppService.html":{}}}],["went",{"_index":1363,"title":{},"body":{"injectables/RoutesService.html":{}}}],["wildcard",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["working",{"_index":1792,"title":{},"body":{"injectables/UsersService.html":{}}}],["wrong",{"_index":1364,"title":{},"body":{"injectables/RoutesService.html":{}}}],["year",{"_index":726,"title":{},"body":{"classes/CreateVehicleDto.html":{},"classes/Vehicle.html":{}}}],["you'd",{"_index":2116,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilitiesModule.html":{},"modules/BookingModule.html":{},"modules/ChatModule.html":{},"modules/LipaNaMpesaModule.html":{},"modules/NotificationsModule.html":{},"modules/PercelModule.html":{},"modules/PresenceModule.html":{},"modules/ProfileModule.html":{},"modules/RoutesModule.html":{},"modules/SaccosModule.html":{},"modules/StationsModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/VehicleOwnersModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello(body: Object)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(@Body() body:Object): Object {\n    return this.appService.getHello();\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAvailabilitiesModule\n\nAvailabilitiesModule\n\nAppModule -->\n\nAvailabilitiesModule->AppModule\n\n\n\n\n\nBookingModule\n\nBookingModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nChatModule\n\nChatModule\n\nAppModule -->\n\nChatModule->AppModule\n\n\n\n\n\nLipaNaMpesaModule\n\nLipaNaMpesaModule\n\nAppModule -->\n\nLipaNaMpesaModule->AppModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nAppModule -->\n\nNotificationsModule->AppModule\n\n\n\n\n\nPercelModule\n\nPercelModule\n\nAppModule -->\n\nPercelModule->AppModule\n\n\n\n\n\nPresenceModule\n\nPresenceModule\n\nAppModule -->\n\nPresenceModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nAppModule -->\n\nRoutesModule->AppModule\n\n\n\n\n\nSaccosModule\n\nSaccosModule\n\nAppModule -->\n\nSaccosModule->AppModule\n\n\n\n\n\nStationsModule\n\nStationsModule\n\nAppModule -->\n\nStationsModule->AppModule\n\n\n\n\n\nTicketModule\n\nTicketModule\n\nAppModule -->\n\nTicketModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nVehicleOwnersModule\n\nVehicleOwnersModule\n\nAppModule -->\n\nVehicleOwnersModule->AppModule\n\n\n\n\n\nVehiclesModule\n\nVehiclesModule\n\nAppModule -->\n\nVehiclesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AvailabilitiesModule\n                        \n                        \n                            BookingModule\n                        \n                        \n                            ChatModule\n                        \n                        \n                            LipaNaMpesaModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PercelModule\n                        \n                        \n                            PresenceModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            RoutesModule\n                        \n                        \n                            SaccosModule\n                        \n                        \n                            StationsModule\n                        \n                        \n                            TicketModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            VehicleOwnersModule\n                        \n                        \n                            VehiclesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { StationsModule } from './stations/stations.module';\nimport { UsersModule } from './users/users.module';\nimport { VehiclesModule } from './vehicles/vehicles.module';\nimport { SaccosModule } from './saccos/saccos.module';\nimport { VehicleOwnersModule } from './vehicle-owners/vehicle-owners.module';\nimport { AvailabilitiesModule } from './availabilities/availabilities.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { BookingModule } from './booking/booking.module';\nimport { TicketModule } from './tickets/tickets.module';\nimport { LipaNaMpesaModule } from './lipa-na-mpesa/lipa-na-mpesa.module';\nimport { PercelModule } from './percel/percel.module';\nimport { RoutesModule } from './routes/routes.module';\nimport { ChatModule } from './chat/chat.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { PresenceModule } from './presence/presence.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    MongooseModule.forRoot(process.env.MONGO_URI),\n    EventEmitterModule.forRoot({\n      wildcard: true,\n      delimiter: '.',\n      verboseMemoryLeak: false,\n      ignoreErrors: false,\n    }),\n    StationsModule,\n    UsersModule,\n    VehiclesModule,\n    SaccosModule,\n    VehicleOwnersModule,\n    AvailabilitiesModule,\n    AuthModule,\n    ProfileModule,\n    BookingModule,\n    TicketModule,\n    LipaNaMpesaModule,\n    PercelModule,\n    RoutesModule,\n    ChatModule,\n    NotificationsModule,\n    PresenceModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): Object {\n    return {\n      message: 'Welcome to nganya APIs!',\n      body: {}\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(createAuthDto: CreateAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthDto\n                                    \n                                                CreateAuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpCode,\n  HttpStatus,\n  Req,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateAuthDto } from './dto/login.dto';\nimport { Request } from 'express';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('login')\n  login(@Body() createAuthDto: CreateAuthDto) {\n    return this.authService.login(createAuthDto);\n  }\n\n  @Post('logout')\n  signOut(@CurrentUser('_id') userId: string) {\n    return this.authService.signOut(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nRefreshStrategy\n\nRefreshStrategy\n\nAuthModule -->\n\nRefreshStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            RefreshStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schema/user.schema';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { RefreshStrategy } from './strategy/refresh.strategy';\n\n@Module({\n  controllers: [AuthController],\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n\n    JwtModule.register({}),\n  ],\n  providers: [AuthService, JwtStrategy, RefreshStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                    Async\n                                signOut\n                            \n                            \n                                    Async\n                                signToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(createAuthDto: CreateAuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthDto\n                                    \n                                                CreateAuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh(refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(user: UserDocument)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ForbiddenException,\n  HttpCode,\n  HttpException,\n  HttpStatus,\n  Injectable,\n} from '@nestjs/common';\nimport { CreateAuthDto } from './dto/login.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User, UserDocument } from 'src/users/schema/user.schema';\n\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtPayload } from 'src/types/jwt-payload';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectModel(User.name)\n    private userModel: Model,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n  ) {}\n\n  async login(createAuthDto: CreateAuthDto) {\n    try {\n      const user = await this.userModel.findOne({ idNo: createAuthDto.idNo });\n      if (!user) {\n        throw new ForbiddenException('Invalid credentials');\n      }\n\n      // TODO: Temporary solution as bcrypt was removed due to incompatibility with azure functionsnest add @nestjs/azure-func-http\n      if (createAuthDto.password != `${user.firstName}@${user.idNo}`) {\n        throw new ForbiddenException('Invalid credentials');\n      }\n      await user.updateOne({ lastLogin: new Date() });\n\n      return await this.signToken(user);\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async signToken(user: UserDocument) {\n    const payload: JwtPayload = {\n      _id: user._id,\n      sub: user._id,\n      firstName: user.firstName,\n      secondName: user.secondName,\n      idNo: user.idNo,\n      phone: user.phone,\n      email: user.email,\n      photoURL: user.photoURL,\n      role: user.role,\n      sacco: user.sacco,\n      station: user.station,\n      permission: user.permission,\n      vehicle: user.vehicle,\n    };\n    try {\n      const [accessToken, refreshToken] = await Promise.all([\n        this.jwtService.signAsync(payload, {\n          secret: this.configService.get('ACCESS_TOKEN_SECRET'),\n          expiresIn: this.configService.get('JWT_EXPIRATION_TIME'),\n        }),\n        this.jwtService.signAsync(payload, {\n          secret: this.configService.get('REFRESH_TOKEN_SECRET'),\n          expiresIn: this.configService.get('REFRESH_TOKEN_EXPIRATION_TIME'),\n        }),\n      ]);\n\n      // TODO: const hashedRefreshToken = await argon2.hash(refreshToken);\n\n      await user.updateOne({ refreshToken: refreshToken });\n      return {\n        access_token: accessToken,\n        refresh_token: refreshToken,\n      };\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async refresh(refreshToken: string) {\n    const user = await this.userModel.findOne({\n      refreshToken: refreshToken,\n    });\n    if (!user) {\n      throw new HttpException(\n        'Invalid credentials or User doue not exist on Nganya',\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n    return this.signToken(user);\n  }\n\n  async signOut(id: string) {\n    this.userModel.findByIdAndUpdate(id, {\n      refreshToken: null,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AvailabilitiesController.html":{"url":"controllers/AvailabilitiesController.html","title":"controller - AvailabilitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AvailabilitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availabilities/availabilities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                availabilities\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createAvailabilityDto: CreateAvailabilityDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add-availability')\n                \n            \n\n            \n                \n                    Defined in src/availabilities/availabilities.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAvailabilityDto\n                                    \n                                                CreateAvailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/availabilities/availabilities.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/availabilities/availabilities.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete-availability/:id')\n                \n            \n\n            \n                \n                    Defined in src/availabilities/availabilities.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateAvailabilityDto: UpdateAvailabilityDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('update-availability/:id')\n                \n            \n\n            \n                \n                    Defined in src/availabilities/availabilities.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAvailabilityDto\n                                    \n                                                UpdateAvailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { AvailabilitiesService } from './availabilities.service';\nimport { CreateAvailabilityDto } from './dto/create-availability.dto';\nimport { UpdateAvailabilityDto } from './dto/update-availability.dto';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { JwtPayload } from 'src/types/jwt-payload';\n\n@UseGuards(JwtGuard)\n@Controller('availabilities')\nexport class AvailabilitiesController {\n  constructor(\n    private readonly availabilitiesService: AvailabilitiesService,\n  ) {}\n\n  @Post('add-availability')\n  create(\n    @Body() createAvailabilityDto: CreateAvailabilityDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.availabilitiesService.create(\n      createAvailabilityDto,\n      user,\n    );\n  }\n\n  @Get()\n  findAll(@CurrentUser() user: JwtPayload) {\n    return this.availabilitiesService.findAll(user);\n  }\n\n  @Get(':id')\n  findOne(\n    @Param('availability/id') id: string,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.availabilitiesService.findOne(id, user);\n  }\n\n  @Patch('update-availability/:id')\n  update(\n    @Param('id') id: string,\n    @Body() updateAvailabilityDto: UpdateAvailabilityDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.availabilitiesService.update(\n      id,\n      updateAvailabilityDto,\n      user,\n    );\n  }\n\n  @Delete('delete-availability/:id')\n  remove(@Param('id') id: string, @CurrentUser() user: JwtPayload) {\n    return this.availabilitiesService.deleteAvalablity(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AvailabilitiesGateway.html":{"url":"classes/AvailabilitiesGateway.html","title":"class - AvailabilitiesGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AvailabilitiesGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availabilities/availabilty.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handleMessage\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(availabilitiesService: AvailabilitiesService, availabilityModel: Model, stationModel: Model, vehicleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/availabilities/availabilty.gateway.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        availabilitiesService\n                                                  \n                                                        \n                                                                        AvailabilitiesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        availabilityModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vehicleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/availabilty.gateway.ts:37\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(stationId: string, availability: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('stationAvailabilities')\n                \n            \n\n            \n                \n                    Defined in src/availabilities/availabilty.gateway.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    availability\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/availabilities/availabilty.gateway.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  SubscribeMessage,\n  MessageBody,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { AvailabilitiesService } from './availabilities.service';\nimport { UseGuards } from '@nestjs/common';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Station, StationDocument } from 'src/stations/schema/station.schema';\nimport { Vehicle, VehicleDocument } from 'src/vehicles/schema/vehicle.schema';\nimport {\n  Availability,\n  AvailabilityDocument,\n} from './schema/availability.schema';\nimport { Server } from 'socket.io';\n\n// @UseGuards(JwtGuard)\n@WebSocketGateway({ namespace: 'availabilities' })\nexport class AvailabilitiesGateway {\n  constructor(\n    private readonly availabilitiesService: AvailabilitiesService,\n\n    @InjectModel(Availability.name)\n    private readonly availabilityModel: Model,\n    @InjectModel(Station.name)\n    private readonly stationModel: Model,\n    @InjectModel(Vehicle.name)\n    private readonly vehicleModel: Model,\n  ) {}\n\n  @WebSocketServer()\n  server: Server;\n\n  onModuleInit() {\n    this.server.on('connection', (socket) => {\n      console.log('Namespace: ' + socket.nsp.name);\n      console.log('Socket ID: ' + socket.id);\n    });\n  }\n\n  @SubscribeMessage('stationAvailabilities')\n  async handleMessage(@MessageBody() stationId: string, availability: any) {\n    this.server.to(stationId).emit('onStationAvailabilities', availability);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AvailabilitiesModule.html":{"url":"modules/AvailabilitiesModule.html","title":"module - AvailabilitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    AvailabilitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AvailabilitiesModule\n\n\n\ncluster_AvailabilitiesModule_providers\n\n\n\n\nAvailabilitiesService\n\nAvailabilitiesService\n\n\n\nAvailabilitiesModule\n\nAvailabilitiesModule\n\nAvailabilitiesModule -->\n\nAvailabilitiesService->AvailabilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/availabilities/availabilities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AvailabilitiesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AvailabilitiesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AvailabilitiesService } from './availabilities.service';\nimport { AvailabilitiesController } from './availabilities.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Availability, AvailabilitySchema } from './schema/availability.schema';\nimport { Station, StationSchema } from 'src/stations/schema/station.schema';\nimport { Vehicle, VehicleSchema } from 'src/vehicles/schema/vehicle.schema';\nimport { AvailabilitiesGateway } from './availabilty.gateway';\n\n@Module({\n  controllers: [AvailabilitiesController],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Availability.name, schema: AvailabilitySchema },\n      { name: Station.name, schema: StationSchema },\n      { name: Vehicle.name, schema: VehicleSchema },\n    ]),\n  ],\n  providers: [AvailabilitiesService, AvailabilitiesGateway],\n})\nexport class AvailabilitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AvailabilitiesService.html":{"url":"injectables/AvailabilitiesService.html","title":"injectable - AvailabilitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AvailabilitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availabilities/availabilities.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteAvalablity\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(availabilityModel: Model, stationModel: Model, vehicleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/availabilities/availabilities.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        availabilityModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vehicleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createAvailabilityDto: CreateAvailabilityDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/availabilities/availabilities.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAvailabilityDto\n                                    \n                                                CreateAvailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteAvalablity\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAvalablity(id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/availabilities/availabilities.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/availabilities/availabilities.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/availabilities/availabilities.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateAvailabilityDto: UpdateAvailabilityDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/availabilities/availabilities.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAvailabilityDto\n                                    \n                                                UpdateAvailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateAvailabilityDto } from './dto/create-availability.dto';\nimport { UpdateAvailabilityDto } from './dto/update-availability.dto';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport {\n  Availability,\n  AvailabilityDocument,\n} from './schema/availability.schema';\nimport { Station, StationDocument } from 'src/stations/schema/station.schema';\nimport { Vehicle, VehicleDocument } from 'src/vehicles/schema/vehicle.schema';\n\n@Injectable()\nexport class AvailabilitiesService {\n  constructor(\n    @InjectModel(Availability.name)\n    private readonly availabilityModel: Model,\n    @InjectModel(Station.name)\n    private readonly stationModel: Model,\n    @InjectModel(Vehicle.name)\n    private readonly vehicleModel: Model,\n  ) {}\n\n  async create(createAvailabilityDto: CreateAvailabilityDto, user: JwtPayload) {\n    try {\n      if (\n        user.role === 'station manager' ||\n        (user.role === 'station agent' && user.permission?.canAddAvailabilities)\n      ) {\n        return await this.availabilityModel.create({\n          ...createAvailabilityDto,\n          station: user.station,\n          sacco: user.sacco,\n          addedBy: user._id,\n          addedOn: new Date(),\n        });\n      } else {\n        throw new HttpException(\n          'Only station managers and station agents with permission to add availabilities can add availabilities',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async findAll(user: JwtPayload) {\n    let availabilities = [];\n    try {\n      if (\n        user.role === 'general admin' ||\n        user.role === 'admin' ||\n        user.role === 'Super User'\n      ) {\n        availabilities = await this.availabilityModel\n          .where({\n            sacco: user.sacco,\n          })\n          .populate('vehicle')\n          .populate('route');\n      } else if (\n        user.role === 'station manager' ||\n        user.role === 'station agent'\n      ) {\n        availabilities = await this.availabilityModel\n          .where({\n            station: user.station,\n          })\n          .populate('vehicle')\n          .populate('route');\n      } else {\n        throw new HttpException(\n          'You are not authorized to view availabilities',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n\n      return availabilities;\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async findOne(id: string, user: JwtPayload) {\n    return await this.availabilityModel.findById(id);\n  }\n\n  async update(\n    id: string,\n    updateAvailabilityDto: UpdateAvailabilityDto,\n    user: JwtPayload,\n  ) {\n    try {\n      if (\n        user.role === 'admin' ||\n        user.role === 'Super User' ||\n        user.role === 'general admin' ||\n        user.role === 'station manager' ||\n        (user.role === 'station agent' &&\n          user.permission?.canUpdateAvailabilities)\n      ) {\n        return await this.availabilityModel.findByIdAndUpdate(\n          id,\n          {\n            ...updateAvailabilityDto,\n            updatedBy: user._id,\n            updatedOn: new Date(),\n          },\n          { new: true },\n        );\n      } else {\n        throw new HttpException(\n          'Only station managers and station agents with permission to update availabilities can update availabilities',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async deleteAvalablity(id: string, user: JwtPayload) {\n    try {\n      if (user.role === 'admin' || user.role === 'general admin') {\n        await this.availabilityModel.findByIdAndDelete(id);\n      } else if (\n        user.role === 'station manager' ||\n        (user.role === 'station agent' &&\n          user.permission?.canDeleteAvailabilities)\n      ) {\n        await this.availabilityModel.deleteOne({\n          _id: id,\n          // station: user.station,\n        });\n        throw new HttpException(\n          'Availability deleted successfully',\n          HttpStatus.OK,\n        );\n      } else {\n        throw new HttpException(\n          'Only station managers and station agents with permission to delete availabilities can delete availabilities',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n\n      throw new HttpException(\n        'Availability deleted successfully',\n        HttpStatus.OK,\n      );\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Availability.html":{"url":"classes/Availability.html","title":"class - Availability","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Availability\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/Availability.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addedBy\n                            \n                            \n                                    \n                                addedOn\n                            \n                            \n                                    \n                                arrivalTime\n                            \n                            \n                                    \n                                bookedSeates\n                            \n                            \n                                    \n                                depatureStation\n                            \n                            \n                                    \n                                depatureTime\n                            \n                            \n                                    \n                                dropOffLocations\n                            \n                            \n                                    \n                                dropOffPrices\n                            \n                            \n                                    \n                                finalDestinationStation\n                            \n                            \n                                    \n                                sacco\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                upadatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                vehicle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        arrivalTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookedSeates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        depatureStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: 'Station'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        depatureTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dropOffLocations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dropOffPrices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        finalDestinationStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sacco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: 'Sacco'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upadatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vehicle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: 'Vehicle'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Availability.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema } from '@nestjs/mongoose';\nimport { ObjectId } from 'bson';\nimport { HydratedDocument } from 'mongoose';\n\nexport type AvailabilityDocument = HydratedDocument;\n\n@Schema()\nexport class Availability {\n  @Prop({ type: ObjectId, ref: 'Station' })\n  depatureStation: string;\n\n  @Prop({ type: ObjectId })\n  finalDestinationStation: string;\n\n  @Prop({ type: Array })\n  dropOffLocations: Array;\n\n  @Prop()\n  dropOffPrices: Array;\n\n  @Prop()\n  depatureTime: Date;\n\n  @Prop()\n  arrivalTime: Date;\n\n  @Prop({ type: ObjectId, ref: 'Vehicle' })\n  vehicle: string;\n\n  @Prop({ type: Array })\n  bookedSeates: Array;\n\n  @Prop({ type: ObjectId, ref: 'Sacco' })\n  sacco: string;\n\n  @Prop()\n  status: string;\n\n  @Prop()\n  addedOn: Date;\n\n  @Prop({ type: ObjectId, ref: 'User' })\n  addedBy: string;\n\n  @Prop()\n  upadatedAt: Date;\n\n  @Prop({ type: ObjectId, ref: 'User' })\n  updatedBy: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Availability-1.html":{"url":"classes/Availability-1.html","title":"class - Availability-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Availability\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availabilities/schema/availability.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addedBy\n                            \n                            \n                                    \n                                arrivalTime\n                            \n                            \n                                    \n                                bookedSeats\n                            \n                            \n                                    \n                                depatureTime\n                            \n                            \n                                    \n                                route\n                            \n                            \n                                    \n                                sacco\n                            \n                            \n                                    \n                                station\n                            \n                            \n                                    \n                                stationsServiced\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                upadatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                vehicle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        arrivalTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookedSeats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        depatureTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Route'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sacco\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Sacco'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        station\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Station'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stationsServiced\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, default: undefined, ref: 'Station'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 'available'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upadatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vehicle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Vehicle'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/schema/availability.schema.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\n\nexport type AvailabilityDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Availability {\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Station' })\n  station: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Route' })\n  route: Types.ObjectId;\n\n  @Prop({ type: Array, default: [], ref: 'Station' })\n  stationsServiced: Array;\n\n  @Prop({ default: null })\n  depatureTime: Date;\n\n  @Prop({ default: null })\n  arrivalTime: Date;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Vehicle' })\n  vehicle: Types.ObjectId;\n\n  @Prop({ type: Array, default: [] })\n  bookedSeats: Array;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Sacco' })\n  sacco: Types.ObjectId;\n\n  @Prop({ default: 'available' })\n  status: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  addedBy: Types.ObjectId;\n\n  @Prop()\n  upadatedAt: Date;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  updatedBy: Types.ObjectId;\n}\n\nexport const AvailabilitySchema = SchemaFactory.createForClass(Availability);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Booking.html":{"url":"classes/Booking.html","title":"class - Booking","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Booking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/schema/booking.schema.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Booking {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookingGateway.html":{"url":"classes/BookingGateway.html","title":"class - BookingGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookingGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/booking.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookingService: BookingService)\n                    \n                \n                        \n                            \n                                Defined in src/booking/booking.gateway.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createBookingDto: CreateBookingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('createBooking')\n                \n            \n\n            \n                \n                    Defined in src/booking/booking.gateway.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookingDto\n                                    \n                                                CreateBookingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('findAllBooking')\n                \n            \n\n            \n                \n                    Defined in src/booking/booking.gateway.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('findOneBooking')\n                \n            \n\n            \n                \n                    Defined in src/booking/booking.gateway.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('removeBooking')\n                \n            \n\n            \n                \n                    Defined in src/booking/booking.gateway.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateBookingDto: UpdateBookingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('updateBooking')\n                \n            \n\n            \n                \n                    Defined in src/booking/booking.gateway.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateBookingDto\n                                    \n                                                UpdateBookingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { WebSocketGateway, SubscribeMessage, MessageBody } from '@nestjs/websockets';\nimport { BookingService } from './booking.service';\nimport { CreateBookingDto } from './dto/create-booking.dto';\nimport { UpdateBookingDto } from './dto/update-booking.dto';\n\n@WebSocketGateway()\nexport class BookingGateway {\n  constructor(private readonly bookingService: BookingService) {}\n\n  @SubscribeMessage('createBooking')\n  create(@MessageBody() createBookingDto: CreateBookingDto) {\n    return this.bookingService.create(createBookingDto);\n  }\n\n  @SubscribeMessage('findAllBooking')\n  findAll() {\n    return this.bookingService.findAll();\n  }\n\n  @SubscribeMessage('findOneBooking')\n  findOne(@MessageBody() id: number) {\n    return this.bookingService.findOne(id);\n  }\n\n  @SubscribeMessage('updateBooking')\n  update(@MessageBody() updateBookingDto: UpdateBookingDto) {\n    return this.bookingService.update(updateBookingDto.id, updateBookingDto);\n  }\n\n  @SubscribeMessage('removeBooking')\n  remove(@MessageBody() id: number) {\n    return this.bookingService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookingModule.html":{"url":"modules/BookingModule.html","title":"module - BookingModule","body":"\n                   \n\n\n\n\n    Modules\n    BookingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_providers\n\n\n\n\nBookingService\n\nBookingService\n\n\n\nBookingModule\n\nBookingModule\n\nBookingModule -->\n\nBookingService->BookingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/booking/booking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BookingService } from './booking.service';\nimport { BookingGateway } from './booking.gateway';\n\n@Module({\n  providers: [BookingGateway, BookingService],\n  imports: [],\n})\nexport class BookingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookingService.html":{"url":"injectables/BookingService.html","title":"injectable - BookingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/booking.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBookingDto: CreateBookingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/booking/booking.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookingDto\n                                    \n                                                CreateBookingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/booking/booking.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/booking/booking.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/booking/booking.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBookingDto: UpdateBookingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/booking/booking.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookingDto\n                                    \n                                                UpdateBookingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateBookingDto } from './dto/create-booking.dto';\nimport { UpdateBookingDto } from './dto/update-booking.dto';\n\n@Injectable()\nexport class BookingService {\n  create(createBookingDto: CreateBookingDto) {\n    return 'This action adds a new booking';\n  }\n\n  findAll() {\n    return `This action returns all booking`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} booking`;\n  }\n\n  update(id: number, updateBookingDto: UpdateBookingDto) {\n    return `This action updates a #${id} booking`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} booking`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chat.html":{"url":"classes/Chat.html","title":"class - Chat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/schema/chat.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                file\n                            \n                            \n                                    \n                                from\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                read\n                            \n                            \n                                    \n                                sacco\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/schema/chat.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/schema/chat.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/schema/chat.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        read\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: 'unread'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/schema/chat.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sacco\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Sacco'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/schema/chat.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/schema/chat.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/schema/chat.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\nimport { Document } from 'mongoose';\n\nexport type ChatDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Chat {\n  @Prop({ type: String })\n  message: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  from: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  to: Types.ObjectId;\n\n  @Prop({ type: String, default: 'pending' })\n  status: string;\n\n  @Prop({ type: String, default: 'unread' })\n  read: string;\n\n  @Prop({ type: String, default: null })\n  file: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Sacco' })\n  sacco: Types.ObjectId;\n}\n\nexport const ChatSchema = SchemaFactory.createForClass(Chat);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChatController.html":{"url":"controllers/ChatController.html","title":"controller - ChatController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChatController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/chat.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello(chat: CreateChatDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/chat/chat.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chat\n                                    \n                                                CreateChatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, UseGuards } from '@nestjs/common';\nimport { ChatService } from './chat.service';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { CreateChatDto } from './dto/create-chat.dto';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { JwtPayload } from 'src/types/jwt-payload';\n\n@UseGuards(JwtGuard)\n@Controller()\nexport class ChatController {\n  constructor(private readonly chatService: ChatService) {}\n\n  @Get()\n  getHello(\n    @Body() chat: CreateChatDto,\n    @CurrentUser() user: JwtPayload,\n  ): Object {\n    return this.chatService.sendMessage(chat, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChatGateway.html":{"url":"classes/ChatGateway.html","title":"class - ChatGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChatGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/chat.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chatService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/chat/chat.gateway.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/chat.gateway.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createChatDto: CreateChatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('createChat')\n                \n            \n\n            \n                \n                    Defined in src/chat/chat.gateway.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createChatDto\n                                    \n                                                CreateChatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.gateway.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  SubscribeMessage,\n  MessageBody,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { ChatService } from './chat.service';\nimport { CreateChatDto } from './dto/create-chat.dto';\nimport { UpdateChatDto } from './dto/update-chat.dto';\nimport { Server } from 'socket.io';\n\n@WebSocketGateway()\nexport class ChatGateway {\n  constructor(private readonly chatService: ChatService) {}\n\n  @WebSocketServer()\n  server: Server;\n\n  onModuleInit() {\n    this.server.on('connection', (socket) => {});\n  }\n\n  @SubscribeMessage('createChat')\n  create(@MessageBody() createChatDto: CreateChatDto) {\n    this.server.to(createChatDto.to).emit('createChat', createChatDto);\n    return this.chatService.create(createChatDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatModule.html":{"url":"modules/ChatModule.html","title":"module - ChatModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_providers\n\n\n\n\nChatService\n\nChatService\n\n\n\nChatModule\n\nChatModule\n\nChatModule -->\n\nChatService->ChatModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/chat/chat.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChatService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChatController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChatService } from './chat.service';\nimport { ChatGateway } from './chat.gateway';\nimport { ChatController } from './chat.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Chat, ChatSchema } from './schema/chat.schema';\n\n@Module({\n  providers: [ChatGateway, ChatService],\n  controllers: [ChatController],\n  imports: [\n    MongooseModule.forFeature([{ name: Chat.name, schema: ChatSchema }]),\n  ],\n})\nexport class ChatModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/chat.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                sendMessage\n                            \n                            \n                                userMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chatModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/chat/chat.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createChatDto: CreateChatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createChatDto\n                                    \n                                                CreateChatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(chat: CreateChatDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chat\n                                    \n                                                CreateChatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userMessages\n                        \n                    \n                \n            \n            \n                \nuserMessages(user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { CreateChatDto } from './dto/create-chat.dto';\nimport { UpdateChatDto } from './dto/update-chat.dto';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Chat, ChatDocument } from './schema/chat.schema';\n\n@Injectable()\nexport class ChatService {\n  constructor(\n    @InjectModel(Chat.name)\n    private readonly chatModel: Model,\n  ) {}\n  sendMessage(chat: CreateChatDto, user: JwtPayload) {\n    const newChat = new this.chatModel({\n      message: chat.message,\n      file: chat.file,\n      to: chat.to,\n      from: user._id,\n      sacco: user.sacco,\n    });\n    return newChat.save();\n  }\n  create(createChatDto: CreateChatDto) {\n    return 'This action adds a new chat';\n  }\n\n  userMessages(user: JwtPayload) {\n    try {\n      return this.chatModel\n        .find({ sacco: user.sacco })\n        .or([{ to: user._id }, { from: user._id }]);\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                idNo\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        idNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumberString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsNumberString,\n  IsString,\n} from 'class-validator';\n\nexport class CreateAuthDto {\n  @IsNumberString()\n  @IsNotEmpty()\n  readonly idNo: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAvailabilityDto.html":{"url":"classes/CreateAvailabilityDto.html","title":"class - CreateAvailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAvailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availabilities/dto/create-availability.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                arrivalTime\n                            \n                            \n                                    \n                                depatureTime\n                            \n                            \n                                    \n                                    \n                                route\n                            \n                            \n                                    \n                                stationsServiced\n                            \n                            \n                                    \n                                vehicle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        arrivalTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/dto/create-availability.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        depatureTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/dto/create-availability.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/dto/create-availability.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stationsServiced\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/dto/create-availability.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vehicle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/dto/create-availability.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsDateString, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateAvailabilityDto {\n  @IsString()\n  @IsNotEmpty()\n  route: string[];\n\n  @IsArray()\n  stationsServiced: string[];\n\n  @IsString()\n  vehicle: string;\n\n  @IsDateString()\n  depatureTime: Date;\n\n  @IsDateString()\n  arrivalTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookingDto.html":{"url":"classes/CreateBookingDto.html","title":"class - CreateBookingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/dto/create-booking.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateBookingDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateChatDto.html":{"url":"classes/CreateChatDto.html","title":"class - CreateChatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateChatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/dto/create-chat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                file\n                            \n                            \n                                    \n                                    \n                                message\n                            \n                            \n                                    \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/dto/create-chat.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/dto/create-chat.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/dto/create-chat.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateChatDto {\n  @IsString()\n  @IsNotEmpty()\n  message: string;\n\n  @IsString()\n  file: string;\n\n  @IsString()\n  @IsNotEmpty()\n  to: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNotificationDto.html":{"url":"classes/CreateNotificationDto.html","title":"class - CreateNotificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNotificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/dto/create-notification.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateNotificationDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePercelDto.html":{"url":"classes/CreatePercelDto.html","title":"class - CreatePercelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePercelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percel/dto/create-percel.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                paymentMethode\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                percelType\n                            \n                            \n                                    \n                                    Readonly\n                                percelWeight\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                reciverFirstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                reciverLocation\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                reciverPhone\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                reciverSecondName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                senderFirstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                senderIdNo\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                senderLocation\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                senderPhone\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                senderSecondName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        paymentMethode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        percelType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        percelWeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        reciverFirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        reciverLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        reciverPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        reciverSecondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        senderFirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        senderIdNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        senderLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        senderPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        senderSecondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/dto/create-percel.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreatePercelDto {\n  @IsString()\n  @IsNotEmpty()\n  readonly senderFirstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly senderSecondName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly senderPhone: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly senderIdNo: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly senderLocation: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly reciverFirstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly reciverSecondName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly reciverPhone: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly reciverLocation: string;\n\n  @IsString()\n  @IsNotEmpty()\n  readonly percelType: string;\n\n  @IsString()\n  readonly percelWeight: string;\n\n  @IsString()\n  @IsNotEmpty()\n  paymentMethode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePresenceDto.html":{"url":"classes/CreatePresenceDto.html","title":"class - CreatePresenceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePresenceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/presence/dto/create-presence.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePresenceDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProfileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRouteDto.html":{"url":"classes/CreateRouteDto.html","title":"class - CreateRouteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRouteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routes/dto/create-route.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                destinations\n                            \n                            \n                                    \n                                prices\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        destinations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routes/dto/create-route.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routes/dto/create-route.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNotEmpty } from 'class-validator';\n\nexport class CreateRouteDto {\n  @IsNotEmpty()\n  @IsArray()\n  destinations: string[];\n\n  @IsArray()\n  prices: { destination: string; price: number }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSaccoDto.html":{"url":"classes/CreateSaccoDto.html","title":"class - CreateSaccoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSaccoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/saccos/dto/create-sacco.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                logo\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/dto/create-sacco.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/dto/create-sacco.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/dto/create-sacco.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/dto/create-sacco.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/dto/create-sacco.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateSaccoDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  address: string;\n\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  logo?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStationDto.html":{"url":"classes/CreateStationDto.html","title":"class - CreateStationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stations/dto/create-station.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                destinations\n                            \n                            \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                street\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        destinations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/dto/create-station.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/dto/create-station.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/dto/create-station.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/dto/create-station.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/dto/create-station.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsNotEmpty,\n  IsString,\n} from 'class-validator';\n\nexport class CreateStationDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  street: string;\n\n  @IsString()\n  @IsNotEmpty()\n  location: string;\n\n  @IsString()\n  @IsNotEmpty()\n  phone: string;\n\n  @IsArray()\n  destinations: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTicketDto.html":{"url":"classes/CreateTicketDto.html","title":"class - CreateTicketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTicketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tickets/dto/create-ticket.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                availability\n                            \n                            \n                                    \n                                    \n                                bookedSeat\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                from\n                            \n                            \n                                    \n                                    \n                                idNumber\n                            \n                            \n                                    \n                                    \n                                paymentMethod\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                plateNo\n                            \n                            \n                                    \n                                    \n                                pricePerSeat\n                            \n                            \n                                    \n                                    \n                                secondName\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        availability\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bookedSeat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        paymentMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        plateNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pricePerSeat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        secondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"payment pending\" | \"payment confirmed\" | \"cancelled\" | \"completed\" | \"payment failed\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateTicketDto {\n  @IsString()\n  @IsNotEmpty()\n  bookedSeat: string;\n\n  @IsString()\n  @IsNotEmpty()\n  pricePerSeat: number;\n\n  @IsString()\n  @IsNotEmpty()\n  from: string;\n\n  @IsString()\n  @IsNotEmpty()\n  to: string;\n\n  @IsString()\n  @IsNotEmpty()\n  phone: string;\n\n  @IsString()\n  @IsNotEmpty()\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  secondName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  idNumber: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  paymentMethod: string;\n\n  @IsString()\n  @IsNotEmpty()\n  availability: string;\n\n  @IsString()\n  @IsNotEmpty()\n  plateNo: string;\n\n  @IsString()\n  status:\n    | \"payment pending\"\n    | \"payment confirmed\"\n    | \"cancelled\"\n    | \"completed\"\n    | \"payment failed\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                idNo\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                photoURL\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                secondName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsPhoneNumber('KE')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        photoURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         \"Super User\" | \"general admin\" | \"admin\" | \"station manager\" | \"accountant\" | \"station agent\" | \"driver\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        secondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, IsEmail, IsPhoneNumber } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  secondName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  idNo: string;\n\n  @IsString()\n  @IsPhoneNumber('KE')\n  phone: string;\n\n  @IsString()\n  @IsNotEmpty()\n  photoURL: string;\n\n  @IsString()\n  @IsNotEmpty()\n  role:\n    | 'Super User'\n    | 'general admin'\n    | 'admin'\n    | 'station manager'\n    | 'accountant'\n    | 'station agent'\n    | 'driver';\n\n\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVehicleDto.html":{"url":"classes/CreateVehicleDto.html","title":"class - CreateVehicleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVehicleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicles/dto/create-vehicle.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                capacity\n                            \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                    Optional\n                                imageURL\n                            \n                            \n                                    \n                                make\n                            \n                            \n                                    \n                                    \n                                model\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                    \n                                plateNo\n                            \n                            \n                                    \n                                    \n                                seatLayout\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/create-vehicle.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/create-vehicle.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/create-vehicle.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        make\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/create-vehicle.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/create-vehicle.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/create-vehicle.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        plateNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/create-vehicle.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        seatLayout\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/create-vehicle.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"unassigned\" | \"in station\" | \"out of service\" | \"in maintenance\" | \"deleted\" | \"in route\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/create-vehicle.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"bus\" | \"mini bus\" | \"taxi\" | \"truck\" | \"van\" | \"other\" | \"car\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/create-vehicle.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/create-vehicle.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNotEmpty, IsNumber, IsString } from 'class-validator';\nimport { Types } from 'mongoose';\n\nexport class CreateVehicleDto {\n  @IsString()\n  @IsNotEmpty()\n  plateNo: string;\n\n  @IsString()\n  color: string;\n\n  @IsString()\n  make: string;\n\n  @IsString()\n  @IsNotEmpty()\n  model: string;\n\n  @IsString()\n  year: number;\n\n  @IsNotEmpty()\n  owner: string | Types.ObjectId;\n\n  @IsString()\n  @IsNotEmpty()\n  type: 'bus' | 'mini bus' | 'taxi' | 'truck' | 'van' | 'other' | 'car';\n\n  @IsArray()\n  @IsNotEmpty()\n  seatLayout: Array>;\n\n  @IsNumber()\n  @IsNotEmpty()\n  capacity: number;\n\n  @IsString()\n  @IsNotEmpty()\n  status:\n    | 'unassigned'\n    | 'in station'\n    | 'out of service'\n    | 'in maintenance'\n    | 'deleted'\n    | 'in route';\n\n  @IsString()\n  imageURL?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVehicleOwnerDto.html":{"url":"classes/CreateVehicleOwnerDto.html","title":"class - CreateVehicleOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVehicleOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicle-owners/dto/create-vehicle-owner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                idNo\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                photoURL\n                            \n                            \n                                    \n                                    \n                                secondName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/dto/create-vehicle-owner.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/dto/create-vehicle-owner.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/dto/create-vehicle-owner.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumberString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/dto/create-vehicle-owner.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/dto/create-vehicle-owner.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        photoURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/dto/create-vehicle-owner.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        secondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/dto/create-vehicle-owner.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsNumberString,\n  IsString,\n} from 'class-validator';\nimport { Types } from 'mongoose';\n\nexport class CreateVehicleOwnerDto {\n  @IsNumberString()\n  @IsNotEmpty()\n  idNo: string;\n\n  @IsNotEmpty()\n  @IsString()\n  firstName: string;\n\n  @IsNotEmpty()\n  @IsString()\n  secondName: string;\n\n  @IsString()\n  address?: string;\n\n  @IsString()\n  @IsNotEmpty()\n  phone: string;\n\n  @IsString()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  photoURL: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Customer.html":{"url":"classes/Customer.html","title":"class - Customer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/Customer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addedOn\n                            \n                            \n                                    \n                                customerID\n                            \n                            \n                                    \n                                customerPhone\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                seatNo\n                            \n                            \n                                    \n                                secondName\n                            \n                            \n                                    \n                                upadatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Customer.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customerID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Customer.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customerPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Customer.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Customer.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        seatNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Customer.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        secondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Customer.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upadatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Customer.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\nexport type CustomerDocument = HydratedDocument;\n\n@Schema()\nexport class Customer {\n  @Prop({ required: true })\n  firstName: string;\n\n  @Prop()\n  secondName: string;\n\n  @Prop()\n  customerID: string;\n\n  @Prop({ required: true })\n  customerPhone: string;\n\n  @Prop({ required: true })\n  seatNo: string;\n\n  @Prop({ default: new Date() })\n  addedOn: Date;\n\n  @Prop()\n  upadatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindStationAgentsDto.html":{"url":"classes/FindStationAgentsDto.html","title":"class - FindStationAgentsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindStationAgentsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/find-station-agents.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                station\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        station\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/find-station-agents.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class FindStationAgentsDto {\n  @IsString()\n  station: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtGuard.html":{"url":"injectables/JwtGuard.html","title":"injectable - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.guard.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt.guard.ts:5\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtPayload.html":{"url":"classes/JwtPayload.html","title":"class - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/jwt-payload.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                idNo\n                            \n                            \n                                    Optional\n                                permission\n                            \n                            \n                                phone\n                            \n                            \n                                photoURL\n                            \n                            \n                                role\n                            \n                            \n                                sacco\n                            \n                            \n                                secondName\n                            \n                            \n                                    Optional\n                                station\n                            \n                            \n                                sub\n                            \n                            \n                                    Optional\n                                vehicle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId | string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         \"Super User\" | \"general admin\" | \"admin\" | \"station manager\" | \"accountant\" | \"station agent\" | \"driver\"\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sacco\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        station\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId | string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId | string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        vehicle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId | string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/jwt-payload.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from 'mongodb';\nimport { Types } from 'mongoose';\nimport { Permission } from './permission';\n\nexport class JwtPayload {\n  _id: ObjectId | string;\n  sub: ObjectId | string;\n  firstName: string;\n  secondName: string;\n  idNo: string;\n  phone: string;\n  email: string;\n  photoURL: string;\n  role:\n    | 'Super User'\n    | 'general admin'\n    | 'admin'\n    | 'station manager'\n    | 'accountant'\n    | 'station agent'\n    | 'driver';\n  sacco: Types.ObjectId | string;\n  station?: ObjectId | string;\n  vehicle?: ObjectId | string;\n  permission?: Permission;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(\n  Strategy,\n  'jwt',\n) {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest:\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get('ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  validate(payload: any) {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LipaDto.html":{"url":"classes/LipaDto.html","title":"class - LipaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LipaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lipa-na-mpesa/dto/create-lipa-na-mpesa.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                idNo\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                secondName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/dto/create-lipa-na-mpesa.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/dto/create-lipa-na-mpesa.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/dto/create-lipa-na-mpesa.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/dto/create-lipa-na-mpesa.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        secondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/dto/create-lipa-na-mpesa.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmpty, IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class LipaDto {\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @IsString()\n  @IsNotEmpty()\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  secondName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  idNo: string;\n  //   @IsString()\n  //   description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LipaNaMpesaCallbackDto.html":{"url":"classes/LipaNaMpesaCallbackDto.html","title":"class - LipaNaMpesaCallbackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LipaNaMpesaCallbackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lipa-na-mpesa/dto/lipa-na-mpesa-callback.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/dto/lipa-na-mpesa-callback.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { LipaDto } from './create-lipa-na-mpesa.dto';\n\nexport class LipaNaMpesaCallbackDto extends PartialType(LipaDto) {\n  transaction: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LipaNaMpesaController.html":{"url":"controllers/LipaNaMpesaController.html","title":"controller - LipaNaMpesaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LipaNaMpesaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lipa-na-mpesa/lipa-na-mpesa.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lipa-na-mpesa\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                mpesaCallback\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                sendStk\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        mpesaCallback\n                        \n                    \n                \n            \n            \n                \n                    \n                    mpesaCallback(createLipaNaMpesaDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('callback')\n                \n            \n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLipaNaMpesaDto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        sendStk\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendStk(createLipaNaMpesaDto: LipaDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Post('send-stk')\n                \n            \n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLipaNaMpesaDto\n                                    \n                                                LipaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateLipaNaMpesaDto: LipaNaMpesaCallbackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLipaNaMpesaDto\n                                    \n                                                LipaNaMpesaCallbackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { LipaNaMpesaService } from './lipa-na-mpesa.service';\nimport { LipaDto } from './dto/create-lipa-na-mpesa.dto';\nimport { LipaNaMpesaCallbackDto } from './dto/lipa-na-mpesa-callback.dto';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { JwtPayload } from 'src/types/jwt-payload';\n\n@Controller('lipa-na-mpesa')\nexport class LipaNaMpesaController {\n  constructor(private readonly lipaNaMpesaService: LipaNaMpesaService) {}\n\n  @UseGuards(JwtGuard)\n  @Post('send-stk')\n  sendStk(\n    @Body() createLipaNaMpesaDto: LipaDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.lipaNaMpesaService.sendStk(createLipaNaMpesaDto, user);\n  }\n\n  @Post('callback')\n  mpesaCallback(@Body() createLipaNaMpesaDto: any) {\n    return this.lipaNaMpesaService.mpesaCallback(createLipaNaMpesaDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.lipaNaMpesaService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.lipaNaMpesaService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateLipaNaMpesaDto: LipaNaMpesaCallbackDto,\n  ) {\n    return this.lipaNaMpesaService.update(+id, updateLipaNaMpesaDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.lipaNaMpesaService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LipaNaMpesaGateway.html":{"url":"classes/LipaNaMpesaGateway.html","title":"class - LipaNaMpesaGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LipaNaMpesaGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lipa-na-mpesa/lipa-na-mpesa.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handleMessage\n                            \n                            \n                                    \n                                    Async\n                                handleMpesaPaymentCreatedEvent\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lipaNaMpesaService: LipaNaMpesaService, lipaNaMpesaTransaction: Model)\n                    \n                \n                        \n                            \n                                Defined in src/lipa-na-mpesa/lipa-na-mpesa.gateway.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lipaNaMpesaService\n                                                  \n                                                        \n                                                                        LipaNaMpesaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lipaNaMpesaTransaction\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/lipa-na-mpesa.gateway.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(mpesaData: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('lipaNaMpesa')\n                \n            \n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.gateway.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mpesaData\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        handleMpesaPaymentCreatedEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMpesaPaymentCreatedEvent(mpesaData: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('mpesapayment.created')\n                \n            \n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.gateway.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mpesaData\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.gateway.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MessageBody,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { LipaNaMpesaService } from './lipa-na-mpesa.service';\nimport { Server } from 'socket.io';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport {\n  LipaNaMpesaTransaction,\n  LipaNaMpesaTransactionDocument,\n} from './schema/lipa-na-mpesa.schema';\nimport { OnEvent } from '@nestjs/event-emitter';\n\n@WebSocketGateway({ namespace: 'mpesa' })\nexport class LipaNaMpesaGateway {\n  constructor(\n    private readonly lipaNaMpesaService: LipaNaMpesaService,\n    @InjectModel(LipaNaMpesaTransaction.name)\n    private readonly lipaNaMpesaTransaction: Model,\n  ) {}\n\n  @WebSocketServer()\n  server: Server;\n\n  onModuleInit() {\n    this.server.on('connection', (socket) => {\n      console.log('Namespace: ' + socket.nsp.name);\n      console.log('Socket ID: ' + socket.id);\n    });\n  }\n\n  @SubscribeMessage('lipaNaMpesa')\n  async handleMessage(\n    @MessageBody() mpesaData: { CheckoutRequestID: string; data: any },\n  ) {\n    this.server\n      .to(mpesaData.CheckoutRequestID)\n      .emit('onLipaNaMpesaTransaction', {\n        status: `Loading ${mpesaData.CheckoutRequestID}...`,\n      });\n\n    return 'Loading...';\n  }\n\n  @OnEvent('mpesapayment.created')\n  async handleMpesaPaymentCreatedEvent(mpesaData: {\n    CheckoutRequestID: string;\n    data: any;\n  }) {\n    this.server\n      .to(mpesaData.CheckoutRequestID)\n      .emit('onLipaNaMpesaTransaction', mpesaData.data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LipaNaMpesaModule.html":{"url":"modules/LipaNaMpesaModule.html","title":"module - LipaNaMpesaModule","body":"\n                   \n\n\n\n\n    Modules\n    LipaNaMpesaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LipaNaMpesaModule\n\n\n\ncluster_LipaNaMpesaModule_providers\n\n\n\n\nLipaNaMpesaService\n\nLipaNaMpesaService\n\n\n\nLipaNaMpesaModule\n\nLipaNaMpesaModule\n\nLipaNaMpesaModule -->\n\nLipaNaMpesaService->LipaNaMpesaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lipa-na-mpesa/lipa-na-mpesa.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LipaNaMpesaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LipaNaMpesaController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LipaNaMpesaService } from './lipa-na-mpesa.service';\nimport { LipaNaMpesaController } from './lipa-na-mpesa.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  LipaNaMpesaTransaction,\n  LipaNaMpesaTransactionSchema,\n} from './schema/lipa-na-mpesa.schema';\nimport { LipaNaMpesaGateway } from './lipa-na-mpesa.gateway';\n\n@Module({\n  controllers: [LipaNaMpesaController],\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: LipaNaMpesaTransaction.name,\n        schema: LipaNaMpesaTransactionSchema,\n      },\n    ]),\n  ],\n  providers: [LipaNaMpesaService, LipaNaMpesaGateway],\n})\nexport class LipaNaMpesaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LipaNaMpesaService.html":{"url":"injectables/LipaNaMpesaService.html","title":"injectable - LipaNaMpesaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LipaNaMpesaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lipa-na-mpesa/lipa-na-mpesa.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                authorisationEndpoint\n                            \n                            \n                                    Readonly\n                                callback_url\n                            \n                            \n                                    Readonly\n                                stkEndpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                listenToPaymentUpdates\n                            \n                            \n                                    Async\n                                mpesaCallback\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                sendStk\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lipaNaMpesaTransaction: Model, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/lipa-na-mpesa/lipa-na-mpesa.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lipaNaMpesaTransaction\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.service.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listenToPaymentUpdates\n                        \n                    \n                \n            \n            \n                \n                    \n                    listenToPaymentUpdates(mpesaData: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.service.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mpesaData\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mpesaCallback\n                        \n                    \n                \n            \n            \n                \n                    \n                    mpesaCallback(mpesaResponse: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.service.ts:146\n                \n            \n\n\n            \n                \n                    Mpesa callback url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mpesaResponse\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendStk\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendStk(lipaDTO: LipaDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.service.ts:41\n                \n            \n\n\n            \n                \n                    Initialise th push stk\n. it requres Auth\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lipaDTO\n                                    \n                                                LipaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateLipaNaMpesaDto: LipaNaMpesaCallbackDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lipa-na-mpesa/lipa-na-mpesa.service.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLipaNaMpesaDto\n                                    \n                                                LipaNaMpesaCallbackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        authorisationEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://sandbox.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials'\n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/lipa-na-mpesa.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        callback_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.nganyaapp.com/api/lipa-na-mpesa/callback'\n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/lipa-na-mpesa.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        stkEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://sandbox.safaricom.co.ke/mpesa/stkpush/v1/processrequest'\n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/lipa-na-mpesa.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { LipaDto } from './dto/create-lipa-na-mpesa.dto';\nimport { LipaNaMpesaCallbackDto } from './dto/lipa-na-mpesa-callback.dto';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport axios from 'axios';\nimport {\n  LipaNaMpesaTransaction,\n  LipaNaMpesaTransactionDocument,\n} from './schema/lipa-na-mpesa.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { StkInitResponce } from './types/stk-init-reponce.type';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\n\n@Injectable()\nexport class LipaNaMpesaService {\n  constructor(\n    @InjectModel(LipaNaMpesaTransaction.name)\n    private lipaNaMpesaTransaction: Model,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  readonly authorisationEndpoint =\n    'https://sandbox.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials';\n\n  readonly stkEndpoint =\n    'https://sandbox.safaricom.co.ke/mpesa/stkpush/v1/processrequest';\n\n  readonly callback_url =\n    'https://api.nganyaapp.com/api/lipa-na-mpesa/callback';\n\n  /**\n   *\n   * # Initialise th push stk\n   * . it requres Auth\n   *\n   * @param lipaDTO\n   * @param user\n   * @returns\n   */\n  async sendStk(lipaDTO: LipaDto, user: JwtPayload) {\n    const shortCode = '174379';\n\n    const account_reference = null;\n\n    const date = new Date(Date.now());\n    const pad2 = (n: string | number) => (Number(n)  {\n          accessToken = res.data.access_token;\n        })\n        .catch((err) => {\n          console.log(err);\n\n          throw new HttpException(err.message, HttpStatus.BAD_GATEWAY);\n        });\n\n      let result: StkInitResponce | null = null;\n\n      await axios({\n        method: 'post',\n        url: this.stkEndpoint,\n        headers: {\n          Authorization: 'Bearer ' + accessToken,\n        },\n        data: {\n          BusinessShortCode: shortCode,\n          Password: password,\n          Timestamp: timestamp,\n          TransactionType: 'CustomerPayBillOnline',\n          Amount: lipaDTO.amount,\n          PartyA: lipaDTO.phone,\n          PartyB: shortCode,\n          PhoneNumber: lipaDTO.phone,\n          CallBackURL: this.callback_url,\n          AccountReference: 'Nganya',\n          TransactionDesc: 'Ticket',\n        },\n      })\n        .then(async (res) => {\n          result = res.data;\n\n          this.eventEmitter.emit('mpesapayment.created', {\n            CheckoutRequestID: result.CheckoutRequestID,\n            data: result,\n          });\n\n          await this.lipaNaMpesaTransaction.create({\n            CheckoutRequestID: result.CheckoutRequestID,\n            ...result,\n            Amount: lipaDTO.amount,\n            firstName: lipaDTO.firstName,\n            secondName: lipaDTO.secondName,\n            idNo: lipaDTO.idNo,\n\n            phone: lipaDTO.phone,\n            sacco: user.sacco,\n            agent: user._id,\n            station: user.station,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n\n          throw new HttpException(err.message, HttpStatus.BAD_GATEWAY);\n        });\n\n      return result;\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  /**\n   *\n   * # Mpesa callback url\n   *\n   * @param mpesaResponse\n   * @returns\n   *\n   */\n  async mpesaCallback(mpesaResponse: any) {\n    try {\n      await this.lipaNaMpesaTransaction.findOneAndUpdate(\n        {\n          CheckoutRequestID: mpesaResponse.Body?.stkCallback.CheckoutRequestID,\n        },\n        {\n          MerchantRequestID: mpesaResponse.Body?.stkCallback?.MerchantRequestID,\n          CheckoutRequestID: mpesaResponse.Body?.stkCallback?.CheckoutRequestID,\n          ResultCode: mpesaResponse.Body?.stkCallback?.ResultCode,\n          ResultDesc: mpesaResponse.Body?.stkCallback?.ResultDesc,\n          MpesaReceiptNumber:\n            mpesaResponse.Body?.stkCallback?.CallbackMetadata?.Item[1]?.Value ??\n            null,\n          Balance:\n            mpesaResponse.Body?.stkCallback?.CallbackMetadata?.Item[2]?.Value ??\n            null,\n          TransactionDate:\n            mpesaResponse.Body?.stkCallback?.CallbackMetadata?.Item[3]?.Value ??\n            null,\n          PhoneNumber:\n            mpesaResponse.Body?.stkCallback?.CallbackMetadata?.Item[4]?.Value ??\n            null,\n\n          transaction: [mpesaResponse],\n        },\n      );\n\n      this.eventEmitter.emit('mpesapayment.created', {\n        CheckoutRequestID: mpesaResponse.Body?.stkCallback.CheckoutRequestID,\n        data: mpesaResponse,\n      });\n\n      throw new HttpException('Transaction saved successfully', HttpStatus.OK);\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  findAll() {\n    return `This action returns all lipaNaMpesa`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} lipaNaMpesa`;\n  }\n\n  update(id: number, updateLipaNaMpesaDto: LipaNaMpesaCallbackDto) {\n    return `This action updates a #${id} lipaNaMpesa`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} lipaNaMpesa`;\n  }\n\n  async listenToPaymentUpdates(mpesaData: {\n    CheckoutRequestID: string;\n    data: any;\n  }) {\n    console.log(mpesaData);\n\n    return mpesaData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LipaNaMpesaTransaction.html":{"url":"classes/LipaNaMpesaTransaction.html","title":"class - LipaNaMpesaTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LipaNaMpesaTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                agent\n                            \n                            \n                                    \n                                Amount\n                            \n                            \n                                    \n                                Balance\n                            \n                            \n                                    \n                                CheckoutRequestID\n                            \n                            \n                                    \n                                claimed\n                            \n                            \n                                    \n                                CustomerMessage\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                idNo\n                            \n                            \n                                    \n                                MerchantRequestID\n                            \n                            \n                                    \n                                MpesaReceiptNumber\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                PhoneNumber\n                            \n                            \n                                    \n                                ResponseDescription\n                            \n                            \n                                    \n                                    Optional\n                                ResultCode\n                            \n                            \n                                    \n                                ResultDesc\n                            \n                            \n                                    \n                                sacoo\n                            \n                            \n                                    \n                                secondName\n                            \n                            \n                                    \n                                station\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                transaction\n                            \n                            \n                                    \n                                TransactionDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        agent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        CheckoutRequestID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        claimed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        CustomerMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        MerchantRequestID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        MpesaReceiptNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        PhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ResponseDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        ResultCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ResultDesc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sacoo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        secondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        station\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     object[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        TransactionDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\n\nexport type LipaNaMpesaTransactionDocument =\n  HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class LipaNaMpesaTransaction {\n  @Prop({ type: String })\n  MerchantRequestID: string;\n\n  @Prop({ type: String })\n  CheckoutRequestID: string;\n\n  @Prop({ type: String })\n  ResultCode?: string;\n\n  @Prop({ type: String })\n  ResultDesc: string;\n  @Prop({ type: String })\n  ResponseDescription: string;\n\n  @Prop({ type: String })\n  CustomerMessage: string;\n\n  @Prop({ type: Number, default: null })\n  Amount: number;\n\n  @Prop({ type: String, default: null })\n  MpesaReceiptNumber: string;\n\n  @Prop({ type: Number, default: null })\n  Balance: string;\n\n  @Prop({ type: String, default: null })\n  TransactionDate: string;\n\n  @Prop({ type: String, default: null })\n  PhoneNumber: number;\n\n  @Prop({ type: String, default: null })\n  firstName: string;\n\n  @Prop({ type: String, default: null })\n  secondName: string;\n\n  @Prop({ type: String, default: null })\n  idNo: string;\n\n  @Prop({ type: String, default: null })\n  phone: string;\n\n  @Prop({ type: SchemaTypes.ObjectId })\n  sacoo: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, default: null })\n  station: Types.ObjectId;\n\n  @Prop({ type: String, default: 'pending' })\n  status: string;\n\n  @Prop({ type: String, default: 'pending' })\n  claimed: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  agent: string;\n\n  @Prop({ type: Array, default: null })\n  transaction: object[];\n}\n\nexport const LipaNaMpesaTransactionSchema = SchemaFactory.createForClass(\n  LipaNaMpesaTransaction,\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutDto.html":{"url":"classes/LogoutDto.html","title":"class - LogoutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/logout.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                refresh_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/logout.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthDto } from './login.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LogoutDto {\n  @IsNotEmpty()\n  readonly refresh_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/entities/notification.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Notification {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationsGateway.html":{"url":"classes/NotificationsGateway.html","title":"class - NotificationsGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationsGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/notifications.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/notifications/notifications.gateway.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createNotificationDto: CreateNotificationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('createNotification')\n                \n            \n\n            \n                \n                    Defined in src/notifications/notifications.gateway.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNotificationDto\n                                    \n                                                CreateNotificationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('findAllNotifications')\n                \n            \n\n            \n                \n                    Defined in src/notifications/notifications.gateway.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('findOneNotification')\n                \n            \n\n            \n                \n                    Defined in src/notifications/notifications.gateway.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('removeNotification')\n                \n            \n\n            \n                \n                    Defined in src/notifications/notifications.gateway.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateNotificationDto: UpdateNotificationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('updateNotification')\n                \n            \n\n            \n                \n                    Defined in src/notifications/notifications.gateway.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateNotificationDto\n                                    \n                                                UpdateNotificationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { WebSocketGateway, SubscribeMessage, MessageBody } from '@nestjs/websockets';\nimport { NotificationsService } from './notifications.service';\nimport { CreateNotificationDto } from './dto/create-notification.dto';\nimport { UpdateNotificationDto } from './dto/update-notification.dto';\n\n@WebSocketGateway()\nexport class NotificationsGateway {\n  constructor(private readonly notificationsService: NotificationsService) {}\n\n  @SubscribeMessage('createNotification')\n  create(@MessageBody() createNotificationDto: CreateNotificationDto) {\n    return this.notificationsService.create(createNotificationDto);\n  }\n\n  @SubscribeMessage('findAllNotifications')\n  findAll() {\n    return this.notificationsService.findAll();\n  }\n\n  @SubscribeMessage('findOneNotification')\n  findOne(@MessageBody() id: number) {\n    return this.notificationsService.findOne(id);\n  }\n\n  @SubscribeMessage('updateNotification')\n  update(@MessageBody() updateNotificationDto: UpdateNotificationDto) {\n    return this.notificationsService.update(updateNotificationDto.id, updateNotificationDto);\n  }\n\n  @SubscribeMessage('removeNotification')\n  remove(@MessageBody() id: number) {\n    return this.notificationsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nNotificationsService\n\nNotificationsService\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notifications/notifications.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationsService } from './notifications.service';\nimport { NotificationsGateway } from './notifications.gateway';\n\n@Module({\n  providers: [NotificationsGateway, NotificationsService]\n})\nexport class NotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/notifications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createNotificationDto: CreateNotificationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/notifications/notifications.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNotificationDto\n                                    \n                                                CreateNotificationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/notifications/notifications.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/notifications/notifications.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/notifications/notifications.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateNotificationDto: UpdateNotificationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/notifications/notifications.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateNotificationDto\n                                    \n                                                UpdateNotificationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateNotificationDto } from './dto/create-notification.dto';\nimport { UpdateNotificationDto } from './dto/update-notification.dto';\n\n@Injectable()\nexport class NotificationsService {\n  create(createNotificationDto: CreateNotificationDto) {\n    return 'This action adds a new notification';\n  }\n\n  findAll() {\n    return `This action returns all notifications`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} notification`;\n  }\n\n  update(id: number, updateNotificationDto: UpdateNotificationDto) {\n    return `This action updates a #${id} notification`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} notification`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Parcel.html":{"url":"classes/Parcel.html","title":"class - Parcel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Parcel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/Parcel.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                customerID\n                            \n                            \n                                    \n                                customerPhone\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                seatNo\n                            \n                            \n                                    \n                                secondName\n                            \n                            \n                                    \n                                    \n                                upadatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customerID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Parcel.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customerPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Parcel.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Parcel.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        seatNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Parcel.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        secondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Parcel.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        upadatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/Parcel.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from 'bson';\nimport { Prop, Schema } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\nexport type ParcelDocument = HydratedDocument;\n\n@Schema()\nexport class Parcel {\n  @Prop({ required: true })\n  firstName: string;\n\n  @Prop()\n  secondName: string;\n\n  @Prop()\n  customerID: string;\n\n  @Prop({ required: true })\n  customerPhone: string;\n\n  @Prop({ required: true })\n  seatNo: string;\n\n  @Prop({ default: new Date() })\n  @Prop()\n  upadatedAt: Date;\n}\n\n// const parcel = new Schema({\n//   paymentID: {\n//     type: String,\n//     required: false,\n//   },\n//   paymentMode: {\n//     type: String,\n//     required: false,\n//   },\n//   shippingCost: {\n//     type: Number,\n//     required: true,\n//   },\n\n//   weight: {\n//     type: Number,\n//     required: true,\n//     default: 0,\n//   },\n//   parcelType: {\n//     type: String,\n//     required: true,\n//     default: \"parcel\",\n//   },\n//   parcelDescription: {\n//     type: String,\n//     required: false,\n//   },\n\n//   shipingVehicle: {\n//     type: ObjectId,\n//     ref: \"Vehicle\",\n//     required: false,\n//   },\n\n//   sacco: {\n//     type: ObjectId,\n//     immutable: true,\n//     ref: \"Sacco\",\n//     required: true,\n//   },\n//   status: {\n//     type: String,\n//     required: true,\n//     default: \"pending\",\n//   },\n//   // sendingCustomer: {\n//   //   type: customerSchema,\n//   //   required: true,\n//   // },\n//   // receivingCustomer: {\n//   //   type: customerSchema,\n//   //   required: true,\n//   // },\n//   sendingFrom: {\n//     type: ObjectId,\n//     ref: \"Station\",\n//     required: true,\n//   },\n//   sendingTo: {\n//     type: ObjectId,\n//     ref: \"Station\",\n//     required: true,\n//   },\n\n//   checkedInAtDepatureOn: {\n//     type: Date,\n//     default: () => Date.now(),\n//     immutable: true,\n//   },\n//   checkedInAtDepatureBy: {\n//     type: ObjectId,\n//     ref: \"User\",\n//     required: true,\n//     immutable: true,\n//   },\n//   checkedOutAtDepatureOn: {\n//     type: Date,\n//     required: false,\n//   },\n//   checkedOutAtDepatureBy: {\n//     type: ObjectId,\n//     ref: \"User\",\n//     required: false,\n//   },\n//   checkedInAtDestinationOn: {\n//     type: Date,\n//     default: () => Date.now(),\n//   },\n//   checkedInAtDestinationBy: {\n//     type: ObjectId,\n//     ref: \"User\",\n//     required: true,\n//   },\n\n//   checkedOutAtDestinationOn: {\n//     type: Date,\n//     required: false,\n//   },\n//   checkedOutAtDestinationBy: {\n//     type: ObjectId,\n//     ref: \"User\",\n//     required: false,\n//   },\n// });\n//  const parcelModel = model(\"Parcel\", parcel);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Percel.html":{"url":"classes/Percel.html","title":"class - Percel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Percel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percel/schema/percel.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                availability\n                            \n                            \n                                    \n                                driver\n                            \n                            \n                                    \n                                paymentMethode\n                            \n                            \n                                    \n                                percelType\n                            \n                            \n                                    \n                                percelWeight\n                            \n                            \n                                    \n                                pickedUpAt\n                            \n                            \n                                    \n                                pickupAgent\n                            \n                            \n                                    \n                                reciverFirstName\n                            \n                            \n                                    \n                                reciverIdNo\n                            \n                            \n                                    \n                                reciverLocation\n                            \n                            \n                                    \n                                reciverPhone\n                            \n                            \n                                    \n                                reciverSecondName\n                            \n                            \n                                    \n                                recivingAgent\n                            \n                            \n                                    \n                                recivingStation\n                            \n                            \n                                    \n                                sacco\n                            \n                            \n                                    \n                                senderFirstName\n                            \n                            \n                                    \n                                senderIdNo\n                            \n                            \n                                    \n                                senderLocation\n                            \n                            \n                                    \n                                senderPhone\n                            \n                            \n                                    \n                                senderSecondName\n                            \n                            \n                                    \n                                sendingAgent\n                            \n                            \n                                    \n                                sendingStation\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        availability\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Availability'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        driver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paymentMethode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        percelType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        percelWeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pickedUpAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pickupAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reciverFirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reciverIdNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reciverLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reciverPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reciverSecondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        recivingAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        recivingStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Station'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sacco\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Sacco'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        senderFirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        senderIdNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        senderLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        senderPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        senderSecondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sendingAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sendingStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Station', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/percel/schema/percel.schema.ts:82\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\n\nexport type PercelDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Percel {\n  @Prop({ type: String, required: true })\n  senderFirstName: string;\n\n  @Prop({ type: String, required: true })\n  senderSecondName: string;\n\n  @Prop({ type: String, required: true })\n  senderPhone: string;\n\n  @Prop({ type: String, required: true })\n  senderLocation: string;\n\n  @Prop({ type: String, required: true })\n  senderIdNo: string;\n\n  @Prop({ type: String, required: true })\n  reciverFirstName: string;\n\n  @Prop({ type: String, required: true })\n  reciverSecondName: string;\n\n  @Prop({ type: String, required: true })\n  reciverPhone: string;\n\n  @Prop({ type: String, required: true })\n  reciverLocation: string;\n\n  @Prop({ type: String, default: null })\n  reciverIdNo: string;\n\n  @Prop({ type: String, required: true })\n  percelType: string;\n\n  @Prop({ type: String, default: 0 })\n  percelWeight: string;\n\n  @Prop({ type: String, required: true })\n  paymentMethode: string;\n\n  @Prop({ type: String, default: 'pending' })\n  status: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User', required: true })\n  sendingAgent: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  recivingAgent: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  driver: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Availability' })\n  availability: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Sacco' })\n  sacco: Types.ObjectId;\n\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: 'Station',\n    required: true,\n  })\n  sendingStation: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Station' })\n  recivingStation: Types.ObjectId;\n\n  @Prop({ type: Date })\n  pickedUpAt: Date;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  pickupAgent: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  updatedBy: Types.ObjectId;\n}\n\nexport const PercelSchema = SchemaFactory.createForClass(Percel);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PercelController.html":{"url":"controllers/PercelController.html","title":"controller - PercelController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PercelController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percel/percel.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                percels\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                sendPercel\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: any, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/percel/percel.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        sendPercel\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPercel(createPercelDto: CreatePercelDto, agent: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send')\n                \n            \n\n            \n                \n                    Defined in src/percel/percel.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPercelDto\n                                    \n                                                CreatePercelDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    agent\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePercelDto: UpdatePercelDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('upadate/:id')\n                \n            \n\n            \n                \n                    Defined in src/percel/percel.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePercelDto\n                                    \n                                                UpdatePercelDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from \"@nestjs/common\";\nimport { PercelService } from \"./percel.service\";\nimport { CreatePercelDto } from \"./dto/create-percel.dto\";\nimport { UpdatePercelDto } from \"./dto/update-percel.dto\";\nimport { JwtGuard } from \"src/auth/guards/jwt.guard\";\nimport { CurrentUser } from \"src/common/decorators/current-user.decorator\";\nimport { JwtPayload } from \"src/types/jwt-payload\";\n\n@UseGuards(JwtGuard)\n@Controller(\"percels\")\nexport class PercelController {\n  constructor(private readonly percelService: PercelService) {}\n\n  @Post(\"send\")\n  sendPercel(\n    @Body() createPercelDto: CreatePercelDto,\n    @CurrentUser() agent: JwtPayload\n  ) {\n    return this.percelService.sendPercel(createPercelDto, agent);\n  }\n\n  @Get()\n  findAll(@Query() query: any, @CurrentUser() user: JwtPayload) {\n    return this.percelService.findAll(user, query);\n  }\n\n  @Patch(\"upadate/:id\")\n  update(\n    @Param(\"id\") id: string,\n    @Body() updatePercelDto: UpdatePercelDto,\n    @CurrentUser() user: JwtPayload\n  ) {\n    return this.percelService.update(user, id, updatePercelDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PercelModule.html":{"url":"modules/PercelModule.html","title":"module - PercelModule","body":"\n                   \n\n\n\n\n    Modules\n    PercelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PercelModule\n\n\n\ncluster_PercelModule_providers\n\n\n\n\nPercelService\n\nPercelService\n\n\n\nPercelModule\n\nPercelModule\n\nPercelModule -->\n\nPercelService->PercelModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/percel/percel.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PercelService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PercelController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PercelService } from './percel.service';\nimport { PercelController } from './percel.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AvailabilitySchema } from 'src/availabilities/schema/availability.schema';\nimport { Availability } from 'src/schemas/Availability';\nimport {\n  Station,\n  StationSchema,\n} from 'src/stations/schema/station.schema';\nimport { Percel, PercelSchema } from './schema/percel.schema';\n\n@Module({\n  controllers: [PercelController],\n  providers: [PercelService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Availability.name, schema: AvailabilitySchema },\n      { name: Station.name, schema: StationSchema },\n      { name: Percel.name, schema: PercelSchema },\n    ]),\n  ],\n})\nexport class PercelModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PercelService.html":{"url":"injectables/PercelService.html","title":"injectable - PercelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PercelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percel/percel.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                sendPercel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(percelModel: Model, availabilityModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/percel/percel.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        percelModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        availabilityModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: JwtPayload, query: any)\n                \n            \n\n\n            \n                \n                    Defined in src/percel/percel.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendPercel\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPercel(createPercelDto: CreatePercelDto, agent: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/percel/percel.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPercelDto\n                                    \n                                                CreatePercelDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    agent\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: JwtPayload, id: string, updatePercelDto: UpdatePercelDto)\n                \n            \n\n\n            \n                \n                    Defined in src/percel/percel.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePercelDto\n                                    \n                                                UpdatePercelDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreatePercelDto } from './dto/create-percel.dto';\nimport { UpdatePercelDto } from './dto/update-percel.dto';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { Model } from 'mongoose';\nimport { Percel, PercelDocument } from './schema/percel.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Availability, AvailabilityDocument } from 'src/schemas/Availability';\n\n@Injectable()\nexport class PercelService {\n  constructor(\n    @InjectModel(Percel.name)\n    private readonly percelModel: Model,\n    @InjectModel(Availability.name)\n    private readonly availabilityModel: Model,\n  ) {}\n  async sendPercel(createPercelDto: CreatePercelDto, agent: JwtPayload) {\n    try {\n      if (agent.station) {\n        await this.percelModel.create({\n          ...createPercelDto,\n          sendingAgent: agent._id,\n          sendingStation: agent.station,\n          status: 'awaiting transit',\n          sacco: agent.sacco,\n        });\n\n        throw new HttpException('Percel sent successfully', HttpStatus.CREATED);\n      } else {\n        throw new HttpException(\n          'Only station managers and station agents with permission to add availabilities can add availabilities',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  findAll(user: JwtPayload, query: any) {\n    try {\n      if (\n        user.role === 'Super User' ||\n        user.role === 'admin' ||\n        user.role === 'general admin'\n      ) {\n        return this.percelModel.find({ ...query, sacco: user.sacco });\n      }\n      if (user.role === 'station manager') {\n        return this.percelModel\n          .find({ ...query })\n          .or([\n            { sendingStation: user.station },\n            { recivingStation: user.station },\n          ])\n          .populate('sendingAgent', 'firstName secondName photoURL ')\n          .populate('recivingAgent', 'firstName secondName photoURL ')\n          .populate('sendingStation', 'firstName secondName photoURL');\n      }\n      if (user.role === 'station agent') {\n        return this.percelModel\n          .find({ ...query })\n          .or([\n            { sendingAgent: user._id },\n            { pickupAgent: user._id },\n            { recivingAgent: user._id },\n          ])\n          .populate('sendingStation');\n      }\n\n      throw new HttpException(\n        'You are not authorized to perform this action',\n        HttpStatus.FORBIDDEN,\n      );\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  update(user: JwtPayload, id: string, updatePercelDto: UpdatePercelDto) {\n    try {\n      return this.percelModel.findByIdAndUpdate(\n        id,\n        {\n          ...updatePercelDto,\n          updatedAt: new Date(),\n          updatedBy: user._id,\n        },\n        { new: true },\n      );\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/permission.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                canAddAgents\n                            \n                            \n                                    Optional\n                                canAddAvailabilities\n                            \n                            \n                                    Optional\n                                canAddRoutes\n                            \n                            \n                                    Optional\n                                canAddSaccos\n                            \n                            \n                                    Optional\n                                canAddStations\n                            \n                            \n                                    Optional\n                                canAddTrips\n                            \n                            \n                                    Optional\n                                canAddUsers\n                            \n                            \n                                    Optional\n                                canAddVehicles\n                            \n                            \n                                    Optional\n                                canAddVehicleToStation\n                            \n                            \n                                    Optional\n                                canBookSeats\n                            \n                            \n                                    Optional\n                                canChangeStationSettings\n                            \n                            \n                                    Optional\n                                canDeleteAvailabilities\n                            \n                            \n                                    Optional\n                                canDeleteUser\n                            \n                            \n                                    Optional\n                                canUpdateAvailabilities\n                            \n                            \n                                    Optional\n                                canViewAgentsBookings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canAddAgents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canAddAvailabilities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canAddRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canAddSaccos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canAddStations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canAddTrips\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canAddUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canAddVehicles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canAddVehicleToStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canBookSeats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canChangeStationSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canDeleteAvailabilities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canDeleteUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canUpdateAvailabilities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        canViewAgentsBookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/types/permission.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Permission {\n  canBookSeats?: boolean;\n  canAddAvailabilities?: boolean;\n  canUpdateAvailabilities?: boolean;\n  canDeleteAvailabilities?: boolean;\n  canDeleteUser?: boolean;\n  canViewAgentsBookings?: boolean;\n  canChangeStationSettings?: boolean;\n  canAddUsers?: boolean;\n  canAddVehicles?: boolean;\n  canAddSaccos?: boolean;\n  canAddStations?: boolean;\n  canAddAgents?: boolean;\n  canAddRoutes?: boolean;\n  canAddTrips?: boolean;\n  canAddVehicleToStation?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Presence.html":{"url":"classes/Presence.html","title":"class - Presence","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Presence\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/presence/entities/presence.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Presence {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PresenceGateway.html":{"url":"classes/PresenceGateway.html","title":"class - PresenceGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PresenceGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/presence/presence.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                joinRoom\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(presenceService: PresenceService)\n                    \n                \n                        \n                            \n                                Defined in src/presence/presence.gateway.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        presenceService\n                                                  \n                                                        \n                                                                        PresenceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/presence/presence.gateway.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        joinRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    joinRoom(user: literal type, client: Socket)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('onlineStatus')\n                \n            \n\n            \n                \n                    Defined in src/presence/presence.gateway.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/presence/presence.gateway.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  SubscribeMessage,\n  MessageBody,\n  WebSocketServer,\n  ConnectedSocket,\n} from '@nestjs/websockets';\nimport { PresenceService } from './presence.service';\nimport { CreatePresenceDto } from './dto/create-presence.dto';\nimport { UpdatePresenceDto } from './dto/update-presence.dto';\nimport { Server, Socket } from 'socket.io';\n\n@WebSocketGateway()\nexport class PresenceGateway {\n  constructor(private readonly presenceService: PresenceService) {}\n\n  @WebSocketServer()\n  server: Server;\n\n  onModuleInit() {\n    this.server.on('connection', (socket) => {\n      console.log('Namespace: ' + socket.nsp.name);\n      console.log('Socket ID: ' + socket.id);\n    });\n  }\n\n  @SubscribeMessage('onlineStatus')\n  joinRoom(\n    @MessageBody() user: { _id: string },\n    @ConnectedSocket() client: Socket,\n  ) {\n    return this.presenceService.joinRoom(user, client);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PresenceModule.html":{"url":"modules/PresenceModule.html","title":"module - PresenceModule","body":"\n                   \n\n\n\n\n    Modules\n    PresenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PresenceModule\n\n\n\ncluster_PresenceModule_providers\n\n\n\n\nPresenceService\n\nPresenceService\n\n\n\nPresenceModule\n\nPresenceModule\n\nPresenceModule -->\n\nPresenceService->PresenceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/presence/presence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PresenceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PresenceService } from './presence.service';\nimport { PresenceGateway } from './presence.gateway';\n\n@Module({\n  providers: [PresenceGateway, PresenceService]\n})\nexport class PresenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PresenceService.html":{"url":"injectables/PresenceService.html","title":"injectable - PresenceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PresenceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/presence/presence.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                joinRoom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        joinRoom\n                        \n                    \n                \n            \n            \n                \njoinRoom(user: literal type, client: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/presence/presence.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Socket } from 'socket.io';\n\n@Injectable()\nexport class PresenceService {\n  joinRoom(user: { _id: string }, client: Socket) {\n    // TODO: implement precence here\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateProfileDto: UpdateProfileDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('update-profile')\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateProfileDto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Body, Patch, UseGuards } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { JwtPayload } from 'src/types/jwt-payload';\n\n@UseGuards(JwtGuard)\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  @Get()\n  findOne(@CurrentUser() id: JwtPayload) {\n    return this.profileService.myProfile(id);\n  }\n\n  @Patch('update-profile')\n  update(\n    @Body() updateProfileDto: UpdateProfileDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.profileService.update(updateProfileDto, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nProfileService\n\nProfileService\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { ProfileController } from './profile.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  User,\n  UserSchema,\n} from 'src/users/schema/user.schema';\n\n@Module({\n  controllers: [ProfileController],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n    ]),\n  ],\n  providers: [ProfileService],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                myProfile\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        myProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    myProfile(user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateProfileDto: UpdateProfileDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateProfileDto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User, UserDocument } from 'src/users/schema/user.schema';\nimport { ObjectId } from 'mongodb';\n\n@Injectable()\nexport class ProfileService {\n  constructor(\n    @InjectModel(User.name)\n    private userModel: Model,\n  ) {}\n\n  async myProfile(user: JwtPayload) {\n    try {\n      if (user.station) {\n        return await this.userModel\n          .findById(user._id)\n          .populate('sacco', '-__v')\n          .populate('station', '-__v')\n          .select('-__v');\n      }\n      if (user.vehicle) {\n        return await this.userModel\n          .findById(user._id)\n          .populate('sacco', '-__v')\n          .populate('vehicle', '-__v')\n          .select('-__v');\n      }\n      return await this.userModel\n        .findById(user._id)\n        .populate('sacco', '-__v')\n        .select('-__v');\n    } catch (error) {\n      throw new HttpException(error, error.status);\n    }\n  }\n\n  async update(updateProfileDto: UpdateProfileDto, user: JwtPayload) {\n    try {\n      await this.userModel.findByIdAndUpdate(user._id, { ...updateProfileDto });\n      throw new HttpException('Profile updated successfully', HttpStatus.OK);\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshStrategy.html":{"url":"injectables/RefreshStrategy.html","title":"injectable - RefreshStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/refresh.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/refresh.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(req: Request, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/refresh.strategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class RefreshStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh',\n) {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest:\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get(\n        'REFRESH_TOKEN_SECRET',\n      ),\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(req: Request, payload: any) {\n    const refreshToken = req\n      .get('Authorization')\n      .replace('Bearer ', '')\n      .trim();\n    return { payload, refreshToken };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Route.html":{"url":"classes/Route.html","title":"class - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routes/schema/route.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addedBy\n                            \n                            \n                                    \n                                destinations\n                            \n                            \n                                    \n                                prices\n                            \n                            \n                                    \n                                sacco\n                            \n                            \n                                    \n                                station\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routes/schema/route.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        destinations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routes/schema/route.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routes/schema/route.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sacco\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Sacco'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routes/schema/route.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        station\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Station'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routes/schema/route.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routes/schema/route.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routes/schema/route.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\n\nexport type RouteDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Route {\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Station' })\n  station: Types.ObjectId;\n\n  @Prop({ type: Array, default: [] })\n  destinations: Array;\n\n  @Prop({ type: Array, default: [] })\n  prices: [];\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Sacco' })\n  sacco: Types.ObjectId;\n\n  @Prop({ type: String, default: 'active' })\n  status: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  addedBy: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  updatedBy: Types.ObjectId;\n}\n\nexport const RouteSchema = SchemaFactory.createForClass(Route);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoutesController.html":{"url":"controllers/RoutesController.html","title":"controller - RoutesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoutesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routes/routes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                routes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRouteDto: CreateRouteDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add-route')\n                \n            \n\n            \n                \n                    Defined in src/routes/routes.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRouteDto\n                                    \n                                                CreateRouteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: any, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/routes/routes.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('route/:id')\n                \n            \n\n            \n                \n                    Defined in src/routes/routes.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete-route/:id')\n                \n            \n\n            \n                \n                    Defined in src/routes/routes.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateRouteDto: UpdateRouteDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('update-route/:id')\n                \n            \n\n            \n                \n                    Defined in src/routes/routes.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRouteDto\n                                    \n                                                UpdateRouteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { RoutesService } from './routes.service';\nimport { CreateRouteDto } from './dto/create-route.dto';\nimport { UpdateRouteDto } from './dto/update-route.dto';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { JwtPayload } from 'src/types/jwt-payload';\n\n@UseGuards(JwtGuard)\n@Controller('routes')\nexport class RoutesController {\n  constructor(private readonly routesService: RoutesService) {}\n\n  @Post('add-route')\n  create(\n    @Body() createRouteDto: CreateRouteDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.routesService.create(createRouteDto, user);\n  }\n\n  @Get()\n  findAll(@Query() query: any, @CurrentUser() user: JwtPayload) {\n    return this.routesService.findAll(query, user);\n  }\n\n  @Get('route/:id')\n  findOne(@Param('id') id: string) {\n    return this.routesService.findOne(+id);\n  }\n\n  @Patch('update-route/:id')\n  update(\n    @Param('id') id: string,\n    @Body() updateRouteDto: UpdateRouteDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.routesService.update(id, updateRouteDto, user);\n  }\n\n  @Delete('delete-route/:id')\n  remove(@Param('id') id: string, @CurrentUser() user: JwtPayload) {\n    return this.routesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutesModule.html":{"url":"modules/RoutesModule.html","title":"module - RoutesModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesModule_providers\n\n\n\n\nRoutesService\n\nRoutesService\n\n\n\nRoutesModule\n\nRoutesModule\n\nRoutesModule -->\n\nRoutesService->RoutesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/routes/routes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoutesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoutesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoutesService } from './routes.service';\nimport { RoutesController } from './routes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Route, RouteSchema } from './schema/route.schema';\n\n@Module({\n  controllers: [RoutesController],\n  providers: [RoutesService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Route.name, schema: RouteSchema },\n    ]),\n  ],\n})\nexport class RoutesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutesService.html":{"url":"injectables/RoutesService.html","title":"injectable - RoutesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoutesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routes/routes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routeModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/routes/routes.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routeModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createRouteDto: CreateRouteDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/routes/routes.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRouteDto\n                                    \n                                                CreateRouteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(query: any, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/routes/routes.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/routes/routes.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(_id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/routes/routes.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateRouteDto: UpdateRouteDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/routes/routes.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRouteDto\n                                    \n                                                UpdateRouteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateRouteDto } from './dto/create-route.dto';\nimport { UpdateRouteDto } from './dto/update-route.dto';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Route, RouteDocument } from './schema/route.schema';\n\n@Injectable()\nexport class RoutesService {\n  constructor(\n    @InjectModel(Route.name)\n    private readonly routeModel: Model,\n  ) {}\n\n  create(createRouteDto: CreateRouteDto, user: JwtPayload) {\n    try {\n      if (\n        user.role === 'Super User' ||\n        user.role === 'station manager' ||\n        user.role === 'admin' ||\n        user.role === 'general admin'\n      ) {\n        return this.routeModel.create({\n          ...createRouteDto,\n          sacco: user.sacco,\n          station: user.station,\n          addedBy: user._id,\n        });\n      }\n\n      throw new HttpException(\n        'Only station managers and station agents with permission to add availabilities can add availabilities',\n        HttpStatus.FORBIDDEN,\n      );\n    } catch (error) {\n      console.log(error);\n\n      throw new HttpException(\n        error.message || 'Something went wrong',\n        error.status || HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  findAll(query: any, user: JwtPayload) {\n    try {\n      if (user.role === 'admin' || user.role === 'general admin') {\n        return this.routeModel.find({\n          ...query,\n          sacco: user.sacco,\n        });\n      }\n      return this.routeModel.find({\n        ...query,\n        station: user.station,\n      });\n    } catch (error) {\n      throw new HttpException(\n        error.message || 'Something went wrong',\n        error.status || HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} route`;\n  }\n\n  update(id: string, updateRouteDto: UpdateRouteDto, user: JwtPayload) {\n    try {\n      if (\n        user.role === 'Super User' ||\n        user.role === 'station manager' ||\n        user.role === 'admin' ||\n        user.role === 'general admin'\n      ) {\n        return this.routeModel.updateOne(\n          {\n            _id: id,\n          },\n          {\n            ...updateRouteDto,\n            updatedBy: user._id,\n            updatedAt: new Date(),\n          },\n          {\n            new: true,\n          },\n        );\n      }\n\n      throw new HttpException(\n        'You do not have permission to update routes',\n        HttpStatus.FORBIDDEN,\n      );\n    } catch (error) {\n      throw new HttpException(\n        error.message || 'Something went wrong',\n        error.status || HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  remove(_id: string, user: JwtPayload) {\n    try {\n      if (\n        user.role === 'Super User' ||\n        user.role === 'station manager' ||\n        user.role === 'admin' ||\n        user.role === 'general admin'\n      ) {\n        return this.routeModel.deleteOne({\n          _id,\n        });\n      }\n\n      throw new HttpException(\n        'Only station managers can delete routes',\n        HttpStatus.FORBIDDEN,\n      );\n    } catch (error) {\n      throw new HttpException(\n        error.message || 'Something went wrong',\n        error.status || HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sacco.html":{"url":"classes/Sacco.html","title":"class - Sacco","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sacco\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/saccos/schema/sacco.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addedBy\n                            \n                            \n                                    \n                                addedOn\n                            \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                primaryColor\n                            \n                            \n                                    \n                                secondaryColor\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                upadatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, immutable: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: () => , immutable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        secondaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upadatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/saccos/schema/sacco.schema.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsEmail } from 'class-validator';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\n\nexport type SaccoDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Sacco {\n  @Prop({ required: true })\n  name: string;\n\n  @IsEmail()\n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true })\n  phone: string;\n\n  @Prop({ required: true })\n  address: string;\n\n  @Prop({ required: true })\n  logo: string;\n\n  @Prop({ required: false })\n  primaryColor: string;\n\n  @Prop({ required: false })\n  secondaryColor: string;\n\n  @Prop({ required: false, default: 'active' })\n  status: string;\n\n  @Prop({\n    required: false,\n    default: () => Date.now(),\n    immutable: true,\n  })\n  addedOn: Date;\n\n  @Prop({\n    required: false,\n    immutable: true,\n    type: SchemaTypes.ObjectId,\n  })\n  addedBy: Types.ObjectId;\n\n  @Prop({ required: false })\n  upadatedAt: Date;\n\n  @Prop({\n    required: false,\n    type: SchemaTypes.ObjectId,\n  })\n  updatedBy: Types.ObjectId | string;\n}\n\nexport const SaccoSchema = SchemaFactory.createForClass(Sacco);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SaccosController.html":{"url":"controllers/SaccosController.html","title":"controller - SaccosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SaccosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/saccos/saccos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                saccos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSaccoDto: CreateSaccoDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/saccos/saccos.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSaccoDto\n                                    \n                                                CreateSaccoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/saccos/saccos.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/saccos/saccos.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete-sacco/:id')\n                \n            \n\n            \n                \n                    Defined in src/saccos/saccos.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateSaccoDto: UpdateSaccoDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('update-sacco/:id')\n                \n            \n\n            \n                \n                    Defined in src/saccos/saccos.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSaccoDto\n                                    \n                                                UpdateSaccoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { SaccosService } from './saccos.service';\nimport { CreateSaccoDto } from './dto/create-sacco.dto';\nimport { UpdateSaccoDto } from './dto/update-sacco.dto';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { JwtPayload } from 'src/types/jwt-payload';\n\n@UseGuards(JwtGuard)\n@Controller('saccos')\nexport class SaccosController {\n  constructor(private readonly saccosService: SaccosService) {}\n\n  @Post()\n  create(\n    @Body() createSaccoDto: CreateSaccoDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.saccosService.create(createSaccoDto, user);\n  }\n\n  @Get()\n  findAll(@CurrentUser() user: JwtPayload) {\n    return this.saccosService.findAll(user);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string, @CurrentUser() user: JwtPayload) {\n    return this.saccosService.findOne(id, user);\n  }\n\n  @Patch('update-sacco/:id')\n  update(\n    @Param('id') id: string,\n    @Body() updateSaccoDto: UpdateSaccoDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.saccosService.updateSacco(id, updateSaccoDto, user);\n  }\n\n  @Delete('delete-sacco/:id')\n  remove(@Param('id') id: string, @CurrentUser() user: JwtPayload) {\n    return this.saccosService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SaccosModule.html":{"url":"modules/SaccosModule.html","title":"module - SaccosModule","body":"\n                   \n\n\n\n\n    Modules\n    SaccosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SaccosModule\n\n\n\ncluster_SaccosModule_providers\n\n\n\n\nSaccosService\n\nSaccosService\n\n\n\nSaccosModule\n\nSaccosModule\n\nSaccosModule -->\n\nSaccosService->SaccosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/saccos/saccos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SaccosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SaccosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SaccosService } from './saccos.service';\nimport { SaccosController } from './saccos.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  Sacco,\n  SaccoSchema,\n} from './schema/sacco.schema';\n\n@Module({\n  controllers: [SaccosController],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Sacco.name, schema: SaccoSchema },\n    ]),\n  ],\n  providers: [SaccosService],\n})\nexport class SaccosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaccosService.html":{"url":"injectables/SaccosService.html","title":"injectable - SaccosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SaccosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/saccos/saccos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                updateSacco\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(saccoModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/saccos/saccos.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        saccoModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSaccoDto: CreateSaccoDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/saccos/saccos.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSaccoDto\n                                    \n                                                CreateSaccoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/saccos/saccos.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/saccos/saccos.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/saccos/saccos.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSacco\n                        \n                    \n                \n            \n            \n                \nupdateSacco(id: string, updateSaccoDto: UpdateSaccoDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/saccos/saccos.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSaccoDto\n                                    \n                                                UpdateSaccoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateSaccoDto } from './dto/create-sacco.dto';\nimport { UpdateSaccoDto } from './dto/update-sacco.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Sacco, SaccoDocument } from './schema/sacco.schema';\nimport { Model } from 'mongoose';\nimport { JwtPayload } from 'src/types/jwt-payload';\n\n@Injectable()\nexport class SaccosService {\n  constructor(\n    @InjectModel(Sacco.name) private readonly saccoModel: Model,\n  ) {}\n\n  async create(createSaccoDto: CreateSaccoDto, user: JwtPayload) {\n    if (user.role === 'Super User') {\n      const exists = await this.saccoModel.exists({\n        name: createSaccoDto.name,\n      });\n      if (exists) {\n        throw new HttpException(\n          `Sacco with name ${createSaccoDto.name} already exists`,\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n      await this.saccoModel.create({\n        ...createSaccoDto,\n        createdBy: user._id,\n        updatedBy: user._id,\n      });\n      throw new HttpException('Sacco created successfully', HttpStatus.CREATED);\n    }\n    throw new HttpException(\n      'You are not allowed to create a sacco',\n      HttpStatus.FORBIDDEN,\n    );\n  }\n\n  findAll(user: JwtPayload) {\n    if (user.role === 'Super User') {\n      return this.saccoModel.find().select('-__v');\n    }\n    throw new HttpException(\n      'You are not allowed to get all saccos',\n      HttpStatus.FORBIDDEN,\n    );\n  }\n\n  findOne(id: string, user: JwtPayload) {\n    if (user.role === 'Super User' || user.sacco === id) {\n      return this.saccoModel.findById(id).select('-__v');\n    }\n    throw new HttpException(\n      `You are not allowed to see Details of the selected  ${id} sacco`,\n      HttpStatus.FORBIDDEN,\n    );\n  }\n\n  updateSacco(id: string, updateSaccoDto: UpdateSaccoDto, user: JwtPayload) {\n    if (user.role === 'Super User' || user.role === 'general admin') {\n      return this.saccoModel.findByIdAndUpdate(id, {\n        ...updateSaccoDto,\n        updatedBy: user._id,\n        updatedAt: new Date(),\n      });\n    }\n    throw new HttpException(\n      'You are not allowed to update a sacco',\n      HttpStatus.FORBIDDEN,\n    );\n  }\n\n  remove(id: string, user: JwtPayload) {\n    return `This action removes a #${id} sacco`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Station.html":{"url":"classes/Station.html","title":"class - Station","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Station\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stations/schema/station.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addedBy\n                            \n                            \n                                    \n                                addedOn\n                            \n                            \n                                    \n                                destinations\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                photoURL\n                            \n                            \n                                    \n                                sacco\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                street\n                            \n                            \n                                    \n                                upadatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, immutable: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: () => , immutable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        destinations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        photoURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sacco\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upadatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stations/schema/station.schema.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsEmail } from 'class-validator';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\n\nexport type StationDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Station {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  street: string;\n\n  @Prop({ required: true })\n  location: string;\n\n  @Prop({ required: true })\n  phone: string;\n\n  @IsEmail()\n  @Prop({ required: false })\n  email: string;\n\n  @Prop({ required: false })\n  photoURL: string;\n\n  @Prop({ required: false, default: [] })\n  destinations: Array;\n\n  @Prop({\n    required: true,\n    type: SchemaTypes.ObjectId,\n  })\n  sacco: Types.ObjectId;\n\n  @Prop({ required: true, default: 'active' })\n  status: string;\n\n  @Prop({\n    required: false,\n    default: () => Date.now(),\n    immutable: true,\n  })\n  addedOn: Date;\n\n  @Prop({\n    required: false,\n    immutable: true,\n    type: SchemaTypes.ObjectId,\n  })\n  addedBy: Types.ObjectId;\n\n  @Prop({ required: false })\n  upadatedAt: Date;\n\n  @Prop({\n    required: false,\n    type: SchemaTypes.ObjectId,\n  })\n  updatedBy: Types.ObjectId | string;\n}\n\nexport const StationSchema = SchemaFactory.createForClass(Station);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StationsController.html":{"url":"controllers/StationsController.html","title":"controller - StationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stations/stations.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stations\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneStation\n                            \n                            \n                                    \n                                myStation\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createStationDto: CreateStationDto, currentUser: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add-station')\n                \n            \n\n            \n                \n                    Defined in src/stations/stations.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createStationDto\n                                    \n                                                CreateStationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/stations/stations.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOneStation\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneStation(currentUser: JwtPayload, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/stations/stations.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        myStation\n                        \n                    \n                \n            \n            \n                \n                    \n                    myStation(stationID: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('my-station')\n                \n            \n\n            \n                \n                    Defined in src/stations/stations.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stationID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, currentUser: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete-station/:id')\n                \n            \n\n            \n                \n                    Defined in src/stations/stations.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateStationDto: UpdateStationDto, currentUser: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('update-station/:id')\n                \n            \n\n            \n                \n                    Defined in src/stations/stations.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateStationDto\n                                    \n                                                UpdateStationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { StationsService } from './stations.service';\nimport { CreateStationDto } from './dto/create-station.dto';\nimport { UpdateStationDto } from './dto/update-station.dto';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { JwtPayload } from 'src/types/jwt-payload';\n\n@UseGuards(JwtGuard)\n@Controller('stations')\nexport class StationsController {\n  constructor(private readonly stationsService: StationsService) {}\n\n  @Post('add-station')\n  create(\n    @Body() createStationDto: CreateStationDto,\n    @CurrentUser() currentUser: JwtPayload,\n  ) {\n    return this.stationsService.createSacco(createStationDto, currentUser);\n  }\n\n  @Get()\n  findAll(@CurrentUser() currentUser: JwtPayload) {\n    return this.stationsService.findAll(currentUser);\n  }\n\n  @Get('my-station')\n  myStation(@CurrentUser('station') stationID: string) {\n    return this.stationsService.myStation(stationID);\n  }\n\n  @Get(':id')\n  findOneStation(\n    @CurrentUser() currentUser: JwtPayload,\n    @Param('id') id: string,\n  ) {\n    return this.stationsService.findOneStation(currentUser, id);\n  }\n\n  @Patch('update-station/:id')\n  update(\n    @Param('id') id: string,\n    @Body() updateStationDto: UpdateStationDto,\n    @CurrentUser() currentUser: JwtPayload,\n  ) {\n    return this.stationsService.updateStation(\n      currentUser,\n      updateStationDto,\n      id,\n    );\n  }\n\n  @Delete('delete-station/:id')\n  remove(@Param('id') id: string, @CurrentUser() currentUser: JwtPayload) {\n    return this.stationsService.remove(id, currentUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StationsModule.html":{"url":"modules/StationsModule.html","title":"module - StationsModule","body":"\n                   \n\n\n\n\n    Modules\n    StationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StationsModule\n\n\n\ncluster_StationsModule_providers\n\n\n\n\nStationsService\n\nStationsService\n\n\n\nStationsModule\n\nStationsModule\n\nStationsModule -->\n\nStationsService->StationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stations/stations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StationsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StationsService } from './stations.service';\nimport { StationsController } from './stations.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  Station,\n  StationSchema,\n} from './schema/station.schema';\n\n@Module({\n  controllers: [StationsController],\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Station.name,\n        schema: StationSchema,\n      },\n    ]),\n  ],\n  providers: [StationsService],\n})\nexport class StationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StationsService.html":{"url":"injectables/StationsService.html","title":"injectable - StationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stations/stations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSacco\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOneStation\n                            \n                            \n                                    Async\n                                myStation\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                updateStation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/stations/stations.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSacco\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSacco(createStationDto: CreateStationDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/stations/stations.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createStationDto\n                                    \n                                                CreateStationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/stations/stations.service.ts:70\n                \n            \n\n\n            \n                \n                    Get All Stations\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneStation\n                        \n                    \n                \n            \n            \n                \nfindOneStation(user: JwtPayload, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stations/stations.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        myStation\n                        \n                    \n                \n            \n            \n                \n                    \n                    myStation(userStationID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stations/stations.service.ts:105\n                \n            \n\n\n            \n                \n                    Get current Users Station\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userStationID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/stations/stations.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateStation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStation(user: JwtPayload, updateStationDto: UpdateStationDto, stationID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stations/stations.service.ts:126\n                \n            \n\n\n            \n                \n                    Update Station\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateStationDto\n                                    \n                                                UpdateStationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    stationID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateStationDto } from './dto/create-station.dto';\nimport { UpdateStationDto } from './dto/update-station.dto';\nimport { Station, StationDocument } from './schema/station.schema';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { JwtPayload } from 'src/types/jwt-payload';\n\n@Injectable()\nexport class StationsService {\n  constructor(\n    @InjectModel(Station.name)\n    private readonly stationModel: Model,\n  ) {}\n\n  findOneStation(user: JwtPayload, id: string) {\n    switch (user.role) {\n      case 'Super User':\n        return this.stationModel.findById(id);\n\n      case 'general admin':\n        return this.stationModel.findOne({\n          _id: id,\n          sacco: user.sacco,\n        });\n      \n        case 'admin' :\n        return this.stationModel.findOne({\n          _id: id,\n          sacco: user.sacco,\n        });\n\n      default:\n        throw new HttpException(\n          'You are not allowed to perform this action',\n          HttpStatus.FORBIDDEN,\n        );\n    }\n  }\n\n  async createSacco(createStationDto: CreateStationDto, user: JwtPayload) {\n    if (\n      user.role == 'Super User' ||\n      user.role === 'admin' ||\n      user.role === 'general admin'\n    ) {\n      try {\n        await this.stationModel.create({\n          ...createStationDto,\n          sacco: user.sacco,\n          addedBy: user._id,\n        });\n\n        return {\n          message: 'Station created successfully',\n        };\n      } catch (error) {\n        throw new HttpException(error.message, error.status);\n      }\n    }\n    return 'This action adds a new station';\n  }\n\n  /**\n   * ### Get All Stations\n   * @param user\n   * @returns Promise\n   *  */\n\n  async findAll(user: JwtPayload) {\n    try {\n      switch (user.role) {\n        case 'Super User':\n          return await this.stationModel\n            .find()\n            .select('_id name location street');\n        case  'general admin':\n          return await this.stationModel.find({\n            sacco: user.sacco,\n          });\n      \n       case 'admin' :\n          return await this.stationModel.find({\n            sacco: user.sacco,\n          });\n        default:\n          return await this.stationModel\n            .find({\n              sacco: user.sacco,\n            })\n            .select('_id name location street');\n      }\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  /**\n   *\n   * ### Get current Users Station\n   * @param userStationID\n   *\n   * @returns Promise\n   */\n  async myStation(userStationID: string) {\n    const station = await this.stationModel.findById(userStationID);\n    if (!station) {\n      throw new HttpException(\n        'You are not assigned to any station',\n        HttpStatus.NOT_FOUND,\n      );\n    }\n    return station;\n  }\n\n  /**\n   *\n   * ### Update Station\n   * @param user\n   * @param updateStationDto\n   * @param stationID\n   *\n   * @returns Promise\n   *\n   * */\n  async updateStation(\n    user: JwtPayload,\n    updateStationDto: UpdateStationDto,\n    stationID: string,\n  ) {\n    if (\n      user.role == 'Super User' ||\n      user.role === 'admin' ||\n      user.role === 'general admin' ||\n      user.role === 'station manager'\n    ) {\n      await this.stationModel.findByIdAndUpdate(stationID, {\n        ...updateStationDto,\n        updatedBy: user._id,\n        updatedAt: Date.now(),\n      });\n\n      HttpStatus.OK;\n      return {\n        message: 'Station updated successfully',\n      };\n    } else {\n      throw new HttpException(\n        'You are not allowed to perform this action',\n        HttpStatus.FORBIDDEN,\n      );\n    }\n  }\n\n  async remove(id: string, user: JwtPayload) {\n    try {\n      if (user.role === 'Super User') {\n        await this.stationModel.findByIdAndDelete(id);\n      }\n      if (user.role === 'admin' || user.role === 'general admin') {\n        await this.stationModel.findOneAndDelete({\n          _id: id,\n          sacco: user.sacco,\n        });\n      } else {\n        throw new HttpException(\n          'You are not allowed to perform this action',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n      throw new HttpException('Station deleted successfully', HttpStatus.OK);\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StkInitResponce.html":{"url":"classes/StkInitResponce.html","title":"class - StkInitResponce","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StkInitResponce\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lipa-na-mpesa/types/stk-init-reponce.type.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CheckoutRequestID\n                            \n                            \n                                CustomerMessage\n                            \n                            \n                                MerchantRequestID\n                            \n                            \n                                ResponseCode\n                            \n                            \n                                ResponseDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CheckoutRequestID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/types/stk-init-reponce.type.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CustomerMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/types/stk-init-reponce.type.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MerchantRequestID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/types/stk-init-reponce.type.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/types/stk-init-reponce.type.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lipa-na-mpesa/types/stk-init-reponce.type.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class StkInitResponce {\n  MerchantRequestID: string;\n  CheckoutRequestID: string;\n  ResponseCode: string;\n  ResponseDescription: string;\n  CustomerMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ticket.html":{"url":"classes/Ticket.html","title":"class - Ticket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ticket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tickets/schema/tickets.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addedBy\n                            \n                            \n                                    \n                                availability\n                            \n                            \n                                    \n                                bookedSeat\n                            \n                            \n                                    \n                                customerEmail\n                            \n                            \n                                    \n                                customerFirstName\n                            \n                            \n                                    \n                                customerIdNumber\n                            \n                            \n                                    \n                                customerPhone\n                            \n                            \n                                    \n                                customersecondName\n                            \n                            \n                                    \n                                from\n                            \n                            \n                                    \n                                mpesaTrasaction\n                            \n                            \n                                    \n                                paymentMethod\n                            \n                            \n                                    \n                                plateNo\n                            \n                            \n                                    \n                                pricePerSeat\n                            \n                            \n                                    \n                                sacco\n                            \n                            \n                                    \n                                station\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                to\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        availability\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Availability', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookedSeat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customerEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customerFirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customerIdNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customerPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customersecondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mpesaTrasaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paymentMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, default: 'Cash'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        plateNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pricePerSeat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sacco\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Sacco', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        station\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Station', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/schema/tickets.schema.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\n\nexport type TicketDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Ticket {\n  @Prop({ type: String, required: true })\n  bookedSeat: string;\n\n  @Prop({ type: Number, required: true })\n  pricePerSeat: number;\n\n  @Prop({ type: String, required: true })\n  from: Types.ObjectId;\n\n  @Prop({ type: String, required: true })\n  to: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Station', required: true })\n  station: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Sacco', required: true })\n  sacco: Types.ObjectId;\n\n  @Prop({ type: String, required: true })\n  customerPhone: string;\n\n  @Prop({ type: String, required: true })\n  customerFirstName: string;\n\n  @Prop({ type: String, required: true })\n  customersecondName: string;\n\n  @Prop({ type: String, default: null })\n  customerIdNumber: string;\n\n  @Prop({ type: String, required: false, default: null })\n  customerEmail: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, required: false, default: null })\n  mpesaTrasaction: Types.ObjectId;\n\n  @Prop({ type: String, required: true, default: 'Cash' })\n  paymentMethod: string;\n\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: 'Availability',\n    required: true,\n  })\n  availability: Types.ObjectId;\n\n  @Prop({ type: String, required: true })\n  plateNo: string;\n\n  @Prop({ type: String, required: true })\n  status: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User', required: true })\n  addedBy: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User', required: false })\n  updatedBy: Types.ObjectId;\n}\n\nexport const TicketSchema = SchemaFactory.createForClass(Ticket);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TicketController.html":{"url":"controllers/TicketController.html","title":"controller - TicketController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TicketController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tickets/tickets.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tickets\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTicketDto: CreateTicketDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('book-ticket')\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTicketDto\n                                    \n                                                CreateTicketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete-ticket/:id')\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateTicketDto: UpdateTicketDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('update-ticket/:id')\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTicketDto\n                                    \n                                                UpdateTicketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { TicketService } from './tickets.service';\nimport { CreateTicketDto } from './dto/create-ticket.dto';\nimport { UpdateTicketDto } from './dto/update-ticket.dto';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\n\n@UseGuards(JwtGuard)\n@Controller('tickets')\nexport class TicketController {\n  constructor(private readonly ticketService: TicketService) {}\n\n  @Post('book-ticket')\n  create(\n    @Body() createTicketDto: CreateTicketDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.ticketService.book(createTicketDto, user);\n  }\n\n  @Get()\n  findAll(user: JwtPayload) {\n    return this.ticketService.findAll(user);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.ticketService.findOne(id);\n  }\n\n  @Patch('update-ticket/:id')\n  update(\n    @Param('id') id: string,\n    @Body() updateTicketDto: UpdateTicketDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.ticketService.update(id, updateTicketDto, user);\n  }\n\n  @Delete('delete-ticket/:id')\n  remove(@Param('id') id: string, @CurrentUser() user: JwtPayload) {\n    return this.ticketService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TicketModule.html":{"url":"modules/TicketModule.html","title":"module - TicketModule","body":"\n                   \n\n\n\n\n    Modules\n    TicketModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TicketModule\n\n\n\ncluster_TicketModule_providers\n\n\n\n\nTicketService\n\nTicketService\n\n\n\nTicketModule\n\nTicketModule\n\nTicketModule -->\n\nTicketService->TicketModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tickets/tickets.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TicketService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TicketController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TicketService } from './tickets.service';\nimport { TicketController } from './tickets.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Ticket, TicketSchema } from './schema/tickets.schema';\nimport { AvailabilitySchema } from 'src/availabilities/schema/availability.schema';\nimport { Availability } from 'src/schemas/Availability';\n\n@Module({\n  controllers: [TicketController],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Ticket.name, schema: TicketSchema },\n      { name: Availability.name, schema: AvailabilitySchema },\n    ]),\n  ],\n  providers: [TicketService],\n})\nexport class TicketModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketService.html":{"url":"injectables/TicketService.html","title":"injectable - TicketService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tickets/tickets.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                book\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ticketModel: Model, availabilityModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/tickets/tickets.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ticketModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        availabilityModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        book\n                        \n                    \n                \n            \n            \n                \n                    \n                    book(createTicketDto: CreateTicketDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTicketDto\n                                    \n                                                CreateTicketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTicketDto: UpdateTicketDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTicketDto\n                                    \n                                                UpdateTicketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { CreateTicketDto } from './dto/create-ticket.dto';\nimport { UpdateTicketDto } from './dto/update-ticket.dto';\nimport { Ticket, TicketDocument } from './schema/tickets.schema';\n\nimport { Availability, AvailabilityDocument } from 'src/schemas/Availability';\n\n\n@Injectable()\nexport class TicketService {\n  constructor(\n    @InjectModel(Ticket.name)\n    private readonly ticketModel: Model,\n    @InjectModel(Availability.name)\n    private readonly availabilityModel: Model,\n  ) {}\n\n  async book(createTicketDto: CreateTicketDto, user: JwtPayload) {\n    try {\n\n      if (user.role == 'station agent' || user.role == 'station manager') {\n       const ticket= await this.ticketModel.create({\n\n    \n          ...createTicketDto,\n          station: user.station,\n          sacco: user.sacco,\n          addedBy: user._id,\n        });\n        // update booked seatst on availability\n        const availability = await this.availabilityModel.findByIdAndUpdate(\n          createTicketDto.availability,\n          {\n            $addToSet: { bookedSeats: createTicketDto.bookedSeat },\n          },\n        );\n\n        return ticket;\n      }\n      throw new HttpException(\n        'You are not allowed to book a ticket',\n        HttpStatus.FORBIDDEN,\n      );\n    } catch (error) {\n      throw new HttpException(\n        error.message || 'Server Error',\n        error.status || 500,\n      );\n    }\n  }\n\n  async findAll(user: JwtPayload) {\n    try {\n      return await this.ticketModel\n        .find({\n          sacco: user.sacco,\n        })\n        .select('-__v');\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async findOne(id: string) {\n    try {\n      await this.ticketModel\n        .findById(id)\n        .populate('addedBy', 'firstName secondName')\n        .select('-__v');\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  update(id: string, updateTicketDto: UpdateTicketDto, user: JwtPayload) {\n    return `This action updates a #${id} ticket`;\n  }\n\n  remove(id: string, user: JwtPayload) {\n    return `This action removes a #${id} ticket`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAvailabilityDto.html":{"url":"classes/UpdateAvailabilityDto.html","title":"class - UpdateAvailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAvailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availabilities/dto/update-availability.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                bookedSeats\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookedSeats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availabilities/dto/update-availability.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAvailabilityDto } from './create-availability.dto';\nimport { IsArray } from 'class-validator';\n\nexport class UpdateAvailabilityDto extends PartialType(CreateAvailabilityDto) {\n  @IsArray()\n  bookedSeats: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookingDto.html":{"url":"classes/UpdateBookingDto.html","title":"class - UpdateBookingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/dto/update-booking.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/booking/dto/update-booking.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateBookingDto } from './create-booking.dto';\n\nexport class UpdateBookingDto extends PartialType(CreateBookingDto) {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateChatDto.html":{"url":"classes/UpdateChatDto.html","title":"class - UpdateChatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateChatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/dto/update-chat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/chat/dto/update-chat.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateChatDto } from './create-chat.dto';\n\nexport class UpdateChatDto extends PartialType(CreateChatDto) {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDriverDto.html":{"url":"classes/UpdateDriverDto.html","title":"class - UpdateDriverDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDriverDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicles/dto/update-driver.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                driverID\n                            \n                            \n                                    \n                                    \n                                vehicleID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        driverID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/update-driver.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        vehicleID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/update-driver.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class UpdateDriverDto {\n  @IsNotEmpty()\n  @IsString()\n  driverID: string;\n  @IsNotEmpty()\n  @IsString()\n  vehicleID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNotificationDto.html":{"url":"classes/UpdateNotificationDto.html","title":"class - UpdateNotificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNotificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/dto/update-notification.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/notifications/dto/update-notification.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateNotificationDto } from './create-notification.dto';\n\nexport class UpdateNotificationDto extends PartialType(CreateNotificationDto) {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePercelDto.html":{"url":"classes/UpdatePercelDto.html","title":"class - UpdatePercelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePercelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percel/dto/update-percel.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePercelDto } from './create-percel.dto';\n\nexport class UpdatePercelDto extends PartialType(CreatePercelDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePresenceDto.html":{"url":"classes/UpdatePresenceDto.html","title":"class - UpdatePresenceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePresenceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/presence/dto/update-presence.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/presence/dto/update-presence.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePresenceDto } from './create-presence.dto';\n\nexport class UpdatePresenceDto extends PartialType(CreatePresenceDto) {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProfileDto } from './create-profile.dto';\n\nexport class UpdateProfileDto extends PartialType(CreateProfileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRouteDto.html":{"url":"classes/UpdateRouteDto.html","title":"class - UpdateRouteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRouteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routes/dto/update-route.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRouteDto } from './create-route.dto';\n\nexport class UpdateRouteDto extends PartialType(CreateRouteDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSaccoDto.html":{"url":"classes/UpdateSaccoDto.html","title":"class - UpdateSaccoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSaccoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/saccos/dto/update-sacco.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSaccoDto } from './create-sacco.dto';\n\nexport class UpdateSaccoDto extends PartialType(CreateSaccoDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStationDto.html":{"url":"classes/UpdateStationDto.html","title":"class - UpdateStationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stations/dto/update-station.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateStationDto } from './create-station.dto';\n\nexport class UpdateStationDto extends PartialType(CreateStationDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTicketDto.html":{"url":"classes/UpdateTicketDto.html","title":"class - UpdateTicketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTicketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tickets/dto/update-ticket.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTicketDto } from './create-ticket.dto';\n\nexport class UpdateTicketDto extends PartialType(CreateTicketDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n // @IsString()\n  readonly _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateVehicleDto.html":{"url":"classes/UpdateVehicleDto.html","title":"class - UpdateVehicleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateVehicleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicles/dto/update-vehicle.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                destinationStation\n                            \n                            \n                                    \n                                    Optional\n                                driver\n                            \n                            \n                                    \n                                    Optional\n                                inQueue\n                            \n                            \n                                    \n                                    Optional\n                                lastAvailability\n                            \n                            \n                                    \n                                    Optional\n                                lastStation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/update-vehicle.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        destinationStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/update-vehicle.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        driver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/update-vehicle.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        inQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/update-vehicle.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastAvailability\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/update-vehicle.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/dto/update-vehicle.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateVehicleDto } from './create-vehicle.dto';\nimport { Types } from 'mongoose';\nimport { IsString } from 'class-validator';\n\nexport class UpdateVehicleDto extends PartialType(CreateVehicleDto) {\n  @IsString()\n  _id?: string;\n\n  @IsString()\n  driver?: string | Types.ObjectId;\n\n  @IsString()\n  lastAvailability?: string;\n\n  @IsString()\n  lastStation?: string;\n  destinationStation?: string;\n\n  @IsString()\n  inQueue?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateVehicleOwnerDto.html":{"url":"classes/UpdateVehicleOwnerDto.html","title":"class - UpdateVehicleOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateVehicleOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicle-owners/dto/update-vehicle-owner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/dto/update-vehicle-owner.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateVehicleOwnerDto } from './create-vehicle-owner.dto';\nimport { IsString } from 'class-validator';\n\nexport class UpdateVehicleOwnerDto extends PartialType(\n  CreateVehicleOwnerDto,\n) {\n  @IsString()\n  _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schema/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addedBy\n                            \n                            \n                                    \n                                addedOn\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                idNo\n                            \n                            \n                                    \n                                lastLogin\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                permission\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                photoURL\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                sacco\n                            \n                            \n                                    \n                                secondName\n                            \n                            \n                                    \n                                station\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                uid\n                            \n                            \n                                    \n                                upadatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                vehicle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        photoURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         \"Super User\" | \"general admin\" | \"admin\" | \"station manager\" | \"accountant\" | \"station agent\" | \"driver\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sacco\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Sacco', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        secondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        station\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Station', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upadatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vehicle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Vehicle', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\nimport { Permission } from 'src/types/permission';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({ required: false })\n  uid: string;\n\n  @Prop({ required: true })\n  firstName: string;\n\n  @Prop({ required: true })\n  secondName: string;\n\n  @Prop({ required: true })\n  idNo: string;\n\n  @Prop({ default: '' })\n  password: string;\n\n  @Prop({ required: true })\n  phone: string;\n\n  @Prop({ default: 1 })\n  level: number;\n\n  @Prop({ required: false })\n  email: string;\n\n  @Prop({ required: true })\n  photoURL: string;\n\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: 'Vehicle',\n    required: false,\n  })\n  vehicle: Types.ObjectId;\n\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: 'Sacco',\n    required: false,\n  })\n  sacco: Types.ObjectId | string;\n\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: 'Station',\n    required: false,\n  })\n  station: Types.ObjectId | string;\n\n  @Prop({ required: true })\n  role:\n    | 'Super User'\n    | 'general admin'\n    | 'admin'\n    | 'station manager'\n    | 'accountant'\n    | 'station agent'\n    | 'driver';\n\n  @Prop({ required: false })\n  permission: Permission;\n\n  @Prop({ default: 'active' })\n  status: string;\n\n  @Prop({ default: null, required: false })\n  lastLogin: Date;\n\n  @Prop({ default: () => Date.now() })\n  addedOn: Date;\n\n  @Prop({ default: () => Date.now() })\n  upadatedAt: Date;\n\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: 'User',\n    required: false,\n  })\n  addedBy: Types.ObjectId | string;\n\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: 'User',\n    required: false,\n  })\n  updatedBy: Types.ObjectId | string;\n\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: 'User',\n    required: false,\n  })\n  deletedBy: Types.ObjectId | string;\n\n  @Prop({ default: false })\n  refreshToken: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                assingManager\n                            \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                deleteUser\n                            \n                            \n                                    \n                                findAgentsInStation\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findById\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                findStationManager\n                            \n                            \n                                    \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        assingManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    assingManager(queryData: literal type, currentUser: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('assign-station-manager')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryData\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto, currentUser: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add-user')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string, currentUser: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete-user/:id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAgentsInStation\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAgentsInStation(currentUser: JwtPayload, station: FindStationAgentsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('station-agents')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    station\n                                    \n                                                FindStationAgentsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: JwtPayload, query: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(idNo: literal type, currentUser: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-by-id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idNo\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, currentUser: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findStationManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    findStationManager(currentUser: JwtPayload, station: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('station-manager')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    station\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: string, updateUserDto: UpdateUserDto, currentUser: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('update-user/:id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { FindStationAgentsDto } from './dto/find-station-agents.dto';\n\n@UseGuards(JwtGuard)\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post('add-user')\n  create(\n    @Body() createUserDto: CreateUserDto,\n    @CurrentUser() currentUser: JwtPayload,\n  ) {\n    return this.usersService.addUser(createUserDto, currentUser);\n  }\n\n  @Get()\n  findAll(\n    @CurrentUser() currentUser: JwtPayload,\n    @Query() query: any,\n  ) {\n    return this.usersService.findAllUsers(currentUser, query);\n  }\n\n  @Get('user/:id')\n  findOne(\n    @Param('id') id: string,\n    @CurrentUser() currentUser: JwtPayload,\n  ) {\n    return this.usersService.findUser(id, currentUser);\n  }\n\n  @Get('find-by-id')\n  findById(\n    @Query() idNo: { idNo: string },\n    @CurrentUser() currentUser: JwtPayload,\n  ) {\n    return this.usersService.findUserById(idNo, currentUser);\n  }\n\n  @Patch('update-user/:id')\n  updateUser(\n    @Param('id') id: string,\n    @Body() updateUserDto: UpdateUserDto,\n    @CurrentUser() currentUser: JwtPayload,\n  ) {\n    return this.usersService.updateUser(\n      id,\n      updateUserDto,\n      currentUser,\n    );\n  }\n\n  @Delete('delete-user/:id')\n  deleteUser(\n    @Param('id') id: string,\n    @CurrentUser() currentUser: JwtPayload,\n  ) {\n    return this.usersService.deleteUser(id, currentUser);\n  }\n\n  @Get('station-agents')\n  findAgentsInStation(\n    @CurrentUser() currentUser: JwtPayload,\n    @Query() station: FindStationAgentsDto,\n  ) {\n    return this.usersService.findAgentsInStation(\n      currentUser,\n      station,\n    );\n  }\n\n  @Get('station-manager')\n  findStationManager(\n    @CurrentUser() currentUser: JwtPayload,\n    @Query() station: { station: string },\n  ) {\n    return this.usersService.findStationManager(currentUser, station);\n  }\n\n  @Patch('assign-station-manager')\n  assingManager(\n    @Query() queryData: { station: string; userId: string },\n    @CurrentUser() currentUser: JwtPayload,\n  ) {\n    return this.usersService.assingManager(queryData, currentUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schema/user.schema';\nimport {\n  Sacco,\n  SaccoSchema,\n} from 'src/saccos/schema/sacco.schema';\n\n@Module({\n  controllers: [UsersController],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Sacco.name, schema: SaccoSchema },\n    ]),\n  ],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                assingManager\n                            \n                            \n                                    Async\n                                checkIfUserExists\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findAgentsInStation\n                            \n                            \n                                    Async\n                                findAllUsers\n                            \n                            \n                                    Async\n                                findStationManager\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                findUserById\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(createUserDto: CreateUserDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:88\n                \n            \n\n\n            \n                \n                    Add User\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        assingManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    assingManager(queryData: literal type, currentUser: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryData\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkIfUserExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfUserExists(idNo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idNo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:340\n                \n            \n\n\n            \n                \n                    Delete a User\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAgentsInStation\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAgentsInStation(user: JwtPayload, station: FindStationAgentsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:395\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    station\n                                    \n                                                FindStationAgentsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUsers(currentUser: JwtPayload, query: any)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:140\n                \n            \n\n\n            \n                \n                    Find All Users\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findStationManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    findStationManager(user: JwtPayload, station: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:434\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    station\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(idNo: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:189\n                \n            \n\n\n            \n                \n                    Find a User\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idNo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserById(idNo: literal type, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:234\n                \n            \n\n\n            \n                \n                    Find a User\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idNo\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: string, updateUserDto: UpdateUserDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:285\n                \n            \n\n\n            \n                \n                    Update a User\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  HttpStatus,\n  Injectable,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { FindStationAgentsDto } from './dto/find-station-agents.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User, UserDocument } from './schema/user.schema';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name)\n    private userModel: Model,\n  ) {}\n\n  async assingManager(\n    queryData: { station: string; userId: string },\n    currentUser: JwtPayload,\n  ) {\n    try {\n      const user = await this.userModel.findById(queryData.userId);\n      if (!user) {\n        throw new HttpException(\n          'User not found',\n          HttpStatus.NOT_FOUND,\n        );\n      }\n\n      if (user.role !== 'station manager') {\n        throw new HttpException(\n          'You can only assign station manager to as managers',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n\n      if (user.station) {\n        throw new HttpException(\n          'User already assigned to a station',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n\n      if (\n        currentUser.role == 'admin' ||\n        currentUser.role == 'Super User' ||\n        currentUser.role == 'general admin'\n      ) {\n        await this.userModel.findByIdAndUpdate(queryData.userId, {\n          station: queryData.station,\n        });\n      } else {\n        throw new HttpException(\n          'You are not allowed to assign station manager',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n      throw new HttpException(\n        'User Added to station successfully',\n        HttpStatus.OK,\n      );\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async checkIfUserExists(idNo: string): Promise {\n    const exists = await this.userModel.exists({\n      idNo: idNo,\n    });\n    if (exists) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * ### Add User\n   *\n   * @param createUserDto\n   * @param user\n   * @returns Object\n   */\n  async addUser(createUserDto: CreateUserDto, user: JwtPayload) {\n    if (await this.checkIfUserExists(createUserDto.idNo)) {\n      if (\n        user.role === 'Super User' ||\n        user.role === 'admin' ||\n        user.role === 'general admin'\n      ) {\n        await this.userModel.create({\n          ...createUserDto,\n          status: 'active',\n          sacco: user.sacco,\n          createdBy: user._id,\n          updatedBy: user._id,\n        });\n        throw new HttpException(\n          'User created successfully',\n          HttpStatus.CREATED,\n        );\n      } else if (user.role === 'station manager') {\n        if (createUserDto.role === 'station agent') {\n          await this.userModel.create({\n            ...createUserDto,\n            status: 'active',\n            station: user.station,\n            sacco: user.sacco,\n            createdBy: user._id,\n            updatedBy: user._id,\n          });\n          throw new HttpException(\n            'User created successfully',\n            HttpStatus.CREATED,\n          );\n        }\n      } else {\n        throw new HttpException(\n          'You are not allowed to perform this action',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n    } else {\n      throw new HttpException(\n        'User already exists',\n        HttpStatus.CONFLICT,\n      );\n    }\n  }\n\n  /**\n   * ### Find All Users\n   * @param currentUser\n   * @returns Array\n   */\n  async findAllUsers(currentUser: JwtPayload, query: any) {\n    switch (currentUser.role) {\n      case 'Super User':\n        return await this.userModel\n          .find({\n            sacco: currentUser.sacco,\n            ...query,\n          })\n          .select('-password -refreshToken');\n      case 'general admin':\n        return await this.userModel\n          .find({\n            sacco: currentUser.sacco,\n            ...query,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n      case 'admin':\n        return await this.userModel\n          .find({\n            sacco: currentUser.sacco,\n            ...query,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n      case 'station manager':\n        return await this.userModel\n          .find({\n            station: currentUser.station,\n            ...query,\n          })\n          .or([\n            { role: 'station agent' },\n            { role: 'driver' },\n            { role: 'station manager' },\n          ]);\n      default:\n        return await this.userModel\n          .find({\n            _id: currentUser._id,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n    }\n  }\n\n  /**\n   * ### Find a User\n   * @param idNo\n   * @param user\n   * @returns Object\n   * */\n  async findUser(idNo: string, user: JwtPayload) {\n    switch (user.role) {\n      case 'Super User':\n        return this.userModel\n          .findById(idNo)\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n\n      case 'general admin':\n        return this.userModel\n          .findOne({\n            sacco: user.sacco,\n            _id: idNo,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n\n      case 'admin':\n        return this.userModel\n          .findOne({\n            sacco: user.sacco,\n            _id: idNo,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n\n      case 'station manager':\n        return this.userModel\n          .findOne({\n            station: user.station,\n            __id: idNo,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n\n      default:\n        throw new HttpException(\n          'You are not allowed to perform this action',\n          HttpStatus.FORBIDDEN,\n        );\n    }\n  }\n\n  /**\n   * ### Find a User\n   * @param idNo\n   * @param user\n   * @returns Object\n   * */\n  async findUserById(idNo: { idNo: string }, user: JwtPayload) {\n    switch (user.role) {\n      case 'Super User':\n        return this.userModel\n          .findOne({\n            idNo,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n\n      case 'general admin':\n        return this.userModel\n          .findOne({\n            sacco: user.sacco,\n            idNo,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n\n      case 'admin':\n        return this.userModel\n          .findOne({\n            sacco: user.sacco,\n            idNo,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n\n      case 'station manager':\n        return this.userModel\n          .findOne({\n            station: user.station,\n            idNo,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n\n      default:\n        throw new HttpException(\n          'You are not allowed to perform this action',\n          HttpStatus.FORBIDDEN,\n        );\n    }\n  }\n\n  /**\n   * ### Update a User\n   *\n   * @param id\n   * @param updateUserDto\n   * @param user\n   * @returns Object\n   *\n   * */\n\n  async updateUser(\n    id: string,\n    updateUserDto: UpdateUserDto,\n    user: JwtPayload,\n  ) {\n    if (\n      user.role === 'Super User' ||\n      user.role === 'admin' ||\n      user.role === 'general admin'\n    ) {\n      const UpdatingUser = await this.userModel.findById(id);\n      if (UpdatingUser.sacco == user.sacco) {\n        return await this.userModel\n          .findByIdAndUpdate(id, {\n            ...updateUserDto,\n            updatedAt: Date.now(),\n            updatedBy: user._id,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n      }\n      throw new HttpException(\n        'You are not allowed to perform this action as a general admin',\n        HttpStatus.FORBIDDEN,\n      );\n    } else if (user.role === 'station manager') {\n      const UpdatingUser = await this.userModel.findById(id);\n      if (\n        UpdatingUser.station == user.station &&\n        UpdatingUser.role == 'station agent'\n      ) {\n        return await this.userModel\n          .findByIdAndUpdate(id, {\n            ...updateUserDto,\n            updatedAt: Date.now(),\n            updatedBy: user._id,\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n      }\n    } else {\n      throw new HttpException(\n        'You are not allowed to perform this action',\n        HttpStatus.FORBIDDEN,\n      );\n    }\n  }\n\n  /**\n   * ### Delete a User\n   *\n   * @param id\n   * @param user\n   * @returns\n   *\n   */\n\n  async deleteUser(id: string, user: JwtPayload) {\n    try {\n      const deletingUser = await this.userModel.findById(id);\n      if (deletingUser.role === 'Super User') {\n        throw new HttpException(\n          'You are not allowed to perform this action',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n\n      if (user.role === 'Super User') {\n        await this.userModel.findByIdAndDelete(id);\n        return 'User deleted successfully';\n      } else if (\n        user.role === 'admin' ||\n        user.role === 'general admin'\n      ) {\n        if (\n          // TODO: only delete user in a sacoo\n          // !currently not working\n          // deletingUser.sacco === user.sacco &&\n          deletingUser.role !== 'general admin'\n        ) {\n          await this.userModel.findByIdAndDelete(id);\n          throw new HttpException('Delete Success', HttpStatus.OK);\n        }\n        throw new HttpException(\n          'You are not allowed to perform this action',\n          HttpStatus.FORBIDDEN,\n        );\n      } else if (user.role === 'station manager') {\n        if (\n          // TODO: only delete user in a station\n          // !currently not working\n          // deletingUser.station === user.station &&\n          deletingUser.role === 'station agent'\n        ) {\n          await this.userModel.findByIdAndDelete(id);\n          return 'User deleted successfully';\n        }\n        throw new HttpException(\n          'You are not allowed to perform this action',\n          HttpStatus.FORBIDDEN,\n        );\n      } else {\n        throw new HttpException(\n          'You are not allowed to perform this action',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async findAgentsInStation(\n    user: JwtPayload,\n    station: FindStationAgentsDto,\n  ) {\n    try {\n      if (\n        user.role === 'admin' ||\n        user.role === 'general admin' ||\n        user.role === 'Super User'\n      ) {\n        return await this.userModel\n          .find({\n            sacco: user.sacco,\n            station: station.station,\n            role: 'station agent',\n          })\n\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n      } else if (user.role === 'station manager') {\n        return await this.userModel\n          .find({\n            station: user.station,\n            role: 'station agent',\n          })\n          .select('-password -refreshToken -upadatedAt -updatedBy');\n      }\n\n      throw new HttpException(\n        'You are not allowed to perform this action',\n        HttpStatus.FORBIDDEN,\n      );\n    } catch (error) {\n      throw new HttpException(\n        error.message,\n        error.status ?? HttpStatus.NOT_FOUND,\n      );\n    }\n  }\n\n  async findStationManager(\n    user: JwtPayload,\n    station: { station: string },\n  ) {\n    try {\n      return await this.userModel\n        .findOne({\n          sacco: user.sacco,\n          station: station.station,\n          role: 'station manager',\n        })\n        .select('phone photoURL firstName secondName email idNo');\n    } catch (error) {\n      throw new HttpException(\n        error.message,\n        error.status ?? HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vehicle.html":{"url":"classes/Vehicle.html","title":"class - Vehicle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vehicle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicles/schema/vehicle.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addedBy\n                            \n                            \n                                    \n                                addedOn\n                            \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                currentStation\n                            \n                            \n                                    \n                                driver\n                            \n                            \n                                    \n                                imageURL\n                            \n                            \n                                    \n                                lastStation\n                            \n                            \n                                    \n                                make\n                            \n                            \n                                    \n                                model\n                            \n                            \n                                    \n                                nextStation\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                plateNo\n                            \n                            \n                                    \n                                sacco\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                upadatedAt\n                            \n                            \n                                    \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currentStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Station', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        driver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Station', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        make\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nextStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Station', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'VehicleOwner', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        plateNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sacco\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Sacco', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upadatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicles/schema/vehicle.schema.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\n\nexport type VehicleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Vehicle {\n  @Prop({ required: true })\n  plateNo: string;\n\n  @Prop({ required: true })\n  make: string;\n\n  @Prop({ required: true })\n  model: string;\n\n  @Prop({ required: true })\n  year: number;\n\n  @Prop({ required: true })\n  color: string;\n\n  @Prop({ required: true })\n  type: string;\n\n  @Prop({ required: false })\n  imageURL: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User', required: false })\n  driver: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'VehicleOwner', required: true })\n  owner: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Sacco', required: true })\n  sacco: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User', required: true })\n  addedBy: Types.ObjectId;\n\n  @Prop({ default: () => Date.now() })\n  addedOn: Date;\n\n  @Prop({ default: () => Date.now() })\n  upadatedAt: Date;\n\n  @Prop({ default: 'active' })\n  status: string;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Station', required: false })\n  lastStation: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Station', required: false })\n  currentStation: Types.ObjectId;\n\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Station', required: false })\n  nextStation: Types.ObjectId;\n}\n\nexport const VehicleSchema = SchemaFactory.createForClass(Vehicle);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VehicleOwner.html":{"url":"classes/VehicleOwner.html","title":"class - VehicleOwner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VehicleOwner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicle-owners/schema/vehicle-owner.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addedBy\n                            \n                            \n                                    \n                                addedOn\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                idNo\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                photoURL\n                            \n                            \n                                    \n                                sacco\n                            \n                            \n                                    \n                                secondName\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                upadatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, immutable: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: () => , immutable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        photoURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sacco\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        secondName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upadatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vehicle-owners/schema/vehicle-owner.schema.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\n\nexport type VehicleOwnerDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class VehicleOwner {\n  @Prop({ required: true })\n  firstName: string;\n\n  @Prop({ required: true })\n  secondName: string;\n\n  @Prop({ required: true })\n  idNo: string;\n\n  @Prop({ required: true })\n  phone: string;\n\n  @Prop({ required: false })\n  email: string;\n\n  @Prop({ required: true })\n  photoURL: string;\n\n  @Prop({\n    required: false,\n    default: () => Date.now(),\n    immutable: true,\n  })\n  addedOn: Date;\n\n  @Prop({ required: true, type: SchemaTypes.ObjectId })\n  sacco: Types.ObjectId;\n\n  @Prop({ required: true })\n  status: string;\n\n  @Prop({\n    required: false,\n    immutable: true,\n    type: SchemaTypes.ObjectId,\n  })\n  addedBy: Types.ObjectId;\n\n  @Prop({ required: false })\n  upadatedAt: Date;\n\n  @Prop({\n    required: false,\n    type: SchemaTypes.ObjectId,\n  })\n  updatedBy: Types.ObjectId;\n}\n\nexport const VehicleOwnerSchema = SchemaFactory.createForClass(VehicleOwner);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VehicleOwnersController.html":{"url":"controllers/VehicleOwnersController.html","title":"controller - VehicleOwnersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VehicleOwnersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicle-owners/vehicle-owners.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vehicle-owners\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addVehicleOwner\n                            \n                            \n                                    \n                                deleteVehicleOwner\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        addVehicleOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVehicleOwner(createVehicleOwnerDto: CreateVehicleOwnerDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add-vehicle-owner')\n                \n            \n\n            \n                \n                    Defined in src/vehicle-owners/vehicle-owners.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createVehicleOwnerDto\n                                    \n                                                CreateVehicleOwnerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        deleteVehicleOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteVehicleOwner(id: string, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')\n                \n            \n\n            \n                \n                    Defined in src/vehicle-owners/vehicle-owners.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/vehicle-owners/vehicle-owners.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/vehicle-owners/vehicle-owners.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateVehicleOwnerDto: UpdateVehicleOwnerDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('upadate-vehicle-owner/:id')\n                \n            \n\n            \n                \n                    Defined in src/vehicle-owners/vehicle-owners.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateVehicleOwnerDto\n                                    \n                                                UpdateVehicleOwnerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { VehicleOwnersService } from './vehicle-owners.service';\nimport { CreateVehicleOwnerDto } from './dto/create-vehicle-owner.dto';\nimport { UpdateVehicleOwnerDto } from './dto/update-vehicle-owner.dto';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { JwtPayload } from 'src/types/jwt-payload';\n\n@UseGuards(JwtGuard)\n@Controller('vehicle-owners')\nexport class VehicleOwnersController {\n  constructor(private readonly vehicleOwnersService: VehicleOwnersService) {}\n\n  @Post('add-vehicle-owner')\n  addVehicleOwner(\n    @Body() createVehicleOwnerDto: CreateVehicleOwnerDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.vehicleOwnersService.addVehicleOwner(\n      createVehicleOwnerDto,\n      user,\n    );\n  }\n\n  @Get()\n  findAll(@CurrentUser() user: JwtPayload) {\n    return this.vehicleOwnersService.findAll(user);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string, @CurrentUser() user: JwtPayload) {\n    return this.vehicleOwnersService.findOne(id, user);\n  }\n\n  @Patch('upadate-vehicle-owner/:id')\n  update(\n    @Param('id') id: string,\n    @Body() updateVehicleOwnerDto: UpdateVehicleOwnerDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.vehicleOwnersService.update(id, updateVehicleOwnerDto, user);\n  }\n\n  @Delete('delete/:id')\n  deleteVehicleOwner(@Param('id') id: string, @CurrentUser() user: JwtPayload) {\n    return this.vehicleOwnersService.deleteVehicleOwner(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VehicleOwnersModule.html":{"url":"modules/VehicleOwnersModule.html","title":"module - VehicleOwnersModule","body":"\n                   \n\n\n\n\n    Modules\n    VehicleOwnersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VehicleOwnersModule\n\n\n\ncluster_VehicleOwnersModule_providers\n\n\n\n\nVehicleOwnersService\n\nVehicleOwnersService\n\n\n\nVehicleOwnersModule\n\nVehicleOwnersModule\n\nVehicleOwnersModule -->\n\nVehicleOwnersService->VehicleOwnersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vehicle-owners/vehicle-owners.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VehicleOwnersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VehicleOwnersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VehicleOwnersService } from './vehicle-owners.service';\nimport { VehicleOwnersController } from './vehicle-owners.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  VehicleOwner,\n  VehicleOwnerSchema,\n} from './schema/vehicle-owner.schema';\nimport { Sacco, SaccoSchema } from 'src/saccos/schema/sacco.schema';\nimport { Vehicle, VehicleSchema } from 'src/vehicles/schema/vehicle.schema';\n\n@Module({\n  controllers: [VehicleOwnersController],\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: VehicleOwner.name,\n        schema: VehicleOwnerSchema,\n      },\n      {\n        name: Sacco.name,\n        schema: SaccoSchema,\n      },\n      {\n        name: Vehicle.name,\n        schema: VehicleSchema,\n      },\n    ]),\n  ],\n  providers: [VehicleOwnersService],\n})\nexport class VehicleOwnersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VehicleOwnersService.html":{"url":"injectables/VehicleOwnersService.html","title":"injectable - VehicleOwnersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VehicleOwnersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicle-owners/vehicle-owners.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addVehicleOwner\n                            \n                            \n                                    Async\n                                deleteVehicleOwner\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vehicleOwnerModel: Model, vehicleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/vehicle-owners/vehicle-owners.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vehicleOwnerModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vehicleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addVehicleOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVehicleOwner(createVehicleOwnerDto: CreateVehicleOwnerDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicle-owners/vehicle-owners.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createVehicleOwnerDto\n                                    \n                                                CreateVehicleOwnerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteVehicleOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteVehicleOwner(id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicle-owners/vehicle-owners.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicle-owners/vehicle-owners.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicle-owners/vehicle-owners.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateVehicleOwnerDto: UpdateVehicleOwnerDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicle-owners/vehicle-owners.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateVehicleOwnerDto\n                                    \n                                                UpdateVehicleOwnerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateVehicleOwnerDto } from './dto/create-vehicle-owner.dto';\nimport { UpdateVehicleOwnerDto } from './dto/update-vehicle-owner.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { VehicleOwner } from './schema/vehicle-owner.schema';\nimport { Model } from 'mongoose';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { Vehicle, VehicleSchema } from 'src/vehicles/schema/vehicle.schema';\n\n@Injectable()\nexport class VehicleOwnersService {\n  constructor(\n    @InjectModel(VehicleOwner.name)\n    private vehicleOwnerModel: Model,\n    @InjectModel(Vehicle.name)\n    private vehicleModel: Model,\n  ) {}\n\n  async addVehicleOwner(\n    createVehicleOwnerDto: CreateVehicleOwnerDto,\n    user: JwtPayload,\n  ) {\n    if (\n      user.role === 'Super User' ||\n      user.role === 'admin' ||\n      user.role === 'general admin'\n    ) {\n      await this.vehicleOwnerModel.create({\n        ...createVehicleOwnerDto,\n        sacco: user.sacco,\n        status: 'active',\n        createdBy: user._id,\n        updatedBy: user._id,\n      });\n      throw new HttpException(\n        'Vehicle Owner created successfully',\n        HttpStatus.CREATED,\n      );\n    }\n    throw new HttpException(\n      'You Do Not Have Permission Add Vehicle Owner',\n      HttpStatus.FORBIDDEN,\n    );\n  }\n\n  async findAll(user: JwtPayload) {\n    if (\n      user.role === 'Super User' ||\n      user.role === 'admin' ||\n      user.role === 'general admin'\n    ) {\n      return await this.vehicleOwnerModel\n        .find({ sacco: user.sacco })\n        .select('-__v');\n    }\n    throw new HttpException(\n      'You Do Not Have Permission To View Vehicle Owners',\n      HttpStatus.FORBIDDEN,\n    );\n  }\n\n  findOne(id: string, user: JwtPayload) {\n    if (\n      user.role === 'Super User' ||\n      user.role === 'admin' ||\n      user.role === 'general admin'\n    ) {\n      return this.vehicleOwnerModel.findOne({ _id: id });\n    }\n    throw new HttpException(\n      'You Do Not Have Permission To View Vehicle Owner',\n      HttpStatus.FORBIDDEN,\n    );\n  }\n  update(\n    id: string,\n    updateVehicleOwnerDto: UpdateVehicleOwnerDto,\n    user: JwtPayload,\n  ) {\n    if (\n      user.role === 'Super User' ||\n      user.role === 'admin' ||\n      user.role === 'general admin'\n    ) {\n      return this.vehicleOwnerModel.updateOne(\n        { _id: id },\n        {\n          ...updateVehicleOwnerDto,\n          updatedBy: user._id,\n          upadatedAt: new Date(),\n        },\n      );\n    }\n    throw new HttpException(\n      'You Do Not Have Permission To Update Vehicle Owner',\n      HttpStatus.FORBIDDEN,\n    );\n  }\n\n  async deleteVehicleOwner(id: string, user: JwtPayload) {\n    if (\n      user.role === 'Super User' ||\n      user.role === 'admin' ||\n      user.role === 'general admin'\n    ) {\n      const vehicleOwner = await this.vehicleOwnerModel.exists({\n        owner: id,\n      });\n      if (vehicleOwner) {\n        throw new HttpException(\n          'Vehicle Owner Has existing Vehicles',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n      await this.vehicleOwnerModel.findByIdAndDelete(id);\n      throw new HttpException(\n        'Vehicle Owner Deleted Successfully',\n        HttpStatus.OK,\n      );\n    }\n    throw new HttpException(\n      'You Do Not Have Permission To Delete Vehicle Owner',\n      HttpStatus.FORBIDDEN,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VehiclesController.html":{"url":"controllers/VehiclesController.html","title":"controller - VehiclesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VehiclesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicles/vehicles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vehicles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addToStation\n                            \n                            \n                                    \n                                addVehicle\n                            \n                            \n                                    \n                                assignDriver\n                            \n                            \n                                    \n                                deleteVehicle\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                getDriverVehicles\n                            \n                            \n                                    \n                                getOwnerVehicles\n                            \n                            \n                                    \n                                updateVehicle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        addToStation\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToStation(user: JwtPayload, vehicle: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add-to-station')\n                \n            \n\n            \n                \n                    Defined in src/vehicles/vehicles.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vehicle\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        addVehicle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVehicle(createVehicleDto: CreateVehicleDto, user: JwtPayload, vehicleOwner: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add-vehicle')\n                \n            \n\n            \n                \n                    Defined in src/vehicles/vehicles.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createVehicleDto\n                                    \n                                                CreateVehicleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vehicleOwner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        assignDriver\n                        \n                    \n                \n            \n            \n                \n                    \n                    assignDriver(user: JwtPayload, updateVehicleDto: UpdateDriverDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('assign-driver')\n                \n            \n\n            \n                \n                    Defined in src/vehicles/vehicles.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateVehicleDto\n                                    \n                                                UpdateDriverDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        deleteVehicle\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteVehicle(id: string, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete-vehicle/:id')\n                \n            \n\n            \n                \n                    Defined in src/vehicles/vehicles.controller.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: JwtPayload, query: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/vehicles/vehicles.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('vehicle/:id')\n                \n            \n\n            \n                \n                    Defined in src/vehicles/vehicles.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDriverVehicles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDriverVehicles(user: JwtPayload, driver: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('driver/:vehicleID')\n                \n            \n\n            \n                \n                    Defined in src/vehicles/vehicles.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    driver\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getOwnerVehicles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOwnerVehicles(user: JwtPayload, vehicleOwner: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('vehicle-owner/:vehicleOwnerID')\n                \n            \n\n            \n                \n                    Defined in src/vehicles/vehicles.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vehicleOwner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updateVehicle\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVehicle(id: string, updateVehicleDto: UpdateVehicleDto, user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('upadate-vehicle/:id')\n                \n            \n\n            \n                \n                    Defined in src/vehicles/vehicles.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateVehicleDto\n                                    \n                                                UpdateVehicleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { VehiclesService } from './vehicles.service';\nimport { CreateVehicleDto } from './dto/create-vehicle.dto';\nimport { UpdateVehicleDto } from './dto/update-vehicle.dto';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { CurrentUser } from 'src/common/decorators/current-user.decorator';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { UpdateDriverDto } from './dto/update-driver.dto';\n\n@UseGuards(JwtGuard)\n@Controller('vehicles')\nexport class VehiclesController {\n  constructor(private readonly vehiclesService: VehiclesService) {}\n\n  @Post('add-vehicle')\n  addVehicle(\n    @Body() createVehicleDto: CreateVehicleDto,\n    @CurrentUser() user: JwtPayload,\n    @Param('vehicleOwnerID') vehicleOwner: string,\n  ) {\n    return this.vehiclesService.addVehicle(\n      createVehicleDto,\n      user,\n      vehicleOwner,\n    );\n  }\n\n  @Get('vehicle-owner/:vehicleOwnerID')\n  getOwnerVehicles(\n    @CurrentUser() user: JwtPayload,\n    @Param('vehicleOwnerID') vehicleOwner: string,\n  ) {\n    return this.vehiclesService.getOwnerVehicles(user, vehicleOwner);\n  }\n\n  @Get('driver/:vehicleID')\n  getDriverVehicles(\n    @CurrentUser() user: JwtPayload,\n    @Param('vehicleID') driver: string,\n  ) {\n    return this.vehiclesService.getDriver(user, driver);\n  }\n\n  @Patch('assign-driver')\n  assignDriver(\n    @CurrentUser() user: JwtPayload,\n    @Body() updateVehicleDto: UpdateDriverDto,\n  ) {\n    return this.vehiclesService.assignDriver(user, updateVehicleDto);\n  }\n\n  @Get()\n  findAll(@CurrentUser() user: JwtPayload, @Query() query: any) {\n    return this.vehiclesService.findAll(user, query);\n  }\n\n  @Post('add-to-station')\n  addToStation(\n    @CurrentUser() user: JwtPayload,\n    @Body() vehicle: { plateNo: string },\n  ) {\n    return this.vehiclesService.addToStation(user, vehicle);\n  }\n\n  @Get('vehicle/:id')\n  findOne(@Param('id') id: string, @CurrentUser() user: JwtPayload) {\n    return this.vehiclesService.findOne(id, user);\n  }\n\n  @Patch('upadate-vehicle/:id')\n  updateVehicle(\n    @Param('id') id: string,\n    @Body() updateVehicleDto: UpdateVehicleDto,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.vehiclesService.updateVehicle(\n      id,\n      updateVehicleDto,\n      user,\n    );\n  }\n\n  @Delete('delete-vehicle/:id')\n  deleteVehicle(\n    @Param('id') id: string,\n    @CurrentUser() user: JwtPayload,\n  ) {\n    return this.vehiclesService.deleteVehicle(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VehiclesModule.html":{"url":"modules/VehiclesModule.html","title":"module - VehiclesModule","body":"\n                   \n\n\n\n\n    Modules\n    VehiclesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VehiclesModule\n\n\n\ncluster_VehiclesModule_providers\n\n\n\n\nVehiclesService\n\nVehiclesService\n\n\n\nVehiclesModule\n\nVehiclesModule\n\nVehiclesModule -->\n\nVehiclesService->VehiclesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vehicles/vehicles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VehiclesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VehiclesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VehiclesService } from './vehicles.service';\nimport { VehiclesController } from './vehicles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Sacco, SaccoSchema } from 'src/saccos/schema/sacco.schema';\nimport { Station, StationSchema } from 'src/stations/schema/station.schema';\nimport { User, UserSchema } from 'src/users/schema/user.schema';\nimport {\n  VehicleOwner,\n  VehicleOwnerSchema,\n} from 'src/vehicle-owners/schema/vehicle-owner.schema';\nimport { Vehicle, VehicleSchema } from './schema/vehicle.schema';\n\n@Module({\n  controllers: [VehiclesController],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Vehicle.name, schema: VehicleSchema },\n      { name: VehicleOwner.name, schema: VehicleOwnerSchema },\n      { name: Sacco.name, schema: SaccoSchema },\n      { name: Station.name, schema: StationSchema },\n      { name: User.name, schema: UserSchema },\n    ]),\n  ],\n  providers: [VehiclesService],\n})\nexport class VehiclesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VehiclesService.html":{"url":"injectables/VehiclesService.html","title":"injectable - VehiclesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VehiclesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicles/vehicles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToStation\n                            \n                            \n                                    Async\n                                addVehicle\n                            \n                            \n                                    Async\n                                assignDriver\n                            \n                            \n                                    Async\n                                checkVehicleRegNo\n                            \n                            \n                                    Async\n                                deleteVehicle\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getDriver\n                            \n                            \n                                    Async\n                                getOwnerVehicles\n                            \n                            \n                                    Async\n                                hasDriver\n                            \n                            \n                                updateVehicle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vehicleModel: Model, userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/vehicles/vehicles.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vehicleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToStation\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToStation(user: JwtPayload, query: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicles/vehicles.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addVehicle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVehicle(createVehicleDto: CreateVehicleDto, user: JwtPayload, vehicleOwner: string)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicles/vehicles.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createVehicleDto\n                                    \n                                                CreateVehicleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vehicleOwner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        assignDriver\n                        \n                    \n                \n            \n            \n                \n                    \n                    assignDriver(user: JwtPayload, updateDriverDto: UpdateDriverDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicles/vehicles.service.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDriverDto\n                                    \n                                                UpdateDriverDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkVehicleRegNo\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkVehicleRegNo(regNo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicles/vehicles.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    regNo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteVehicle\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteVehicle(id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicles/vehicles.service.ts:302\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: JwtPayload, query: any)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicles/vehicles.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicles/vehicles.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDriver\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDriver(user: JwtPayload, vehicleID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicles/vehicles.service.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vehicleID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOwnerVehicles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOwnerVehicles(user: JwtPayload, vehicleOwnerID)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicles/vehicles.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vehicleOwnerID\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hasDriver\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasDriver(user: JwtPayload, vehicleID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicles/vehicles.service.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vehicleID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateVehicle\n                        \n                    \n                \n            \n            \n                \nupdateVehicle(id: string, updateVehicleDto: UpdateVehicleDto, user: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/vehicles/vehicles.service.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateVehicleDto\n                                    \n                                                UpdateVehicleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateVehicleDto } from './dto/create-vehicle.dto';\nimport { UpdateVehicleDto } from './dto/update-vehicle.dto';\nimport { JwtPayload } from 'src/types/jwt-payload';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Vehicle, VehicleDocument } from './schema/vehicle.schema';\nimport { User, UserDocument } from 'src/users/schema/user.schema';\nimport { UpdateDriverDto } from './dto/update-driver.dto';\n\n@Injectable()\nexport class VehiclesService {\n  constructor(\n    @InjectModel(Vehicle.name)\n    private vehicleModel: Model,\n    @InjectModel(User.name) private userModel: Model,\n  ) {}\n\n  async checkVehicleRegNo(regNo: string) {\n    const exist = await this.vehicleModel.exists({ plateNo: regNo });\n    if (exist) {\n      return true;\n    }\n    return false;\n  }\n\n  async addVehicle(\n    createVehicleDto: CreateVehicleDto,\n    user: JwtPayload,\n    vehicleOwner: string,\n  ) {\n    try {\n      if (await this.checkVehicleRegNo(createVehicleDto.plateNo)) {\n        throw new HttpException(\n          'Vehicle with this registration number already exists',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      if (\n        user.role === 'Super User' ||\n        user.role === 'admin' ||\n        user.role === 'general admin'\n      ) {\n        const vehicleExists = await this.vehicleModel.exists({\n          plateNo: createVehicleDto.plateNo,\n        });\n        if (vehicleExists) {\n          throw new HttpException(\n            'Vehicle with this registration number already exists',\n            HttpStatus.BAD_REQUEST,\n          );\n        }\n\n        await this.vehicleModel.create({\n          ...createVehicleDto,\n          sacco: user.sacco,\n          vehicleOwner: user._id,\n          addedBy: user._id,\n        });\n        throw new HttpException(\n          'Vehicle added successfully',\n          HttpStatus.CREATED,\n        );\n      }\n      throw new HttpException(\n        'You dont have permision to creat vehicles',\n        HttpStatus.FORBIDDEN,\n      );\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async findAll(user: JwtPayload, query: any) {\n    try {\n      if (\n        user.role === 'Super User' ||\n        user.role === 'admin' ||\n        user.role === 'general admin'\n      ) {\n        return await this.vehicleModel\n          .find({\n            sacco: user.sacco,\n            ...query,\n          })\n          .exec();\n      } else if (user.role === 'station agent' || 'station manager') {\n        return await this.vehicleModel\n          .find({\n            sacco: user.sacco,\n            ...query,\n          })\n          .or([\n            { lastStation: user.station },\n            { currentStation: user.station },\n            { nextStation: user.station },\n          ])\n          .exec();\n      } else {\n        return [];\n      }\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async getOwnerVehicles(user: JwtPayload, vehicleOwnerID) {\n    try {\n      if (user.role === 'Super User') {\n        return await this.vehicleModel\n          .find({\n            owner: vehicleOwnerID,\n          })\n          .exec();\n      } else if (user.role === 'admin' || user.role === 'general admin') {\n        return await this.vehicleModel\n          .find({\n            owner: vehicleOwnerID,\n            sacco: user.sacco,\n          })\n          .exec();\n      } else {\n        throw new HttpException(\n          'You are not allowed to see Details of the selected vehicle',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async findOne(id: string, user: JwtPayload) {\n    if (user.role === 'Super User') {\n      return this.vehicleModel.findById(id);\n    }\n    if (user.role === 'admin' || user.role === 'general admin') {\n      return await this.vehicleModel.findOne({\n        _id: id,\n        sacco: user.sacco,\n      });\n    }\n    if (user.role === 'station agent' || user.role === 'station manager') {\n      return await this.vehicleModel\n        .findOne({\n          _id: id,\n          sacco: user.sacco,\n        })\n        .select('-owner');\n    }\n    throw new HttpException(\n      'You are not allowed to see Details of the selected vehicle',\n      HttpStatus.FORBIDDEN,\n    );\n  }\n\n  async addToStation(user: JwtPayload, query: { plateNo: string }) {\n    try {\n      if (\n        user.role === 'station manager' ||\n        user.role === 'admin' ||\n        user.role === 'general admin'\n      ) {\n        console.log(user.sacco);\n\n        const exists = await this.vehicleModel.exists({\n          plateNo: query.plateNo.toLowerCase(),\n          sacco: user.sacco,\n        });\n\n        if (!exists) {\n          throw new HttpException(\n            'Vehicle with this registration number does not exist in your sacco',\n            HttpStatus.NOT_FOUND,\n          );\n        }\n\n        let result = await this.vehicleModel.findOneAndUpdate(\n          {\n            plateNo: query.plateNo.toLowerCase(),\n          },\n          {\n            currentStation: user.station,\n            status: 'in station',\n          },\n          {\n            new: true,\n          },\n        );\n\n        if (!result) {\n          throw new HttpException(\n            'Vehicle with this registration number does not exist in your sacco',\n            HttpStatus.NOT_FOUND,\n          );\n        }\n        return result;\n      } else {\n        throw new HttpException(\n          'You are not allowed to add vehicles to station',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n    } catch (error) {\n      console.error(error);\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async hasDriver(user: JwtPayload, vehicleID: string) {\n    try {\n      const exists = await this.userModel.exists({\n        vehicle: vehicleID,\n      });\n\n      if (exists) {\n        return true;\n      }\n      return false;\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async assignDriver(user: JwtPayload, updateDriverDto: UpdateDriverDto) {\n    if (await this.hasDriver(user, updateDriverDto.vehicleID)) {\n      throw new HttpException(\n        'You are already assigned to this vehicle',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n    try {\n      const isDriver = await this.userModel.exists({\n        _id: updateDriverDto.driverID,\n        role: 'driver',\n      });\n      if (!isDriver) {\n        throw new HttpException(\n          'The selected user is not a driver',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      if (\n        (user.role === 'admin' || user.role === 'general admin',\n        user.role === 'Super User')\n      ) {\n        await this.userModel.findOneAndUpdate(\n          {\n            _id: updateDriverDto.driverID,\n            sacco: user.sacco,\n          },\n          {\n            vehicle: updateDriverDto.vehicleID,\n          },\n        );\n        throw new HttpException('Driver assigned successfully', HttpStatus.OK);\n      } else {\n        throw new HttpException(\n          'You are not allowed to assign a driver to this vehicle',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  async getDriver(user: JwtPayload, vehicleID: string) {\n    try {\n      if (user.role === 'Super User') {\n        return await this.userModel\n\n          .findOne({\n            vehicle: vehicleID,\n          })\n          .select('firstName secondName photoURL phone')\n          .exec();\n      } else {\n        return await this.userModel\n          .findOne({\n            vehicle: vehicleID,\n            sacco: user.sacco,\n          })\n          .select('firstName secondName photoURL phone')\n          .exec();\n      }\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n\n  updateVehicle(\n    id: string,\n    updateVehicleDto: UpdateVehicleDto,\n    user: JwtPayload,\n  ) {\n    return `This action updates a #${id} vehicle`;\n  }\n\n  async deleteVehicle(id: string, user: JwtPayload) {\n    try {\n      if (user.role === 'Super User') {\n        await this.vehicleModel.findByIdAndDelete(id);\n      } else if (user.role === 'admin' || user.role === 'general admin') {\n        await this.vehicleModel.findOneAndDelete({\n          _id: id,\n          sacco: user.sacco,\n        });\n      } else {\n        throw new HttpException(\n          'You are not allowed to delete this vehicle',\n          HttpStatus.FORBIDDEN,\n        );\n      }\n      throw new HttpException('Vehicle deleted successfully', HttpStatus.OK);\n    } catch (error) {\n      throw new HttpException(error.message, error.status);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                main/index.ts\n            \n            function\n            Unnamed function\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/logout.dto.ts\n            \n            class\n            LogoutDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.guard.ts\n            \n            injectable\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategy/refresh.strategy.ts\n            \n            injectable\n            RefreshStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/availabilities/availabilities.controller.ts\n            \n            controller\n            AvailabilitiesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/availabilities/availabilities.service.ts\n            \n            injectable\n            AvailabilitiesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/availabilities/availabilty.gateway.ts\n            \n            class\n            AvailabilitiesGateway\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/availabilities/dto/create-availability.dto.ts\n            \n            class\n            CreateAvailabilityDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/availabilities/dto/update-availability.dto.ts\n            \n            class\n            UpdateAvailabilityDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/availabilities/schema/availability.schema.ts\n            \n            class\n            Availability\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/availabilities/schema/availability.schema.ts\n            \n            variable\n            AvailabilitySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/booking/booking.gateway.ts\n            \n            class\n            BookingGateway\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/booking/booking.service.ts\n            \n            injectable\n            BookingService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/booking/dto/create-booking.dto.ts\n            \n            class\n            CreateBookingDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/booking/dto/update-booking.dto.ts\n            \n            class\n            UpdateBookingDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/booking/schema/booking.schema.ts\n            \n            class\n            Booking\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/chat/chat.controller.ts\n            \n            controller\n            ChatController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/chat/chat.gateway.ts\n            \n            class\n            ChatGateway\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/chat/chat.service.ts\n            \n            injectable\n            ChatService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/chat/dto/create-chat.dto.ts\n            \n            class\n            CreateChatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/chat/dto/update-chat.dto.ts\n            \n            class\n            UpdateChatDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/chat/schema/chat.schema.ts\n            \n            class\n            Chat\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/chat/schema/chat.schema.ts\n            \n            variable\n            ChatSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lipa-na-mpesa/dto/create-lipa-na-mpesa.dto.ts\n            \n            class\n            LipaDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lipa-na-mpesa/dto/lipa-na-mpesa-callback.dto.ts\n            \n            class\n            LipaNaMpesaCallbackDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lipa-na-mpesa/lipa-na-mpesa.controller.ts\n            \n            controller\n            LipaNaMpesaController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lipa-na-mpesa/lipa-na-mpesa.gateway.ts\n            \n            class\n            LipaNaMpesaGateway\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lipa-na-mpesa/lipa-na-mpesa.service.ts\n            \n            injectable\n            LipaNaMpesaService\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts\n            \n            class\n            LipaNaMpesaTransaction\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts\n            \n            variable\n            LipaNaMpesaTransactionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lipa-na-mpesa/types/stk-init-reponce.type.ts\n            \n            class\n            StkInitResponce\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.azure.ts\n            \n            function\n            createApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notifications/dto/create-notification.dto.ts\n            \n            class\n            CreateNotificationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notifications/dto/update-notification.dto.ts\n            \n            class\n            UpdateNotificationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/notifications/entities/notification.entity.ts\n            \n            class\n            Notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notifications/notifications.gateway.ts\n            \n            class\n            NotificationsGateway\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/notifications/notifications.service.ts\n            \n            injectable\n            NotificationsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/percel/dto/create-percel.dto.ts\n            \n            class\n            CreatePercelDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/percel/dto/update-percel.dto.ts\n            \n            class\n            UpdatePercelDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/percel/percel.controller.ts\n            \n            controller\n            PercelController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/percel/percel.service.ts\n            \n            injectable\n            PercelService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/percel/schema/percel.schema.ts\n            \n            class\n            Percel\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/percel/schema/percel.schema.ts\n            \n            variable\n            PercelSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/presence/dto/create-presence.dto.ts\n            \n            class\n            CreatePresenceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/presence/dto/update-presence.dto.ts\n            \n            class\n            UpdatePresenceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/presence/entities/presence.entity.ts\n            \n            class\n            Presence\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/presence/presence.gateway.ts\n            \n            class\n            PresenceGateway\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/presence/presence.service.ts\n            \n            injectable\n            PresenceService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/dto/create-profile.dto.ts\n            \n            class\n            CreateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/routes/dto/create-route.dto.ts\n            \n            class\n            CreateRouteDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/routes/dto/update-route.dto.ts\n            \n            class\n            UpdateRouteDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/routes/routes.controller.ts\n            \n            controller\n            RoutesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/routes/routes.service.ts\n            \n            injectable\n            RoutesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/routes/schema/route.schema.ts\n            \n            class\n            Route\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/routes/schema/route.schema.ts\n            \n            variable\n            RouteSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/saccos/dto/create-sacco.dto.ts\n            \n            class\n            CreateSaccoDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/saccos/dto/update-sacco.dto.ts\n            \n            class\n            UpdateSaccoDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/saccos/saccos.controller.ts\n            \n            controller\n            SaccosController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/saccos/saccos.service.ts\n            \n            injectable\n            SaccosService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/saccos/schema/sacco.schema.ts\n            \n            class\n            Sacco\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/saccos/schema/sacco.schema.ts\n            \n            variable\n            SaccoSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/Availability.ts\n            \n            class\n            Availability\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/schemas/Customer.ts\n            \n            class\n            Customer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/schemas/Parcel.ts\n            \n            class\n            Parcel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/schemas/TripHistory.ts\n            \n            variable\n            tripHistory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/TripHistory.ts\n            \n            variable\n            tripHistoryModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stations/dto/create-station.dto.ts\n            \n            class\n            CreateStationDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/stations/dto/update-station.dto.ts\n            \n            class\n            UpdateStationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stations/schema/station.schema.ts\n            \n            class\n            Station\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/stations/schema/station.schema.ts\n            \n            variable\n            StationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stations/stations.controller.ts\n            \n            controller\n            StationsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/stations/stations.service.ts\n            \n            injectable\n            StationsService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/tickets/dto/create-ticket.dto.ts\n            \n            class\n            CreateTicketDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/tickets/dto/update-ticket.dto.ts\n            \n            class\n            UpdateTicketDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tickets/schema/tickets.schema.ts\n            \n            class\n            Ticket\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/tickets/schema/tickets.schema.ts\n            \n            variable\n            TicketSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tickets/tickets.controller.ts\n            \n            controller\n            TicketController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tickets/tickets.service.ts\n            \n            injectable\n            TicketService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/types/jwt-payload.ts\n            \n            class\n            JwtPayload\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/types/permission.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/find-station-agents.dto.ts\n            \n            class\n            FindStationAgentsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/find-user-by-idNo.dto.ts\n            \n            class\n            findUserByIdNoDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schema/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/users/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/vehicle-owners/dto/create-vehicle-owner.dto.ts\n            \n            class\n            CreateVehicleOwnerDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/vehicle-owners/dto/update-vehicle-owner.dto.ts\n            \n            class\n            UpdateVehicleOwnerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/vehicle-owners/schema/vehicle-owner.schema.ts\n            \n            class\n            VehicleOwner\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/vehicle-owners/schema/vehicle-owner.schema.ts\n            \n            variable\n            VehicleOwnerSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/vehicle-owners/vehicle-owners.controller.ts\n            \n            controller\n            VehicleOwnersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/vehicle-owners/vehicle-owners.service.ts\n            \n            injectable\n            VehicleOwnersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/vehicles/dto/create-vehicle.dto.ts\n            \n            class\n            CreateVehicleDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/vehicles/dto/update-driver.dto.ts\n            \n            class\n            UpdateDriverDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/vehicles/dto/update-vehicle.dto.ts\n            \n            class\n            UpdateVehicleDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/vehicles/schema/vehicle.schema.ts\n            \n            class\n            Vehicle\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/vehicles/schema/vehicle.schema.ts\n            \n            variable\n            VehicleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/vehicles/vehicles.controller.ts\n            \n            controller\n            VehiclesController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/vehicles/vehicles.service.ts\n            \n            injectable\n            VehiclesService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^2.0.0\n        \n            @nestjs/azure-func-http : ^0.9.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/event-emitter : ^1.4.1\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mapped-types : ^1.2.2\n        \n            @nestjs/mongoose : ^9.2.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-socket.io : ^9.4.0\n        \n            @nestjs/websockets : ^9.4.0\n        \n            @schematics/angular : ^16.0.0\n        \n            @socket.io/mongo-adapter : ^0.3.0\n        \n            axios : ^1.4.0\n        \n            bson : ^5.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            mongodb : ^5.5.0\n        \n            mongoose : ^7.1.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/findUserByIdNoDTO.html":{"url":"classes/findUserByIdNoDTO.html","title":"class - findUserByIdNoDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  findUserByIdNoDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/find-user-by-idNo.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                idNo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/find-user-by-idNo.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nclass findUserByIdNoDTO {\n  @IsNotEmpty()\n  @IsString()\n  idNo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createApp   (src/.../main.azure.ts)\n                        \n                        \n                            Unnamed function   (main/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/main.azure.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createApp\n                        \n                    \n                \n            \n            \n                \ncreateApp()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    main/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Unnamed function\n                        \n                    \n                \n            \n            \n                \nUnnamed function(context: Context, req: HttpRequest)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AvailabilitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LipaNaMpesaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PercelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PresenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SaccosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TicketModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VehicleOwnersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VehiclesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AvailabilitiesModule\n\n\n\ncluster_AvailabilitiesModule_providers\n\n\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_providers\n\n\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_providers\n\n\n\ncluster_LipaNaMpesaModule\n\n\n\ncluster_LipaNaMpesaModule_providers\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_PercelModule\n\n\n\ncluster_PercelModule_providers\n\n\n\ncluster_PresenceModule\n\n\n\ncluster_PresenceModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesModule_providers\n\n\n\ncluster_SaccosModule\n\n\n\ncluster_SaccosModule_providers\n\n\n\ncluster_StationsModule\n\n\n\ncluster_StationsModule_providers\n\n\n\ncluster_TicketModule\n\n\n\ncluster_TicketModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_VehicleOwnersModule\n\n\n\ncluster_VehicleOwnersModule_providers\n\n\n\ncluster_VehiclesModule\n\n\n\ncluster_VehiclesModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAvailabilitiesModule\n\nAvailabilitiesModule\n\nAppModule -->\n\nAvailabilitiesModule->AppModule\n\n\n\n\n\nBookingModule\n\nBookingModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nChatModule\n\nChatModule\n\nAppModule -->\n\nChatModule->AppModule\n\n\n\n\n\nLipaNaMpesaModule\n\nLipaNaMpesaModule\n\nAppModule -->\n\nLipaNaMpesaModule->AppModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nAppModule -->\n\nNotificationsModule->AppModule\n\n\n\n\n\nPercelModule\n\nPercelModule\n\nAppModule -->\n\nPercelModule->AppModule\n\n\n\n\n\nPresenceModule\n\nPresenceModule\n\nAppModule -->\n\nPresenceModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nAppModule -->\n\nRoutesModule->AppModule\n\n\n\n\n\nSaccosModule\n\nSaccosModule\n\nAppModule -->\n\nSaccosModule->AppModule\n\n\n\n\n\nStationsModule\n\nStationsModule\n\nAppModule -->\n\nStationsModule->AppModule\n\n\n\n\n\nTicketModule\n\nTicketModule\n\nAppModule -->\n\nTicketModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nVehicleOwnersModule\n\nVehicleOwnersModule\n\nAppModule -->\n\nVehicleOwnersModule->AppModule\n\n\n\n\n\nVehiclesModule\n\nVehiclesModule\n\nAppModule -->\n\nVehiclesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nRefreshStrategy\n\nRefreshStrategy\n\nAuthModule -->\n\nRefreshStrategy->AuthModule\n\n\n\n\n\nAvailabilitiesService\n\nAvailabilitiesService\n\nAvailabilitiesModule -->\n\nAvailabilitiesService->AvailabilitiesModule\n\n\n\n\n\nBookingService\n\nBookingService\n\nBookingModule -->\n\nBookingService->BookingModule\n\n\n\n\n\nChatService\n\nChatService\n\nChatModule -->\n\nChatService->ChatModule\n\n\n\n\n\nLipaNaMpesaService\n\nLipaNaMpesaService\n\nLipaNaMpesaModule -->\n\nLipaNaMpesaService->LipaNaMpesaModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nPercelService\n\nPercelService\n\nPercelModule -->\n\nPercelService->PercelModule\n\n\n\n\n\nPresenceService\n\nPresenceService\n\nPresenceModule -->\n\nPresenceService->PresenceModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nRoutesService\n\nRoutesService\n\nRoutesModule -->\n\nRoutesService->RoutesModule\n\n\n\n\n\nSaccosService\n\nSaccosService\n\nSaccosModule -->\n\nSaccosService->SaccosModule\n\n\n\n\n\nStationsService\n\nStationsService\n\nStationsModule -->\n\nStationsService->StationsModule\n\n\n\n\n\nTicketService\n\nTicketService\n\nTicketModule -->\n\nTicketService->TicketModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nVehicleOwnersService\n\nVehicleOwnersService\n\nVehicleOwnersModule -->\n\nVehicleOwnersService->VehicleOwnersModule\n\n\n\n\n\nVehiclesService\n\nVehiclesService\n\nVehiclesModule -->\n\nVehiclesService->VehiclesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    62 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AvailabilityDocument   (src/.../Availability.ts)\n                        \n                        \n                            AvailabilityDocument   (src/.../availability.schema.ts)\n                        \n                        \n                            ChatDocument   (src/.../chat.schema.ts)\n                        \n                        \n                            CustomerDocument   (src/.../Customer.ts)\n                        \n                        \n                            LipaNaMpesaTransactionDocument   (src/.../lipa-na-mpesa.schema.ts)\n                        \n                        \n                            ParcelDocument   (src/.../Parcel.ts)\n                        \n                        \n                            PercelDocument   (src/.../percel.schema.ts)\n                        \n                        \n                            RouteDocument   (src/.../route.schema.ts)\n                        \n                        \n                            SaccoDocument   (src/.../sacco.schema.ts)\n                        \n                        \n                            StationDocument   (src/.../station.schema.ts)\n                        \n                        \n                            TicketDocument   (src/.../tickets.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                        \n                            VehicleDocument   (src/.../vehicle.schema.ts)\n                        \n                        \n                            VehicleOwnerDocument   (src/.../vehicle-owner.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schemas/Availability.ts\n    \n    \n        \n            \n                \n                    \n                    AvailabilityDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/availabilities/schema/availability.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AvailabilityDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/chat/schema/chat.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ChatDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/schemas/Customer.ts\n    \n    \n        \n            \n                \n                    \n                    CustomerDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LipaNaMpesaTransactionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/schemas/Parcel.ts\n    \n    \n        \n            \n                \n                    \n                    ParcelDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/percel/schema/percel.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PercelDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/routes/schema/route.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RouteDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/saccos/schema/sacco.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SaccoDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/stations/schema/station.schema.ts\n    \n    \n        \n            \n                \n                    \n                    StationDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/tickets/schema/tickets.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TicketDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schema/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/vehicles/schema/vehicle.schema.ts\n    \n    \n        \n            \n                \n                    \n                    VehicleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/vehicle-owners/schema/vehicle-owner.schema.ts\n    \n    \n        \n            \n                \n                    \n                    VehicleOwnerDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AvailabilitySchema   (src/.../availability.schema.ts)\n                        \n                        \n                            ChatSchema   (src/.../chat.schema.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            LipaNaMpesaTransactionSchema   (src/.../lipa-na-mpesa.schema.ts)\n                        \n                        \n                            PercelSchema   (src/.../percel.schema.ts)\n                        \n                        \n                            RouteSchema   (src/.../route.schema.ts)\n                        \n                        \n                            SaccoSchema   (src/.../sacco.schema.ts)\n                        \n                        \n                            StationSchema   (src/.../station.schema.ts)\n                        \n                        \n                            TicketSchema   (src/.../tickets.schema.ts)\n                        \n                        \n                            tripHistory   (src/.../TripHistory.ts)\n                        \n                        \n                            tripHistoryModel   (src/.../TripHistory.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            VehicleOwnerSchema   (src/.../vehicle-owner.schema.ts)\n                        \n                        \n                            VehicleSchema   (src/.../vehicle.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/availabilities/schema/availability.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AvailabilitySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Availability)\n                    \n                \n\n\n        \n    \n\n    src/chat/schema/chat.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ChatSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Chat)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n    if (!data) return request.user as JwtPayload;\n\n    return request.user[data];\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/lipa-na-mpesa/schema/lipa-na-mpesa.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LipaNaMpesaTransactionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(\n  LipaNaMpesaTransaction,\n)\n                    \n                \n\n\n        \n    \n\n    src/percel/schema/percel.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PercelSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Percel)\n                    \n                \n\n\n        \n    \n\n    src/routes/schema/route.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RouteSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Route)\n                    \n                \n\n\n        \n    \n\n    src/saccos/schema/sacco.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SaccoSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Sacco)\n                    \n                \n\n\n        \n    \n\n    src/stations/schema/station.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Station)\n                    \n                \n\n\n        \n    \n\n    src/tickets/schema/tickets.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TicketSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Ticket)\n                    \n                \n\n\n        \n    \n\n    src/schemas/TripHistory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tripHistory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema({\n  sacco: {\n    type: ObjectId,\n    ref: \"Sacco\",\n    required: true,\n    immutable: true,\n  },\n  currentLocation: {\n    type: String,\n    required: true,\n    immutable: true,\n  },\n  currentStation: {\n    type: ObjectId,\n    ref: \"Station\",\n    required: false,\n    immutable: true,\n  },\n  availability: {\n    type: ObjectId,\n    ref: \"Availability\",\n    required: false,\n    immutable: true,\n  },\n  vehicle: {\n    type: ObjectId,\n    ref: \"Vehicle\",\n    required: true,\n    immutable: true,\n  },\n  recievedBy: {\n    type: ObjectId,\n    ref: \"User\",\n    required: true,\n    immutable: true,\n  },\n  arrivedAt: {\n    type: Date,\n    default: () => Date.now(),\n    immutable: true,\n  },\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripHistoryModel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : model(\"TripHistory\", tripHistory)\n                    \n                \n\n\n        \n    \n\n    src/users/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n    src/vehicle-owners/schema/vehicle-owner.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VehicleOwnerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(VehicleOwner)\n                    \n                \n\n\n        \n    \n\n    src/vehicles/schema/vehicle.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VehicleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Vehicle)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
